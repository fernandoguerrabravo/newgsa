{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/application/e-commerce/Checkout/AddAddress.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Dialog, FormControl, FormControlLabel, FormHelperText, IconButton, Grid, Radio, RadioGroup, Stack, Switch, TextField, Zoom } from '@mui/material'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport HighlightOffTwoToneIcon from '@mui/icons-material/HighlightOffTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  destination: yup.string().required('Color selection is required'),\n  name: yup.string().required('Name is required'),\n  building: yup.string().required('Building no/name is required'),\n  street: yup.string().required('Street Address is required'),\n  city: yup.string().required('City is required'),\n  state: yup.string().required('State is required'),\n  post: yup.string().required('Area code is required'),\n  phone: yup.string().required('Contact no is required')\n});\nconst Transition = /*#__PURE__*/forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(Zoom, {\n  ref: ref,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 47\n}, this)); // ==============================|| CHECKOUT BILLING ADDRESS - ADD NEW ADDRESS ||============================== //\n\n_c2 = Transition;\n\nconst AddAddress = ({\n  address,\n  open,\n  handleClose,\n  addAddress,\n  editAddress\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const edit = address && address.id;\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      destination: edit ? address.destination : '',\n      name: edit ? address.name : '',\n      building: edit ? address.building : '',\n      street: edit ? address.street : '',\n      city: edit ? address.city : '',\n      state: edit ? address.state : '',\n      country: edit ? address.country : '',\n      post: edit ? address.post : '',\n      phone: edit ? address.phone : '',\n      isDefault: edit ? address.isDefault : false\n    },\n    validationSchema,\n    onSubmit: values => {\n      if (edit) {\n        editAddress({ ...values,\n          id: address.id\n        });\n      } else {\n        addAddress(values);\n      }\n\n      handleClose();\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    sx: {\n      '& .MuiDialog-paper': {\n        p: 0\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(MainCard, {\n      title: edit ? 'Edit Billing Address' : 'Add Billing Address',\n      secondary: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClose,\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(HighlightOffTwoToneIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"name\",\n              name: \"name\",\n              label: \"Name\",\n              value: formik.values.name,\n              onChange: formik.handleChange,\n              error: formik.touched.name && Boolean(formik.errors.name),\n              helperText: formik.touched.name && formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                \"aria-label\": \"destination\",\n                value: formik.values.destination,\n                onChange: formik.handleChange,\n                name: \"destination\",\n                id: \"destination\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"home\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    sx: {\n                      color: theme.palette.primary.main,\n                      '&.Mui-checked': {\n                        color: theme.palette.primary.main\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this),\n                  label: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"office\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    sx: {\n                      color: theme.palette.secondary.main,\n                      '&.Mui-checked': {\n                        color: theme.palette.secondary.main\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 45\n                  }, this),\n                  label: \"Office\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), formik.errors.destination && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-name-login\",\n              children: [' ', formik.errors.destination, ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"building\",\n              name: \"building\",\n              label: \"Building No./Name\",\n              value: formik.values.building,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.building),\n              helperText: formik.touched.building && formik.errors.building\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"street\",\n              name: \"street\",\n              label: \"Street\",\n              value: formik.values.street,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.street),\n              helperText: formik.touched.street && formik.errors.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"city\",\n              name: \"city\",\n              label: \"City\",\n              value: formik.values.city,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.city),\n              helperText: formik.touched.city && formik.errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"state\",\n              name: \"state\",\n              label: \"State\",\n              value: formik.values.state,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.state),\n              helperText: formik.touched.state && formik.errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"country\",\n              name: \"country\",\n              label: \"Country\",\n              value: formik.values.country,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.country),\n              helperText: formik.touched.country && formik.errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"post\",\n              name: \"post\",\n              label: \"Area Code\",\n              value: formik.values.post,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.post),\n              helperText: formik.touched.post && formik.errors.post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"phone\",\n              name: \"phone\",\n              label: \"Contact\",\n              value: formik.values.phone,\n              onChange: formik.handleChange,\n              error: formik.touched.building && Boolean(formik.errors.phone),\n              helperText: formik.touched.phone && formik.errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                id: \"isDefault\",\n                name: \"isDefault\",\n                checked: formik.values.isDefault,\n                onChange: formik.handleChange,\n                inputProps: {\n                  'aria-label': 'controlled'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this),\n              label: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              justifyContent: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"error\",\n                onClick: handleClose,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AnimateButton, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddAddress, \"2qXa3/El/O4OOPNNHANoo4C32jc=\", false, function () {\n  return [useTheme, useDispatch, useFormik];\n});\n\n_c3 = AddAddress;\nAddAddress.propTypes = {\n  address: PropTypes.object,\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  addAddress: PropTypes.func,\n  editAddress: PropTypes.func\n};\nexport default AddAddress;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"AddAddress\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/application/e-commerce/Checkout/AddAddress.js"],"names":["PropTypes","forwardRef","useDispatch","useTheme","Button","Dialog","FormControl","FormControlLabel","FormHelperText","IconButton","Grid","Radio","RadioGroup","Stack","Switch","TextField","Zoom","useFormik","yup","MainCard","AnimateButton","SNACKBAR_OPEN","gridSpacing","HighlightOffTwoToneIcon","validationSchema","object","destination","string","required","name","building","street","city","state","post","phone","Transition","props","ref","AddAddress","address","open","handleClose","addAddress","editAddress","theme","dispatch","edit","id","formik","enableReinitialize","initialValues","country","isDefault","onSubmit","values","type","message","variant","alertSeverity","p","handleSubmit","handleChange","touched","Boolean","errors","color","palette","primary","main","secondary","propTypes","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    IconButton,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    Stack,\r\n    Switch,\r\n    TextField,\r\n    Zoom\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport HighlightOffTwoToneIcon from '@mui/icons-material/HighlightOffTwoTone';\r\n\r\nconst validationSchema = yup.object({\r\n    destination: yup.string().required('Color selection is required'),\r\n    name: yup.string().required('Name is required'),\r\n    building: yup.string().required('Building no/name is required'),\r\n    street: yup.string().required('Street Address is required'),\r\n    city: yup.string().required('City is required'),\r\n    state: yup.string().required('State is required'),\r\n    post: yup.string().required('Area code is required'),\r\n    phone: yup.string().required('Contact no is required')\r\n});\r\n\r\nconst Transition = forwardRef((props, ref) => <Zoom ref={ref} {...props} />);\r\n\r\n// ==============================|| CHECKOUT BILLING ADDRESS - ADD NEW ADDRESS ||============================== //\r\n\r\nconst AddAddress = ({ address, open, handleClose, addAddress, editAddress }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const edit = address && address.id;\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            destination: edit ? address.destination : '',\r\n            name: edit ? address.name : '',\r\n            building: edit ? address.building : '',\r\n            street: edit ? address.street : '',\r\n            city: edit ? address.city : '',\r\n            state: edit ? address.state : '',\r\n            country: edit ? address.country : '',\r\n            post: edit ? address.post : '',\r\n            phone: edit ? address.phone : '',\r\n            isDefault: edit ? address.isDefault : false\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            if (edit) {\r\n                editAddress({ ...values, id: address.id });\r\n            } else {\r\n                addAddress(values);\r\n            }\r\n            handleClose();\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n            sx={{\r\n                '& .MuiDialog-paper': {\r\n                    p: 0\r\n                }\r\n            }}\r\n        >\r\n            <MainCard\r\n                title={edit ? 'Edit Billing Address' : 'Add Billing Address'}\r\n                secondary={\r\n                    <IconButton onClick={handleClose} size=\"large\">\r\n                        <HighlightOffTwoToneIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                label=\"Name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl>\r\n                                <RadioGroup\r\n                                    row\r\n                                    aria-label=\"destination\"\r\n                                    value={formik.values.destination}\r\n                                    onChange={formik.handleChange}\r\n                                    name=\"destination\"\r\n                                    id=\"destination\"\r\n                                >\r\n                                    <FormControlLabel\r\n                                        value=\"home\"\r\n                                        control={\r\n                                            <Radio\r\n                                                sx={{\r\n                                                    color: theme.palette.primary.main,\r\n                                                    '&.Mui-checked': { color: theme.palette.primary.main }\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                        label=\"Home\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        value=\"office\"\r\n                                        control={\r\n                                            <Radio\r\n                                                sx={{\r\n                                                    color: theme.palette.secondary.main,\r\n                                                    '&.Mui-checked': { color: theme.palette.secondary.main }\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                        label=\"Office\"\r\n                                    />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            {formik.errors.destination && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {' '}\r\n                                    {formik.errors.destination}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"building\"\r\n                                name=\"building\"\r\n                                label=\"Building No./Name\"\r\n                                value={formik.values.building}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.building)}\r\n                                helperText={formik.touched.building && formik.errors.building}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"street\"\r\n                                name=\"street\"\r\n                                label=\"Street\"\r\n                                value={formik.values.street}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.street)}\r\n                                helperText={formik.touched.street && formik.errors.street}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"city\"\r\n                                name=\"city\"\r\n                                label=\"City\"\r\n                                value={formik.values.city}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.city)}\r\n                                helperText={formik.touched.city && formik.errors.city}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"state\"\r\n                                name=\"state\"\r\n                                label=\"State\"\r\n                                value={formik.values.state}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.state)}\r\n                                helperText={formik.touched.state && formik.errors.state}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"country\"\r\n                                name=\"country\"\r\n                                label=\"Country\"\r\n                                value={formik.values.country}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.country)}\r\n                                helperText={formik.touched.country && formik.errors.country}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"post\"\r\n                                name=\"post\"\r\n                                label=\"Area Code\"\r\n                                value={formik.values.post}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.post)}\r\n                                helperText={formik.touched.post && formik.errors.post}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                label=\"Contact\"\r\n                                value={formik.values.phone}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.building && Boolean(formik.errors.phone)}\r\n                                helperText={formik.touched.phone && formik.errors.phone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Switch\r\n                                        id=\"isDefault\"\r\n                                        name=\"isDefault\"\r\n                                        checked={formik.values.isDefault}\r\n                                        onChange={formik.handleChange}\r\n                                        inputProps={{ 'aria-label': 'controlled' }}\r\n                                    />\r\n                                }\r\n                                label=\"Default\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\">\r\n                                <Button color=\"error\" onClick={handleClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <AnimateButton>\r\n                                    <Button variant=\"contained\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </AnimateButton>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </MainCard>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nAddAddress.propTypes = {\r\n    address: PropTypes.object,\r\n    open: PropTypes.bool,\r\n    handleClose: PropTypes.func,\r\n    addAddress: PropTypes.func,\r\n    editAddress: PropTypes.func\r\n};\r\n\r\nexport default AddAddress;\r\n"]},"metadata":{},"sourceType":"module"}