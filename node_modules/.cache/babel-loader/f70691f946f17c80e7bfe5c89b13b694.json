{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/forms/forms-validation/SelectForms.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, Select, Stack, MenuItem } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n/**\r\n * 'Enter your age'\r\n * yup.number Expected 0 arguments, but got 1 */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  age: yup.number().required('Age selection is required.')\n}); // ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\n\nconst SelectForms = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      age: ''\n    },\n    validationSchema,\n    onSubmit: () => {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Select - Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Select\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              minWidth: 120\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"age-select\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"age-select\",\n              id: \"age\",\n              name: \"age\",\n              defaultValue: formik.values.age,\n              onChange: formik.handleChange,\n              label: \"Age\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 10,\n                children: \"Ten\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 20,\n                children: \"Twenty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 30,\n                children: \"Thirty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), formik.errors.age && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-email-login\",\n              children: formik.errors.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectForms, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = SelectForms;\nexport default SelectForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectForms\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/forms/forms-validation/SelectForms.js"],"names":["useDispatch","Button","FormControl","FormHelperText","Grid","InputLabel","Select","Stack","MenuItem","MainCard","AnimateButton","SNACKBAR_OPEN","gridSpacing","useFormik","yup","validationSchema","object","age","number","required","SelectForms","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","m","minWidth","values","handleChange","errors"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, Select, Stack, MenuItem } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n/**\r\n * 'Enter your age'\r\n * yup.number Expected 0 arguments, but got 1 */\r\nconst validationSchema = yup.object({\r\n    age: yup.number().required('Age selection is required.')\r\n});\r\n\r\n// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\r\n\r\nconst SelectForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            age: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Select - Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"Select\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                            <InputLabel id=\"age-select\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"age-select\"\r\n                                id=\"age\"\r\n                                name=\"age\"\r\n                                defaultValue={formik.values.age}\r\n                                onChange={formik.handleChange}\r\n                                label=\"Age\"\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>Ten</MenuItem>\r\n                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                <MenuItem value={30}>Thirty</MenuItem>\r\n                            </Select>\r\n                            {formik.errors.age && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {formik.errors.age}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SelectForms;\r\n"]},"metadata":{},"sourceType":"module"}