{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/ui-component/cards/ProductReview.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { Divider, Grid, Menu, MenuItem, Rating, Stack, Tooltip, Typography } from '@mui/material'; // third-party\n\nimport { format } from 'date-fns'; // project imports\n\nimport Avatar from '../extended/Avatar'; // assets\n\nimport StarTwoToneIcon from '@mui/icons-material/StarTwoTone';\nimport StarBorderTwoToneIcon from '@mui/icons-material/StarBorderTwoTone';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport DirectionsRunIcon from '@mui/icons-material/DirectionsRun';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true); // ==============================|| PRODUCT DETAILS - REVIEW ||============================== //\n\n\nconst ProductReview = ({\n  avatar,\n  date,\n  name,\n  status,\n  rating,\n  review\n}) => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      lg: 3,\n      xl: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          alt: name,\n          src: avatar && avatarImage(`./${avatar}`).default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 0.5,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            direction: \"row\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                display: 'block'\n              },\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), status && /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Purchased Verified\",\n              children: /*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n                fontSize: \"small\",\n                sx: {\n                  color: 'success.dark'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), !status && /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Goodwill\",\n              children: /*#__PURE__*/_jsxDEV(DirectionsRunIcon, {\n                fontSize: \"small\",\n                sx: {\n                  color: 'error.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: format(new Date(date), 'E, MMM d yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      lg: 9,\n      xl: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Rating, {\n              size: \"small\",\n              name: \"simple-controlled\",\n              value: rating < 4 ? rating + 1 : rating,\n              icon: /*#__PURE__*/_jsxDEV(StarTwoToneIcon, {\n                fontSize: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 39\n              }, this),\n              emptyIcon: /*#__PURE__*/_jsxDEV(StarBorderTwoToneIcon, {\n                fontSize: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 44\n              }, this),\n              precision: 0.1,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            justifyContent: \"flex-end\",\n            children: [/*#__PURE__*/_jsxDEV(MoreHorizOutlinedIcon, {\n              fontSize: \"small\",\n              \"aria-controls\": \"menu-popular-card\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleClick,\n              sx: {\n                color: 'grey.500',\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-popular-card\",\n              anchorEl: anchorEl,\n              keepMounted: true,\n              open: Boolean(anchorEl),\n              onClose: handleClose,\n              variant: \"selectedMenu\",\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleClose,\n                children: \" Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleClose,\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductReview, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = ProductReview;\nProductReview.propTypes = {\n  avatar: PropTypes.string,\n  date: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.bool,\n  rating: PropTypes.number,\n  review: PropTypes.string\n};\nexport default ProductReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductReview\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/ui-component/cards/ProductReview.js"],"names":["PropTypes","useState","Divider","Grid","Menu","MenuItem","Rating","Stack","Tooltip","Typography","format","Avatar","StarTwoToneIcon","StarBorderTwoToneIcon","MoreHorizOutlinedIcon","VerifiedUserIcon","DirectionsRunIcon","avatarImage","require","context","ProductReview","avatar","date","name","status","rating","review","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","default","overflow","textOverflow","whiteSpace","display","color","Date","cursor","Boolean","vertical","horizontal","propTypes","string","bool","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Divider, Grid, Menu, MenuItem, Rating, Stack, Tooltip, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport { format } from 'date-fns';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// assets\r\nimport StarTwoToneIcon from '@mui/icons-material/StarTwoTone';\r\nimport StarBorderTwoToneIcon from '@mui/icons-material/StarBorderTwoTone';\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\r\nimport DirectionsRunIcon from '@mui/icons-material/DirectionsRun';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| PRODUCT DETAILS - REVIEW ||============================== //\r\n\r\nconst ProductReview = ({ avatar, date, name, status, rating, review }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4} lg={3} xl={2}>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    <Avatar alt={name} src={avatar && avatarImage(`./${avatar}`).default} />\r\n                    <Stack spacing={0.5}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                {name}\r\n                            </Typography>\r\n                            {status && (\r\n                                <Tooltip title=\"Purchased Verified\">\r\n                                    <VerifiedUserIcon fontSize=\"small\" sx={{ color: 'success.dark' }} />\r\n                                </Tooltip>\r\n                            )}\r\n                            {!status && (\r\n                                <Tooltip title=\"Goodwill\">\r\n                                    <DirectionsRunIcon fontSize=\"small\" sx={{ color: 'error.main' }} />\r\n                                </Tooltip>\r\n                            )}\r\n                        </Stack>\r\n                        <Typography variant=\"caption\">{format(new Date(date), 'E, MMM d yyyy')}</Typography>\r\n                    </Stack>\r\n                </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9} xl={10}>\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={11}>\r\n                        <Stack spacing={1}>\r\n                            <Rating\r\n                                size=\"small\"\r\n                                name=\"simple-controlled\"\r\n                                value={rating < 4 ? rating + 1 : rating}\r\n                                icon={<StarTwoToneIcon fontSize=\"inherit\" />}\r\n                                emptyIcon={<StarBorderTwoToneIcon fontSize=\"inherit\" />}\r\n                                precision={0.1}\r\n                                readOnly\r\n                            />\r\n                            <Typography variant=\"body2\">{review}</Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Stack justifyContent=\"flex-end\">\r\n                            <MoreHorizOutlinedIcon\r\n                                fontSize=\"small\"\r\n                                aria-controls=\"menu-popular-card\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                                sx={{ color: 'grey.500', cursor: 'pointer' }}\r\n                            />\r\n                            <Menu\r\n                                id=\"menu-popular-card\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}> Edit</MenuItem>\r\n                                <MenuItem onClick={handleClose}> Delete</MenuItem>\r\n                            </Menu>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Divider />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nProductReview.propTypes = {\r\n    avatar: PropTypes.string,\r\n    date: PropTypes.string,\r\n    name: PropTypes.string,\r\n    status: PropTypes.bool,\r\n    rating: PropTypes.number,\r\n    review: PropTypes.string\r\n};\r\n\r\nexport default ProductReview;\r\n"]},"metadata":{},"sourceType":"module"}