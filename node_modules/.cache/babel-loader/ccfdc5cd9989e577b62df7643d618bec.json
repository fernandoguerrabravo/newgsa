{"ast":null,"code":"// action - state management\nimport * as actionTypes from './actions';\nimport { filter } from 'lodash';\nimport { Chance } from 'chance';\nconst chance = new Chance();\nexport const initialState = {\n  checkout: {\n    step: 0,\n    products: [],\n    subtotal: 0,\n    total: 0,\n    discount: 0,\n    shipping: 0,\n    billing: null,\n    payment: {\n      type: 'free',\n      method: 'cod',\n      card: ''\n    }\n  }\n}; // ==============================|| E-COMMERCE REDUCER ||============================== //\n\nconst cartReducer = (state = initialState, payload) => {\n  var _newProduct;\n\n  let subtotal;\n  let result;\n  let latestProducts;\n  let newProduct;\n  let inCartProduct;\n  let oldSubTotal;\n  let amount;\n  let difference;\n  let newShipping;\n\n  switch (payload.type) {\n    case actionTypes.ADD_PRODUCTS:\n      newProduct = { ...payload.product,\n        itemId: chance.timestamp()\n      };\n      subtotal = ((_newProduct = newProduct) === null || _newProduct === void 0 ? void 0 : _newProduct.quantity) * newProduct.offerPrice;\n      inCartProduct = filter(state.checkout.products, {\n        id: newProduct.id,\n        color: newProduct.color,\n        size: newProduct.size\n      });\n\n      if (inCartProduct && inCartProduct.length > 0) {\n        const newProducts = state.checkout.products.map(item => {\n          var _newProduct2, _newProduct3;\n\n          if (((_newProduct2 = newProduct) === null || _newProduct2 === void 0 ? void 0 : _newProduct2.id) === item.id && ((_newProduct3 = newProduct) === null || _newProduct3 === void 0 ? void 0 : _newProduct3.color) === item.color && newProduct.size === item.size) {\n            return { ...newProduct,\n              quantity: newProduct.quantity + inCartProduct[0].quantity\n            };\n          }\n\n          return item;\n        });\n        latestProducts = newProducts;\n      } else {\n        latestProducts = [...state.checkout.products, newProduct];\n      }\n\n      return { ...state,\n        checkout: { ...state.checkout,\n          products: latestProducts,\n          subtotal: state.checkout.subtotal + subtotal,\n          total: state.checkout.total + subtotal\n        }\n      };\n\n    case actionTypes.REMOVE_PRODUCT:\n      result = filter(state.checkout.products, {\n        itemId: payload.id\n      });\n      subtotal = result[0].quantity * result[0].offerPrice;\n      return { ...state,\n        checkout: { ...state.checkout,\n          products: filter(state.checkout.products, item => item.itemId !== payload.id),\n          subtotal: state.checkout.subtotal - subtotal,\n          total: state.checkout.total + -subtotal\n        }\n      };\n\n    case actionTypes.UPDATE_QUANTITY:\n      result = filter(state.checkout.products, {\n        itemId: payload.id\n      });\n      subtotal = payload.quantity * result[0].offerPrice;\n      oldSubTotal = 0;\n      latestProducts = state.checkout.products.map(item => {\n        if (payload.id === item.itemId) {\n          oldSubTotal = item.quantity * item.offerPrice;\n          return { ...item,\n            quantity: payload.quantity\n          };\n        }\n\n        return item;\n      });\n      return { ...state,\n        checkout: { ...state.checkout,\n          products: latestProducts,\n          subtotal: state.checkout.subtotal - oldSubTotal + subtotal,\n          total: state.checkout.total - oldSubTotal + subtotal\n        }\n      };\n\n    case actionTypes.SET_STEP:\n      return { ...state,\n        checkout: { ...state.checkout,\n          step: payload.step\n        }\n      };\n\n    case actionTypes.BACK_STEP:\n      return { ...state,\n        checkout: { ...state.checkout,\n          step: state.checkout.step - 1\n        }\n      };\n\n    case actionTypes.NEXT_STEP:\n      return { ...state,\n        checkout: { ...state.checkout,\n          step: state.checkout.step + 1\n        }\n      };\n\n    case actionTypes.SET_BILLING_ADDRESS:\n      return { ...state,\n        checkout: { ...state.checkout,\n          billing: payload.address\n        }\n      };\n\n    case actionTypes.SET_DISCOUNT:\n      amount = 0;\n      difference = 0;\n\n      if (state.checkout.total > 0) {\n        switch (payload.code) {\n          case 'BERRY50':\n            amount = chance.integer({\n              min: 1,\n              max: state.checkout.total < 49 ? state.checkout.total : 49\n            });\n            break;\n\n          case 'FLAT05':\n            amount = state.checkout.total < 5 ? state.checkout.total : 5;\n            break;\n\n          case 'SUB150':\n            amount = state.checkout.total < 150 ? state.checkout.total : 150;\n            break;\n\n          case 'UPTO200':\n            amount = chance.integer({\n              min: 1,\n              max: state.checkout.total < 199 ? state.checkout.total : 199\n            });\n            break;\n\n          default:\n            amount = 0;\n        }\n      }\n\n      if (state.checkout.discount > 0) {\n        difference = state.checkout.discount;\n      }\n\n      return { ...state,\n        checkout: { ...state.checkout,\n          discount: amount,\n          total: state.checkout.total + difference - amount\n        }\n      };\n\n    case actionTypes.SET_SHIPPING_CHARGE:\n      newShipping = 0;\n\n      if (state.checkout.shipping > 0 && payload.charge === 'free') {\n        newShipping = -5;\n      }\n\n      if (payload.charge === 'fast') {\n        newShipping = 5;\n      }\n\n      return { ...state,\n        checkout: { ...state.checkout,\n          shipping: payload.charge === 'fast' ? 5 : 0,\n          total: state.checkout.total + newShipping,\n          payment: { ...state.checkout.payment,\n            type: payload.charge\n          }\n        }\n      };\n\n    case actionTypes.SET_PAYMENT_METHOD:\n      return { ...state,\n        checkout: { ...state.checkout,\n          payment: { ...state.checkout.payment,\n            method: payload.method\n          }\n        }\n      };\n\n    case actionTypes.SET_PAYMENT_CARD:\n      return { ...state,\n        checkout: { ...state.checkout,\n          payment: { ...state.checkout.payment,\n            card: payload.card\n          }\n        }\n      };\n\n    case actionTypes.RESET_CART:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/store/cartReducer.js"],"names":["actionTypes","filter","Chance","chance","initialState","checkout","step","products","subtotal","total","discount","shipping","billing","payment","type","method","card","cartReducer","state","payload","result","latestProducts","newProduct","inCartProduct","oldSubTotal","amount","difference","newShipping","ADD_PRODUCTS","product","itemId","timestamp","quantity","offerPrice","id","color","size","length","newProducts","map","item","REMOVE_PRODUCT","UPDATE_QUANTITY","SET_STEP","BACK_STEP","NEXT_STEP","SET_BILLING_ADDRESS","address","SET_DISCOUNT","code","integer","min","max","SET_SHIPPING_CHARGE","charge","SET_PAYMENT_METHOD","SET_PAYMENT_CARD","RESET_CART"],"mappings":"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","sourcesContent":["// action - state management\r\nimport * as actionTypes from './actions';\r\n\r\nimport { filter } from 'lodash';\r\nimport { Chance } from 'chance';\r\n\r\nconst chance = new Chance();\r\n\r\nexport const initialState = {\r\n    checkout: {\r\n        step: 0,\r\n        products: [],\r\n        subtotal: 0,\r\n        total: 0,\r\n        discount: 0,\r\n        shipping: 0,\r\n        billing: null,\r\n        payment: {\r\n            type: 'free',\r\n            method: 'cod',\r\n            card: ''\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| E-COMMERCE REDUCER ||============================== //\r\n\r\nconst cartReducer = (state = initialState, payload) => {\r\n    let subtotal;\r\n    let result;\r\n\r\n    let latestProducts;\r\n    let newProduct;\r\n    let inCartProduct;\r\n    let oldSubTotal;\r\n    let amount;\r\n    let difference;\r\n    let newShipping;\r\n\r\n    switch (payload.type) {\r\n        case actionTypes.ADD_PRODUCTS:\r\n            newProduct = { ...payload.product, itemId: chance.timestamp() };\r\n\r\n            subtotal = newProduct?.quantity * newProduct.offerPrice;\r\n\r\n            inCartProduct = filter(state.checkout.products, {\r\n                id: newProduct.id,\r\n                color: newProduct.color,\r\n                size: newProduct.size\r\n            });\r\n            if (inCartProduct && inCartProduct.length > 0) {\r\n                const newProducts = state.checkout.products.map((item) => {\r\n                    if (newProduct?.id === item.id && newProduct?.color === item.color && newProduct.size === item.size) {\r\n                        return { ...newProduct, quantity: newProduct.quantity + inCartProduct[0].quantity };\r\n                    }\r\n                    return item;\r\n                });\r\n                latestProducts = newProducts;\r\n            } else {\r\n                latestProducts = [...state.checkout.products, newProduct];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    products: latestProducts,\r\n                    subtotal: state.checkout.subtotal + subtotal,\r\n                    total: state.checkout.total + subtotal\r\n                }\r\n            };\r\n        case actionTypes.REMOVE_PRODUCT:\r\n            result = filter(state.checkout.products, { itemId: payload.id });\r\n            subtotal = result[0].quantity * result[0].offerPrice;\r\n\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    products: filter(state.checkout.products, (item) => item.itemId !== payload.id),\r\n                    subtotal: state.checkout.subtotal - subtotal,\r\n                    total: state.checkout.total + -subtotal\r\n                }\r\n            };\r\n        case actionTypes.UPDATE_QUANTITY:\r\n            result = filter(state.checkout.products, { itemId: payload.id });\r\n            subtotal = payload.quantity * result[0].offerPrice;\r\n            oldSubTotal = 0;\r\n\r\n            latestProducts = state.checkout.products.map((item) => {\r\n                if (payload.id === item.itemId) {\r\n                    oldSubTotal = item.quantity * item.offerPrice;\r\n                    return { ...item, quantity: payload.quantity };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    products: latestProducts,\r\n                    subtotal: state.checkout.subtotal - oldSubTotal + subtotal,\r\n                    total: state.checkout.total - oldSubTotal + subtotal\r\n                }\r\n            };\r\n        case actionTypes.SET_STEP:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    step: payload.step\r\n                }\r\n            };\r\n        case actionTypes.BACK_STEP:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    step: state.checkout.step - 1\r\n                }\r\n            };\r\n        case actionTypes.NEXT_STEP:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    step: state.checkout.step + 1\r\n                }\r\n            };\r\n        case actionTypes.SET_BILLING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    billing: payload.address\r\n                }\r\n            };\r\n        case actionTypes.SET_DISCOUNT:\r\n            amount = 0;\r\n            difference = 0;\r\n            if (state.checkout.total > 0) {\r\n                switch (payload.code) {\r\n                    case 'BERRY50':\r\n                        amount = chance.integer({ min: 1, max: state.checkout.total < 49 ? state.checkout.total : 49 });\r\n                        break;\r\n                    case 'FLAT05':\r\n                        amount = state.checkout.total < 5 ? state.checkout.total : 5;\r\n                        break;\r\n                    case 'SUB150':\r\n                        amount = state.checkout.total < 150 ? state.checkout.total : 150;\r\n                        break;\r\n                    case 'UPTO200':\r\n                        amount = chance.integer({ min: 1, max: state.checkout.total < 199 ? state.checkout.total : 199 });\r\n                        break;\r\n                    default:\r\n                        amount = 0;\r\n                }\r\n            }\r\n            if (state.checkout.discount > 0) {\r\n                difference = state.checkout.discount;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    discount: amount,\r\n                    total: state.checkout.total + difference - amount\r\n                }\r\n            };\r\n        case actionTypes.SET_SHIPPING_CHARGE:\r\n            newShipping = 0;\r\n            if (state.checkout.shipping > 0 && payload.charge === 'free') {\r\n                newShipping = -5;\r\n            }\r\n            if (payload.charge === 'fast') {\r\n                newShipping = 5;\r\n            }\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    shipping: payload.charge === 'fast' ? 5 : 0,\r\n                    total: state.checkout.total + newShipping,\r\n                    payment: {\r\n                        ...state.checkout.payment,\r\n                        type: payload.charge\r\n                    }\r\n                }\r\n            };\r\n        case actionTypes.SET_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    payment: {\r\n                        ...state.checkout.payment,\r\n                        method: payload.method\r\n                    }\r\n                }\r\n            };\r\n        case actionTypes.SET_PAYMENT_CARD:\r\n            return {\r\n                ...state,\r\n                checkout: {\r\n                    ...state.checkout,\r\n                    payment: {\r\n                        ...state.checkout.payment,\r\n                        card: payload.card\r\n                    }\r\n                }\r\n            };\r\n        case actionTypes.RESET_CART:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}