{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/application/kanban/Board/AddItem.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, Grid, IconButton, TextField, Stack } from '@mui/material'; // third-party\n\nimport { sub } from 'date-fns';\nimport { Chance } from 'chance'; // project imports\n\nimport { ADD_ITEM, SNACKBAR_OPEN } from 'store/actions';\nimport SubCard from 'ui-component/cards/SubCard'; // assets\n\nimport CalendarTodayTwoToneIcon from '@mui/icons-material/CalendarTodayTwoTone';\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chance = new Chance(); // ==============================|| KANBAN BOARD - ADD ITEM ||============================== //\n\nconst AddItem = ({\n  columnId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [addTaskBox, setAddTaskBox] = useState(false);\n\n  const handleAddTaskChange = () => {\n    setAddTaskBox(prev => !prev);\n  };\n\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n\n  const addTask = () => {\n    if (title.length > 0) {\n      const newItem = {\n        id: `${chance.integer({\n          min: 1000,\n          max: 9999\n        })}`,\n        title,\n        dueDate: sub(new Date(), {\n          days: 0,\n          hours: 1,\n          minutes: 45\n        }),\n        image: false,\n        assign: '',\n        description: '',\n        priority: 'low'\n      };\n      dispatch({\n        type: ADD_ITEM,\n        payload: {\n          columnId,\n          storyId: '0',\n          item: newItem\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Task Add successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n      handleAddTaskChange();\n      setTitle('');\n    } else {\n      setIsTitle(true);\n    }\n  };\n\n  const handleAddTask = event => {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      addTask();\n    }\n  };\n\n  const handleTaskTitle = event => {\n    const newTitle = event.target.value;\n    setTitle(newTitle);\n\n    if (newTitle.length <= 0) {\n      setIsTitle(true);\n    } else {\n      setIsTitle(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    sx: {\n      marginTop: 1\n    },\n    children: [addTaskBox && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(SubCard, {\n        contentSX: {\n          p: 2,\n          transition: 'background-color 0.25s ease-out'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 0.5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Add Task\",\n              value: title,\n              onChange: handleTaskTitle,\n              sx: {\n                mb: 2,\n                '& input': {\n                  bgcolor: 'transparent',\n                  p: 0,\n                  borderRadius: '0px'\n                },\n                '& fieldset': {\n                  display: 'none'\n                },\n                '& .MuiFormHelperText-root': {\n                  ml: 0\n                },\n                '& .MuiOutlinedInput-root': {\n                  bgcolor: 'transparent'\n                }\n              },\n              onKeyUp: handleAddTask,\n              helperText: isTitle ? 'Task title is required.' : '',\n              error: isTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              size: \"small\",\n              color: \"primary\",\n              sx: {\n                p: 0.5,\n                minWidth: 32\n              },\n              children: /*#__PURE__*/_jsxDEV(PeopleAltTwoToneIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              size: \"small\",\n              color: \"primary\",\n              sx: {\n                p: 0.5,\n                minWidth: 32\n              },\n              children: /*#__PURE__*/_jsxDEV(CalendarTodayTwoToneIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            zeroMinWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              alignItems: \"center\",\n              spacing: 0.5,\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                color: \"error\",\n                onClick: handleAddTaskChange,\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: addTask,\n                size: \"small\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), !addTaskBox && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"primary\",\n        sx: {\n          width: '100%'\n        },\n        onClick: handleAddTaskChange,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddItem, \"nTtFe3IGEwITAIMfgEW+/mEMYwg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddItem;\nAddItem.propTypes = {\n  columnId: PropTypes.string\n};\nexport default AddItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItem\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/application/kanban/Board/AddItem.js"],"names":["PropTypes","useState","useDispatch","Button","Grid","IconButton","TextField","Stack","sub","Chance","ADD_ITEM","SNACKBAR_OPEN","SubCard","CalendarTodayTwoToneIcon","PeopleAltTwoToneIcon","CloseIcon","chance","AddItem","columnId","dispatch","addTaskBox","setAddTaskBox","handleAddTaskChange","prev","title","setTitle","isTitle","setIsTitle","addTask","length","newItem","id","integer","min","max","dueDate","Date","days","hours","minutes","image","assign","description","priority","type","payload","storyId","item","open","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","handleAddTask","event","key","keyCode","handleTaskTitle","newTitle","target","value","marginTop","p","transition","mb","bgcolor","borderRadius","display","ml","minWidth","width","propTypes","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, IconButton, TextField, Stack } from '@mui/material';\r\n\r\n// third-party\r\nimport { sub } from 'date-fns';\r\nimport { Chance } from 'chance';\r\n\r\n// project imports\r\nimport { ADD_ITEM, SNACKBAR_OPEN } from 'store/actions';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// assets\r\nimport CalendarTodayTwoToneIcon from '@mui/icons-material/CalendarTodayTwoTone';\r\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst chance = new Chance();\r\n\r\n// ==============================|| KANBAN BOARD - ADD ITEM ||============================== //\r\n\r\nconst AddItem = ({ columnId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [addTaskBox, setAddTaskBox] = useState(false);\r\n    const handleAddTaskChange = () => {\r\n        setAddTaskBox((prev) => !prev);\r\n    };\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [isTitle, setIsTitle] = useState(false);\r\n\r\n    const addTask = () => {\r\n        if (title.length > 0) {\r\n            const newItem = {\r\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\r\n                title,\r\n                dueDate: sub(new Date(), { days: 0, hours: 1, minutes: 45 }),\r\n                image: false,\r\n                assign: '',\r\n                description: '',\r\n                priority: 'low'\r\n            };\r\n\r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: { columnId, storyId: '0', item: newItem }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Task Add successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n            handleAddTaskChange();\r\n            setTitle('');\r\n        } else {\r\n            setIsTitle(true);\r\n        }\r\n    };\r\n\r\n    const handleAddTask = (event) => {\r\n        if (event.key === 'Enter' || event.keyCode === 13) {\r\n            addTask();\r\n        }\r\n    };\r\n\r\n    const handleTaskTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        setTitle(newTitle);\r\n        if (newTitle.length <= 0) {\r\n            setIsTitle(true);\r\n        } else {\r\n            setIsTitle(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\" spacing={1} sx={{ marginTop: 1 }}>\r\n            {addTaskBox && (\r\n                <Grid item xs={12}>\r\n                    <SubCard contentSX={{ p: 2, transition: 'background-color 0.25s ease-out' }}>\r\n                        <Grid container alignItems=\"center\" spacing={0.5}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    placeholder=\"Add Task\"\r\n                                    value={title}\r\n                                    onChange={handleTaskTitle}\r\n                                    sx={{\r\n                                        mb: 2,\r\n                                        '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\r\n                                        '& fieldset': { display: 'none' },\r\n                                        '& .MuiFormHelperText-root': {\r\n                                            ml: 0\r\n                                        },\r\n                                        '& .MuiOutlinedInput-root': {\r\n                                            bgcolor: 'transparent'\r\n                                        }\r\n                                    }}\r\n                                    onKeyUp={handleAddTask}\r\n                                    helperText={isTitle ? 'Task title is required.' : ''}\r\n                                    error={isTitle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"text\" size=\"small\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }}>\r\n                                    <PeopleAltTwoToneIcon fontSize=\"small\" />\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"text\" size=\"small\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }}>\r\n                                    <CalendarTodayTwoToneIcon fontSize=\"small\" />\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs zeroMinWidth />\r\n                            <Grid item>\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                                    <IconButton size=\"small\" color=\"error\" onClick={handleAddTaskChange}>\r\n                                        <CloseIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={addTask} size=\"small\">\r\n                                        Add\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            )}\r\n            {!addTaskBox && (\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"text\" color=\"primary\" sx={{ width: '100%' }} onClick={handleAddTaskChange}>\r\n                        Add Task\r\n                    </Button>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nAddItem.propTypes = {\r\n    columnId: PropTypes.string\r\n};\r\n\r\nexport default AddItem;\r\n"]},"metadata":{},"sourceType":"module"}