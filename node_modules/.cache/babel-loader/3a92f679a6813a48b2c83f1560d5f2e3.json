{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/application/kanban/Backlogs/AddItem.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { Box, Button, Drawer, Grid, Typography, Autocomplete, CardMedia, FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField } from '@mui/material';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker'; // third party\n\nimport * as yup from 'yup';\nimport { Chance } from 'chance';\nimport { useFormik } from 'formik'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { ADD_ITEM, SNACKBAR_OPEN } from 'store/actions'; // assets\n\nimport imgMain from 'assets/images/profile/profile-back-1.png';\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chance = new Chance();\n\nconst avatarImage = require.context('assets/images/users', true);\n\nconst validationSchema = yup.object({\n  title: yup.string().required('Task title is required'),\n  dueDate: yup.date()\n}); // ==============================|| KANBAN BACKLOGS - ADD ITEM ||============================== //\n\nconst AddItem = ({\n  open,\n  handleDrawerOpen,\n  storyId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const kanban = useSelector(state => state.kanban);\n  const {\n    profiles,\n    columns\n  } = kanban;\n  const formik = useFormik({\n    initialValues: {\n      id: `${chance.integer({\n        min: 1000,\n        max: 9999\n      })}`,\n      title: '',\n      assign: null,\n      priority: 'low',\n      dueDate: new Date(),\n      description: '',\n      commentIds: '',\n      image: false,\n      storyId: '',\n      columnId: columns[0].id\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch({\n        type: ADD_ITEM,\n        payload: {\n          item: {\n            id: values.id,\n            title: values.title,\n            assign: values.assign,\n            priority: values.priority,\n            dueDate: values.dueDate ? new Date(values.dueDate) : new Date(),\n            description: values.description,\n            commentIds: values.commentIds,\n            image: values.image\n          },\n          storyId,\n          columnId: values.columnId\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n      handleDrawerOpen();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    sx: {\n      ml: open ? 3 : 0,\n      flexShrink: 0,\n      zIndex: 1200,\n      overflowX: 'hidden',\n      width: {\n        xs: 320,\n        md: 450\n      },\n      '& .MuiDrawer-paper': {\n        height: '100vh',\n        width: {\n          xs: 320,\n          md: 450\n        },\n        position: 'fixed',\n        border: 'none',\n        borderRadius: '0px'\n      }\n    },\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: open,\n    ModalProps: {\n      keepMounted: true\n    },\n    onClose: handleDrawerOpen,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"title\",\n                name: \"title\",\n                label: \"Title\",\n                defaultValue: formik.values.title,\n                onChange: formik.handleChange,\n                error: formik.touched.title && Boolean(formik.errors.title),\n                helperText: formik.touched.title && formik.errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"Assign to:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    justifyContent: \"flex-start\",\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      id: \"assign\",\n                      value: profiles.find(profile => profile.id === formik.values.assign) || null,\n                      onChange: (event, value) => {\n                        formik.setFieldValue('assign', value === null || value === void 0 ? void 0 : value.id);\n                      },\n                      options: profiles,\n                      fullWidth: true,\n                      autoHighlight: true,\n                      getOptionLabel: option => option.name,\n                      renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n                        component: \"li\",\n                        sx: {\n                          '& > img': {\n                            mr: 2,\n                            flexShrink: 0\n                          }\n                        },\n                        ...props,\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          loading: \"lazy\",\n                          width: \"20\",\n                          src: avatarImage(`./${option.avatar}`).default,\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 57\n                        }, this), option.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 53\n                      }, this),\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                        label: \"Choose a assignee\",\n                        inputProps: { ...params.inputProps,\n                          autoComplete: 'new-password' // disable autocomplete and autofill\n\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"Prioritize:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      row: true,\n                      \"aria-label\": \"color\",\n                      value: formik.values.priority,\n                      onChange: formik.handleChange,\n                      name: \"priority\",\n                      id: \"priority\",\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"low\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {\n                          color: \"primary\",\n                          sx: {\n                            color: 'primary.main'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 62\n                        }, this),\n                        label: \"Low\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"medium\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {\n                          color: \"warning\",\n                          sx: {\n                            color: 'warning.main'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 62\n                        }, this),\n                        label: \"Medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"high\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {\n                          color: \"error\",\n                          sx: {\n                            color: 'error.main'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 62\n                        }, this),\n                        label: \"High\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"Due date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n                    label: \"Due Date\",\n                    value: formik.values.dueDate,\n                    inputFormat: \"dd/MM/yyyy\",\n                    onChange: date => {\n                      formik.setFieldValue('dueDate', date);\n                    },\n                    renderInput: props => /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      ...props\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 69\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    id: \"description\",\n                    name: \"description\",\n                    multiline: true,\n                    rows: 3,\n                    defaultValue: formik.values.description,\n                    onChange: formik.handleChange,\n                    error: formik.touched.description && Boolean(formik.errors.description),\n                    helperText: formik.touched.description && formik.errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"State:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    sx: {\n                      m: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"columnId\",\n                      name: \"columnId\",\n                      displayEmpty: true,\n                      value: formik.values.columnId,\n                      onChange: formik.handleChange,\n                      inputProps: {\n                        'aria-label': 'Without label'\n                      },\n                      children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: column.id,\n                        children: column.title\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: \"Attachments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    alignItems: \"center\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                        component: \"img\",\n                        image: imgMain,\n                        sx: {\n                          width: 60,\n                          height: 60,\n                          borderRadius: 1\n                        },\n                        title: \"Slider5 image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        size: \"large\",\n                        sx: {\n                          p: 2\n                        },\n                        children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddItem, \"+GenP5GqVZBEAO+RTdIuIOhwGMg=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = AddItem;\nAddItem.propTypes = {\n  open: PropTypes.bool,\n  handleDrawerOpen: PropTypes.func,\n  storyId: PropTypes.string\n};\nexport default AddItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItem\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/application/kanban/Backlogs/AddItem.js"],"names":["PropTypes","useDispatch","useSelector","Box","Button","Drawer","Grid","Typography","Autocomplete","CardMedia","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","Select","TextField","AdapterDateFns","LocalizationProvider","DesktopDatePicker","yup","Chance","useFormik","AnimateButton","ADD_ITEM","SNACKBAR_OPEN","imgMain","AddRoundedIcon","chance","avatarImage","require","context","validationSchema","object","title","string","required","dueDate","date","AddItem","open","handleDrawerOpen","storyId","dispatch","kanban","state","profiles","columns","formik","initialValues","id","integer","min","max","assign","priority","Date","description","commentIds","image","columnId","onSubmit","values","type","payload","item","message","variant","alertSeverity","ml","flexShrink","zIndex","overflowX","width","xs","md","height","position","border","borderRadius","keepMounted","p","handleSubmit","handleChange","touched","Boolean","errors","find","profile","event","value","setFieldValue","option","name","props","mr","avatar","default","params","inputProps","autoComplete","color","m","map","column","index","propTypes","bool","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKIC,UALJ,EAMIC,YANJ,EAOIC,SAPJ,EAQIC,WARJ,EASIC,gBATJ,EAUIC,QAVJ,EAWIC,KAXJ,EAYIC,UAZJ,EAaIC,MAbJ,EAcIC,SAdJ,QAeO,eAfP;AAgBA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B,C,CAEA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,eAAxC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,MAAM,GAAG,IAAIP,MAAJ,EAAf;;AACA,MAAMQ,WAAW,GAAGC,OAAO,CAACC,OAAR,CAAgB,qBAAhB,EAAuC,IAAvC,CAApB;;AACA,MAAMC,gBAAgB,GAAGZ,GAAG,CAACa,MAAJ,CAAW;AAChCC,EAAAA,KAAK,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADyB;AAEhCC,EAAAA,OAAO,EAAEjB,GAAG,CAACkB,IAAJ;AAFuB,CAAX,CAAzB,C,CAKA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AACrD,QAAMC,QAAQ,GAAG1C,WAAW,EAA5B;AACA,QAAM2C,MAAM,GAAG1C,WAAW,CAAE2C,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBH,MAA9B;AAEA,QAAMI,MAAM,GAAG1B,SAAS,CAAC;AACrB2B,IAAAA,aAAa,EAAE;AACXC,MAAAA,EAAE,EAAG,GAAEtB,MAAM,CAACuB,OAAP,CAAe;AAAEC,QAAAA,GAAG,EAAE,IAAP;AAAaC,QAAAA,GAAG,EAAE;AAAlB,OAAf,CAAyC,EADrC;AAEXnB,MAAAA,KAAK,EAAE,EAFI;AAGXoB,MAAAA,MAAM,EAAE,IAHG;AAIXC,MAAAA,QAAQ,EAAE,KAJC;AAKXlB,MAAAA,OAAO,EAAE,IAAImB,IAAJ,EALE;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,KAAK,EAAE,KARI;AASXjB,MAAAA,OAAO,EAAE,EATE;AAUXkB,MAAAA,QAAQ,EAAEb,OAAO,CAAC,CAAD,CAAP,CAAWG;AAVV,KADM;AAarBlB,IAAAA,gBAbqB;AAcrB6B,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBnB,MAAAA,QAAQ,CAAC;AACLoB,QAAAA,IAAI,EAAEvC,QADD;AAELwC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE;AACFf,YAAAA,EAAE,EAAEY,MAAM,CAACZ,EADT;AAEFhB,YAAAA,KAAK,EAAE4B,MAAM,CAAC5B,KAFZ;AAGFoB,YAAAA,MAAM,EAAEQ,MAAM,CAACR,MAHb;AAIFC,YAAAA,QAAQ,EAAEO,MAAM,CAACP,QAJf;AAKFlB,YAAAA,OAAO,EAAEyB,MAAM,CAACzB,OAAP,GAAiB,IAAImB,IAAJ,CAASM,MAAM,CAACzB,OAAhB,CAAjB,GAA4C,IAAImB,IAAJ,EALnD;AAMFC,YAAAA,WAAW,EAAEK,MAAM,CAACL,WANlB;AAOFC,YAAAA,UAAU,EAAEI,MAAM,CAACJ,UAPjB;AAQFC,YAAAA,KAAK,EAAEG,MAAM,CAACH;AARZ,WADD;AAWLjB,UAAAA,OAXK;AAYLkB,UAAAA,QAAQ,EAAEE,MAAM,CAACF;AAZZ;AAFJ,OAAD,CAAR;AAiBAjB,MAAAA,QAAQ,CAAC;AACLoB,QAAAA,IAAI,EAAEtC,aADD;AAELe,QAAAA,IAAI,EAAE,IAFD;AAGL0B,QAAAA,OAAO,EAAE,gBAHJ;AAILC,QAAAA,OAAO,EAAE,OAJJ;AAKLC,QAAAA,aAAa,EAAE;AALV,OAAD,CAAR;AAOA3B,MAAAA,gBAAgB;AACnB;AAxCoB,GAAD,CAAxB;AA2CA,sBACI,QAAC,MAAD;AACI,IAAA,EAAE,EAAE;AACA4B,MAAAA,EAAE,EAAE7B,IAAI,GAAG,CAAH,GAAO,CADf;AAEA8B,MAAAA,UAAU,EAAE,CAFZ;AAGAC,MAAAA,MAAM,EAAE,IAHR;AAIAC,MAAAA,SAAS,EAAE,QAJX;AAKAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE;AAAf,OALP;AAMA,4BAAsB;AAClBC,QAAAA,MAAM,EAAE,OADU;AAElBH,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,GAAN;AAAWC,UAAAA,EAAE,EAAE;AAAf,SAFW;AAGlBE,QAAAA,QAAQ,EAAE,OAHQ;AAIlBC,QAAAA,MAAM,EAAE,MAJU;AAKlBC,QAAAA,YAAY,EAAE;AALI;AANtB,KADR;AAeI,IAAA,OAAO,EAAC,WAfZ;AAgBI,IAAA,MAAM,EAAC,OAhBX;AAiBI,IAAA,IAAI,EAAEvC,IAjBV;AAkBI,IAAA,UAAU,EAAE;AAAEwC,MAAAA,WAAW,EAAE;AAAf,KAlBhB;AAmBI,IAAA,OAAO,EAAEvC,gBAnBb;AAAA,2BAqBI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEwC,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEjC,MAAM,CAACkC,YAAvB;AAAA,+BACI,QAAC,oBAAD;AAAsB,UAAA,WAAW,EAAEjE,cAAnC;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,SAAS,MADb;AAEI,gBAAA,EAAE,EAAC,OAFP;AAGI,gBAAA,IAAI,EAAC,OAHT;AAII,gBAAA,KAAK,EAAC,OAJV;AAKI,gBAAA,YAAY,EAAE+B,MAAM,CAACc,MAAP,CAAc5B,KALhC;AAMI,gBAAA,QAAQ,EAAEc,MAAM,CAACmC,YANrB;AAOI,gBAAA,KAAK,EAAEnC,MAAM,CAACoC,OAAP,CAAelD,KAAf,IAAwBmD,OAAO,CAACrC,MAAM,CAACsC,MAAP,CAAcpD,KAAf,CAP1C;AAQI,gBAAA,UAAU,EAAEc,MAAM,CAACoC,OAAP,CAAelD,KAAf,IAAwBc,MAAM,CAACsC,MAAP,CAAcpD;AARtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAgBI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,IAAD;AAAM,oBAAA,SAAS,MAAf;AAAgB,oBAAA,cAAc,EAAC,YAA/B;AAAA,2CACI,QAAC,YAAD;AACI,sBAAA,EAAE,EAAC,QADP;AAEI,sBAAA,KAAK,EAAEY,QAAQ,CAACyC,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACtC,EAAR,KAAeF,MAAM,CAACc,MAAP,CAAcR,MAAxD,KAAmE,IAF9E;AAGI,sBAAA,QAAQ,EAAE,CAACmC,KAAD,EAAQC,KAAR,KAAkB;AACxB1C,wBAAAA,MAAM,CAAC2C,aAAP,CAAqB,QAArB,EAA+BD,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAExC,EAAtC;AACH,uBALL;AAMI,sBAAA,OAAO,EAAEJ,QANb;AAOI,sBAAA,SAAS,MAPb;AAQI,sBAAA,aAAa,MARjB;AASI,sBAAA,cAAc,EAAG8C,MAAD,IAAYA,MAAM,CAACC,IATvC;AAUI,sBAAA,YAAY,EAAE,CAACC,KAAD,EAAQF,MAAR,kBACV,QAAC,GAAD;AAAK,wBAAA,SAAS,EAAC,IAAf;AAAoB,wBAAA,EAAE,EAAE;AAAE,qCAAW;AAAEG,4BAAAA,EAAE,EAAE,CAAN;AAASzB,4BAAAA,UAAU,EAAE;AAArB;AAAb,yBAAxB;AAAA,2BAAqEwB,KAArE;AAAA,gDACI;AACI,0BAAA,OAAO,EAAC,MADZ;AAEI,0BAAA,KAAK,EAAC,IAFV;AAGI,0BAAA,GAAG,EAAEjE,WAAW,CAAE,KAAI+D,MAAM,CAACI,MAAO,EAApB,CAAX,CAAkCC,OAH3C;AAII,0BAAA,GAAG,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gCADJ,EAOKL,MAAM,CAACC,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXR;AAqBI,sBAAA,WAAW,EAAGK,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,wBAAA,KAAK,EAAC,mBAFV;AAGI,wBAAA,UAAU,EAAE,EACR,GAAGA,MAAM,CAACC,UADF;AAERC,0BAAAA,YAAY,EAAE,cAFN,CAEqB;;AAFrB;AAHhB;AAAA;AAAA;AAAA;AAAA;AAtBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eA2DI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,WAAD;AAAA,2CACI,QAAC,UAAD;AACI,sBAAA,GAAG,MADP;AAEI,oCAAW,OAFf;AAGI,sBAAA,KAAK,EAAEpD,MAAM,CAACc,MAAP,CAAcP,QAHzB;AAII,sBAAA,QAAQ,EAAEP,MAAM,CAACmC,YAJrB;AAKI,sBAAA,IAAI,EAAC,UALT;AAMI,sBAAA,EAAE,EAAC,UANP;AAAA,8CAQI,QAAC,gBAAD;AACI,wBAAA,KAAK,EAAC,KADV;AAEI,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,0BAAA,KAAK,EAAC,SAAb;AAAuB,0BAAA,EAAE,EAAE;AAAEkB,4BAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,gCAFb;AAGI,wBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,8BARJ,eAaI,QAAC,gBAAD;AACI,wBAAA,KAAK,EAAC,QADV;AAEI,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,0BAAA,KAAK,EAAC,SAAb;AAAuB,0BAAA,EAAE,EAAE;AAAEA,4BAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,gCAFb;AAGI,wBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,8BAbJ,eAkBI,QAAC,gBAAD;AACI,wBAAA,KAAK,EAAC,MADV;AAEI,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,0BAAA,KAAK,EAAC,OAAb;AAAqB,0BAAA,EAAE,EAAE;AAAEA,4BAAAA,KAAK,EAAE;AAAT;AAAzB;AAAA;AAAA;AAAA;AAAA,gCAFb;AAGI,wBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,8BAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA3DJ,eA8FI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,iBAAD;AACI,oBAAA,KAAK,EAAC,UADV;AAEI,oBAAA,KAAK,EAAErD,MAAM,CAACc,MAAP,CAAczB,OAFzB;AAGI,oBAAA,WAAW,EAAC,YAHhB;AAII,oBAAA,QAAQ,EAAGC,IAAD,IAAU;AAChBU,sBAAAA,MAAM,CAAC2C,aAAP,CAAqB,SAArB,EAAgCrD,IAAhC;AACH,qBANL;AAOI,oBAAA,WAAW,EAAGwD,KAAD,iBAAW,QAAC,SAAD;AAAW,sBAAA,SAAS,MAApB;AAAA,yBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAP5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA9FJ,eAgHI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,SAAD;AACI,oBAAA,SAAS,MADb;AAEI,oBAAA,EAAE,EAAC,aAFP;AAGI,oBAAA,IAAI,EAAC,aAHT;AAII,oBAAA,SAAS,MAJb;AAKI,oBAAA,IAAI,EAAE,CALV;AAMI,oBAAA,YAAY,EAAE9C,MAAM,CAACc,MAAP,CAAcL,WANhC;AAOI,oBAAA,QAAQ,EAAET,MAAM,CAACmC,YAPrB;AAQI,oBAAA,KAAK,EAAEnC,MAAM,CAACoC,OAAP,CAAe3B,WAAf,IAA8B4B,OAAO,CAACrC,MAAM,CAACsC,MAAP,CAAc7B,WAAf,CARhD;AASI,oBAAA,UAAU,EAAET,MAAM,CAACoC,OAAP,CAAe3B,WAAf,IAA8BT,MAAM,CAACsC,MAAP,CAAc7B;AAT5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAhHJ,eAoII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,WAAD;AAAa,oBAAA,SAAS,MAAtB;AAAuB,oBAAA,EAAE,EAAE;AAAE6C,sBAAAA,CAAC,EAAE;AAAL,qBAA3B;AAAA,2CACI,QAAC,MAAD;AACI,sBAAA,EAAE,EAAC,UADP;AAEI,sBAAA,IAAI,EAAC,UAFT;AAGI,sBAAA,YAAY,MAHhB;AAII,sBAAA,KAAK,EAAEtD,MAAM,CAACc,MAAP,CAAcF,QAJzB;AAKI,sBAAA,QAAQ,EAAEZ,MAAM,CAACmC,YALrB;AAMI,sBAAA,UAAU,EAAE;AAAE,sCAAc;AAAhB,uBANhB;AAAA,gCAQKpC,OAAO,CAACwD,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT,QAAC,QAAD;AAAsB,wBAAA,KAAK,EAAED,MAAM,CAACtD,EAApC;AAAA,kCACKsD,MAAM,CAACtE;AADZ,yBAAeuE,KAAf;AAAA;AAAA;AAAA;AAAA,8BADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBApIJ,eA6JI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,IAAD;AAAM,oBAAA,SAAS,MAAf;AAAgB,oBAAA,UAAU,EAAC,QAA3B;AAAoC,oBAAA,OAAO,EAAE,CAA7C;AAAA,4CACI,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAA,6CACI,QAAC,SAAD;AACI,wBAAA,SAAS,EAAC,KADd;AAEI,wBAAA,KAAK,EAAE/E,OAFX;AAGI,wBAAA,EAAE,EAAE;AAAE+C,0BAAAA,KAAK,EAAE,EAAT;AAAaG,0BAAAA,MAAM,EAAE,EAArB;AAAyBG,0BAAAA,YAAY,EAAE;AAAvC,yBAHR;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BADJ,eASI,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAA,6CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,UAAhB;AAA2B,wBAAA,IAAI,EAAC,OAAhC;AAAwC,wBAAA,EAAE,EAAE;AAAEE,0BAAAA,CAAC,EAAE;AAAL,yBAA5C;AAAA,+CACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA7JJ,eAqLI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACI,QAAC,aAAD;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,SAAS,MAAjB;AAAkB,kBAAA,OAAO,EAAC,WAA1B;AAAsC,kBAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBArLJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2NH,CA3QD;;GAAM1C,O;UACetC,W,EACFC,W,EAGAoB,S;;;KALbiB,O;AA6QNA,OAAO,CAACmE,SAAR,GAAoB;AAChBlE,EAAAA,IAAI,EAAExC,SAAS,CAAC2G,IADA;AAEhBlE,EAAAA,gBAAgB,EAAEzC,SAAS,CAAC4G,IAFZ;AAGhBlE,EAAAA,OAAO,EAAE1C,SAAS,CAACmC;AAHH,CAApB;AAMA,eAAeI,OAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport {\r\n    Box,\r\n    Button,\r\n    Drawer,\r\n    Grid,\r\n    Typography,\r\n    Autocomplete,\r\n    CardMedia,\r\n    FormControl,\r\n    FormControlLabel,\r\n    MenuItem,\r\n    Radio,\r\n    RadioGroup,\r\n    Select,\r\n    TextField\r\n} from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\n\r\n// third party\r\nimport * as yup from 'yup';\r\nimport { Chance } from 'chance';\r\nimport { useFormik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { ADD_ITEM, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport imgMain from 'assets/images/profile/profile-back-1.png';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\n\r\nconst chance = new Chance();\r\nconst avatarImage = require.context('assets/images/users', true);\r\nconst validationSchema = yup.object({\r\n    title: yup.string().required('Task title is required'),\r\n    dueDate: yup.date()\r\n});\r\n\r\n// ==============================|| KANBAN BACKLOGS - ADD ITEM ||============================== //\r\n\r\nconst AddItem = ({ open, handleDrawerOpen, storyId }) => {\r\n    const dispatch = useDispatch();\r\n    const kanban = useSelector((state) => state.kanban);\r\n    const { profiles, columns } = kanban;\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: `${chance.integer({ min: 1000, max: 9999 })}`,\r\n            title: '',\r\n            assign: null,\r\n            priority: 'low',\r\n            dueDate: new Date(),\r\n            description: '',\r\n            commentIds: '',\r\n            image: false,\r\n            storyId: '',\r\n            columnId: columns[0].id\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: {\r\n                    item: {\r\n                        id: values.id,\r\n                        title: values.title,\r\n                        assign: values.assign,\r\n                        priority: values.priority,\r\n                        dueDate: values.dueDate ? new Date(values.dueDate) : new Date(),\r\n                        description: values.description,\r\n                        commentIds: values.commentIds,\r\n                        image: values.image\r\n                    },\r\n                    storyId,\r\n                    columnId: values.columnId\r\n                }\r\n            });\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n            handleDrawerOpen();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Drawer\r\n            sx={{\r\n                ml: open ? 3 : 0,\r\n                flexShrink: 0,\r\n                zIndex: 1200,\r\n                overflowX: 'hidden',\r\n                width: { xs: 320, md: 450 },\r\n                '& .MuiDrawer-paper': {\r\n                    height: '100vh',\r\n                    width: { xs: 320, md: 450 },\r\n                    position: 'fixed',\r\n                    border: 'none',\r\n                    borderRadius: '0px'\r\n                }\r\n            }}\r\n            variant=\"temporary\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            ModalProps={{ keepMounted: true }}\r\n            onClose={handleDrawerOpen}\r\n        >\r\n            <Box sx={{ p: 3 }}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h4\">Add Task</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    name=\"title\"\r\n                                    label=\"Title\"\r\n                                    defaultValue={formik.values.title}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                    helperText={formik.touched.title && formik.errors.title}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">Assign to:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <Grid container justifyContent=\"flex-start\">\r\n                                            <Autocomplete\r\n                                                id=\"assign\"\r\n                                                value={profiles.find((profile) => profile.id === formik.values.assign) || null}\r\n                                                onChange={(event, value) => {\r\n                                                    formik.setFieldValue('assign', value?.id);\r\n                                                }}\r\n                                                options={profiles}\r\n                                                fullWidth\r\n                                                autoHighlight\r\n                                                getOptionLabel={(option) => option.name}\r\n                                                renderOption={(props, option) => (\r\n                                                    <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                                                        <img\r\n                                                            loading=\"lazy\"\r\n                                                            width=\"20\"\r\n                                                            src={avatarImage(`./${option.avatar}`).default}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                        {option.name}\r\n                                                    </Box>\r\n                                                )}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label=\"Choose a assignee\"\r\n                                                        inputProps={{\r\n                                                            ...params.inputProps,\r\n                                                            autoComplete: 'new-password' // disable autocomplete and autofill\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">Prioritize:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <FormControl>\r\n                                            <RadioGroup\r\n                                                row\r\n                                                aria-label=\"color\"\r\n                                                value={formik.values.priority}\r\n                                                onChange={formik.handleChange}\r\n                                                name=\"priority\"\r\n                                                id=\"priority\"\r\n                                            >\r\n                                                <FormControlLabel\r\n                                                    value=\"low\"\r\n                                                    control={<Radio color=\"primary\" sx={{ color: 'primary.main' }} />}\r\n                                                    label=\"Low\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"medium\"\r\n                                                    control={<Radio color=\"warning\" sx={{ color: 'warning.main' }} />}\r\n                                                    label=\"Medium\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"high\"\r\n                                                    control={<Radio color=\"error\" sx={{ color: 'error.main' }} />}\r\n                                                    label=\"High\"\r\n                                                />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">Due date:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <DesktopDatePicker\r\n                                            label=\"Due Date\"\r\n                                            value={formik.values.dueDate}\r\n                                            inputFormat=\"dd/MM/yyyy\"\r\n                                            onChange={(date) => {\r\n                                                formik.setFieldValue('dueDate', date);\r\n                                            }}\r\n                                            renderInput={(props) => <TextField fullWidth {...props} />}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">Description:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            id=\"description\"\r\n                                            name=\"description\"\r\n                                            multiline\r\n                                            rows={3}\r\n                                            defaultValue={formik.values.description}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                            helperText={formik.touched.description && formik.errors.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">State:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <FormControl fullWidth sx={{ m: 1 }}>\r\n                                            <Select\r\n                                                id=\"columnId\"\r\n                                                name=\"columnId\"\r\n                                                displayEmpty\r\n                                                value={formik.values.columnId}\r\n                                                onChange={formik.handleChange}\r\n                                                inputProps={{ 'aria-label': 'Without label' }}\r\n                                            >\r\n                                                {columns.map((column, index) => (\r\n                                                    <MenuItem key={index} value={column.id}>\r\n                                                        {column.title}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Typography variant=\"subtitle1\">Attachments:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <Grid container alignItems=\"center\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    image={imgMain}\r\n                                                    sx={{ width: 60, height: 60, borderRadius: 1 }}\r\n                                                    title=\"Slider5 image\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button variant=\"outlined\" size=\"large\" sx={{ p: 2 }}>\r\n                                                    <AddRoundedIcon />\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <AnimateButton>\r\n                                    <Button fullWidth variant=\"contained\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </LocalizationProvider>\r\n                </form>\r\n            </Box>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nAddItem.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleDrawerOpen: PropTypes.func,\r\n    storyId: PropTypes.string\r\n};\r\n\r\nexport default AddItem;\r\n"]},"metadata":{},"sourceType":"module"}