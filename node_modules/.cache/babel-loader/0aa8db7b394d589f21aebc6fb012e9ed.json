{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Backlogs/UserStory.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, ButtonBase, Collapse, IconButton, Link, Menu, MenuItem, Stack, Table, TableBody, TableCell, TableContainer, TableRow, Tooltip, Typography } from '@mui/material'; // third-party\n\nimport { format } from 'date-fns';\nimport { Droppable, Draggable } from 'react-beautiful-dnd'; // project imports\n\nimport AddItem from './AddItem';\nimport EditStory from './EditStory';\nimport AlertStoryDelete from './AlertStoryDelete';\nimport Items from './Items';\nimport { SNACKBAR_OPEN, DELETE_STORY } from 'store/actions'; // assets\n\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport MenuBookTwoToneIcon from '@mui/icons-material/MenuBookTwoTone'; // drag wrapper\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getDragWrapper = (isDragging, theme, open) => ({\n  backgroundColor: isDragging || open ? theme.palette.primary.light : 'transparent',\n  userSelect: 'none'\n}); // drop wrapper\n\n\nconst getDropWrapper = (isDraggingOver, theme) => ({\n  background: isDraggingOver ? theme.palette.grey[100] + 80 : 'transparent'\n}); // ==============================|| KANBAN BACKLOGS - USER STORY ||============================== //\n\n\nconst UserStory = ({\n  story,\n  index\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const kanban = useSelector(state => state.kanban);\n  const {\n    columns,\n    profiles\n  } = kanban;\n  const [open, setOpen] = useState(false);\n  const storyColumn = columns.filter(column => column.id === story.columnId)[0];\n  const storyProfile = profiles.filter(profile => profile.id === story.assign)[0]; // drawer\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(prevState => !prevState);\n  };\n\n  const addItem = () => {\n    setOpenDrawer(prevState => !prevState);\n  };\n\n  const [openStoryDrawer, setOpenStoryDrawer] = useState(false);\n\n  const handleStoryDrawerOpen = () => {\n    setOpenStoryDrawer(prevState => !prevState);\n  };\n\n  const editStory = () => {\n    setOpenStoryDrawer(prevState => !prevState);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleModalClose = status => {\n    setOpenModal(false);\n\n    if (status) {\n      dispatch({\n        type: DELETE_STORY,\n        payload: {\n          itemId: story.id\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Task Deleted successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: story.id,\n      index: index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          ref: provided.innerRef,\n          sx: getDragWrapper(snapshot.isDragging, theme, open),\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              pl: 3,\n              minWidth: 120,\n              width: 120,\n              height: 46\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 0.25,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add Task\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"expand row\",\n                  size: \"small\",\n                  onClick: addItem,\n                  children: /*#__PURE__*/_jsxDEV(AddCircleTwoToneIcon, {\n                    fontSize: \"small\",\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"expand row\",\n                size: \"small\",\n                onClick: () => setOpen(!open),\n                children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 94\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 110,\n              minWidth: 110\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 0.5,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(MenuBookTwoToneIcon, {\n                color: \"secondary\",\n                sx: {\n                  fontSize: '0.875rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: story.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              maxWidth: 'calc(100vw - 850px)',\n              minWidth: 140\n            },\n            component: \"th\",\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              color: \"default\",\n              onClick: editStory,\n              sx: {\n                overflow: 'hidden',\n                display: 'block',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                ':hover': {\n                  color: 'primary.main'\n                },\n                cursor: 'pointer'\n              },\n              children: story.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 60,\n              minWidth: 60\n            },\n            children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n              className: \"more-button\",\n              sx: {\n                borderRadius: '12px'\n              },\n              onClick: handleClick,\n              \"aria-controls\": \"menu-comment\",\n              \"aria-haspopup\": \"true\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                component: \"span\",\n                size: \"small\",\n                disableRipple: true,\n                children: /*#__PURE__*/_jsxDEV(MoreVertTwoToneIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-comment\",\n              anchorEl: anchorEl,\n              keepMounted: true,\n              open: Boolean(anchorEl),\n              onClose: handleClose,\n              variant: \"selectedMenu\",\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => {\n                  handleClose();\n                  editStory();\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => {\n                  handleClose();\n                  setOpenModal(true);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AlertStoryDelete, {\n              title: story.title,\n              open: openModal,\n              handleClose: handleModalClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 90,\n              minWidth: 90\n            },\n            children: storyColumn ? storyColumn.title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 140,\n              minWidth: 140\n            },\n            children: storyProfile ? storyProfile.name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 85,\n              minWidth: 85,\n              textTransform: 'capitalize'\n            },\n            children: story.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              width: 120,\n              minWidth: 120\n            },\n            children: story.dueDate ? format(new Date(story.dueDate), 'd MMM yyyy') : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: story.id,\n          type: \"item\",\n          children: (providedDrop, snapshotDrop) => {\n            var _story$itemIds;\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              ref: providedDrop.innerRef,\n              ...providedDrop.droppableProps,\n              sx: getDropWrapper(snapshotDrop.isDraggingOver, theme),\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  padding: 0\n                },\n                colSpan: 8,\n                children: /*#__PURE__*/_jsxDEV(Collapse, {\n                  in: open,\n                  timeout: \"auto\",\n                  unmountOnExit: true,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      margin: 0\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        size: \"small\",\n                        \"aria-label\": \"purchases\",\n                        children: /*#__PURE__*/_jsxDEV(TableBody, {\n                          children: [(_story$itemIds = story.itemIds) === null || _story$itemIds === void 0 ? void 0 : _story$itemIds.map((itemId, i) => /*#__PURE__*/_jsxDEV(Items, {\n                            itemId: itemId,\n                            index: i\n                          }, itemId, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 65\n                          }, this)), providedDrop.placeholder]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditStory, {\n      story: story,\n      open: openStoryDrawer,\n      handleDrawerOpen: handleStoryDrawerOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddItem, {\n      open: openDrawer,\n      handleDrawerOpen: handleDrawerOpen,\n      storyId: story.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserStory, \"qVY5tJHHTL+Lnh/ytcBPhBFFACE=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = UserStory;\nUserStory.propTypes = {\n  index: PropTypes.number,\n  story: PropTypes.object\n};\nexport default UserStory;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStory\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Backlogs/UserStory.js"],"names":["PropTypes","useState","useDispatch","useSelector","useTheme","Box","ButtonBase","Collapse","IconButton","Link","Menu","MenuItem","Stack","Table","TableBody","TableCell","TableContainer","TableRow","Tooltip","Typography","format","Droppable","Draggable","AddItem","EditStory","AlertStoryDelete","Items","SNACKBAR_OPEN","DELETE_STORY","MoreVertTwoToneIcon","AddCircleTwoToneIcon","KeyboardArrowDownIcon","KeyboardArrowRightIcon","MenuBookTwoToneIcon","getDragWrapper","isDragging","theme","open","backgroundColor","palette","primary","light","userSelect","getDropWrapper","isDraggingOver","background","grey","UserStory","story","index","dispatch","kanban","state","columns","profiles","setOpen","storyColumn","filter","column","id","columnId","storyProfile","profile","assign","openDrawer","setOpenDrawer","handleDrawerOpen","prevState","addItem","openStoryDrawer","setOpenStoryDrawer","handleStoryDrawerOpen","editStory","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","openModal","setOpenModal","handleModalClose","status","type","payload","itemId","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","provided","snapshot","draggableProps","dragHandleProps","innerRef","pl","minWidth","width","height","fontSize","maxWidth","overflow","display","textOverflow","whiteSpace","color","cursor","title","borderRadius","Boolean","name","textTransform","priority","dueDate","Date","providedDrop","snapshotDrop","droppableProps","padding","margin","itemIds","map","i","placeholder","propTypes","number","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    ButtonBase,\r\n    Collapse,\r\n    IconButton,\r\n    Link,\r\n    Menu,\r\n    MenuItem,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport { format } from 'date-fns';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// project imports\r\nimport AddItem from './AddItem';\r\nimport EditStory from './EditStory';\r\nimport AlertStoryDelete from './AlertStoryDelete';\r\nimport Items from './Items';\r\nimport { SNACKBAR_OPEN, DELETE_STORY } from 'store/actions';\r\n\r\n// assets\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\r\nimport MenuBookTwoToneIcon from '@mui/icons-material/MenuBookTwoTone';\r\n\r\n// drag wrapper\r\nconst getDragWrapper = (isDragging, theme, open) => ({\r\n    backgroundColor: isDragging || open ? theme.palette.primary.light : 'transparent',\r\n    userSelect: 'none'\r\n});\r\n\r\n// drop wrapper\r\nconst getDropWrapper = (isDraggingOver, theme) => ({\r\n    background: isDraggingOver ? theme.palette.grey[100] + 80 : 'transparent'\r\n});\r\n\r\n// ==============================|| KANBAN BACKLOGS - USER STORY ||============================== //\r\n\r\nconst UserStory = ({ story, index }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const kanban = useSelector((state) => state.kanban);\r\n    const { columns, profiles } = kanban;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const storyColumn = columns.filter((column) => column.id === story.columnId)[0];\r\n    const storyProfile = profiles.filter((profile) => profile.id === story.assign)[0];\r\n\r\n    // drawer\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpenDrawer((prevState) => !prevState);\r\n    };\r\n\r\n    const addItem = () => {\r\n        setOpenDrawer((prevState) => !prevState);\r\n    };\r\n\r\n    const [openStoryDrawer, setOpenStoryDrawer] = useState(false);\r\n    const handleStoryDrawerOpen = () => {\r\n        setOpenStoryDrawer((prevState) => !prevState);\r\n    };\r\n\r\n    const editStory = () => {\r\n        setOpenStoryDrawer((prevState) => !prevState);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const handleModalClose = (status) => {\r\n        setOpenModal(false);\r\n        if (status) {\r\n            dispatch({\r\n                type: DELETE_STORY,\r\n                payload: {\r\n                    itemId: story.id\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Task Deleted successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Draggable draggableId={story.id} index={index}>\r\n                {(provided, snapshot) => (\r\n                    <>\r\n                        <TableRow\r\n                            hover\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                            sx={getDragWrapper(snapshot.isDragging, theme, open)}\r\n                        >\r\n                            <TableCell sx={{ pl: 3, minWidth: 120, width: 120, height: 46 }}>\r\n                                <Stack direction=\"row\" spacing={0.25} alignItems=\"center\">\r\n                                    <Tooltip title=\"Add Task\">\r\n                                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={addItem}>\r\n                                            <AddCircleTwoToneIcon fontSize=\"small\" color=\"primary\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                                        {open ? <KeyboardArrowDownIcon fontSize=\"small\" /> : <KeyboardArrowRightIcon fontSize=\"small\" />}\r\n                                    </IconButton>\r\n                                </Stack>\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: 110, minWidth: 110 }}>\r\n                                <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                                    <MenuBookTwoToneIcon color=\"secondary\" sx={{ fontSize: '0.875rem' }} />\r\n                                    <Typography variant=\"body2\">{story.id}</Typography>\r\n                                </Stack>\r\n                            </TableCell>\r\n                            <TableCell sx={{ maxWidth: 'calc(100vw - 850px)', minWidth: 140 }} component=\"th\" scope=\"row\">\r\n                                <Link\r\n                                    underline=\"hover\"\r\n                                    color=\"default\"\r\n                                    onClick={editStory}\r\n                                    sx={{\r\n                                        overflow: 'hidden',\r\n                                        display: 'block',\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        ':hover': { color: 'primary.main' },\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                >\r\n                                    {story.title}\r\n                                </Link>\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: 60, minWidth: 60 }}>\r\n                                <ButtonBase\r\n                                    className=\"more-button\"\r\n                                    sx={{ borderRadius: '12px' }}\r\n                                    onClick={handleClick}\r\n                                    aria-controls=\"menu-comment\"\r\n                                    aria-haspopup=\"true\"\r\n                                >\r\n                                    <IconButton component=\"span\" size=\"small\" disableRipple>\r\n                                        <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                </ButtonBase>\r\n                                <Menu\r\n                                    id=\"menu-comment\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem\r\n                                        onClick={() => {\r\n                                            handleClose();\r\n                                            editStory();\r\n                                        }}\r\n                                    >\r\n                                        Edit\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        onClick={() => {\r\n                                            handleClose();\r\n                                            setOpenModal(true);\r\n                                        }}\r\n                                    >\r\n                                        Delete\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                                <AlertStoryDelete title={story.title} open={openModal} handleClose={handleModalClose} />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: 90, minWidth: 90 }}>{storyColumn ? storyColumn.title : ''}</TableCell>\r\n                            <TableCell sx={{ width: 140, minWidth: 140 }}>{storyProfile ? storyProfile.name : ''}</TableCell>\r\n                            <TableCell sx={{ width: 85, minWidth: 85, textTransform: 'capitalize' }}>{story.priority}</TableCell>\r\n                            <TableCell sx={{ width: 120, minWidth: 120 }}>\r\n                                {story.dueDate ? format(new Date(story.dueDate), 'd MMM yyyy') : ''}\r\n                            </TableCell>\r\n                        </TableRow>\r\n\r\n                        <Droppable droppableId={story.id} type=\"item\">\r\n                            {(providedDrop, snapshotDrop) => (\r\n                                <TableRow\r\n                                    ref={providedDrop.innerRef}\r\n                                    {...providedDrop.droppableProps}\r\n                                    sx={getDropWrapper(snapshotDrop.isDraggingOver, theme)}\r\n                                >\r\n                                    <TableCell style={{ padding: 0 }} colSpan={8}>\r\n                                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                            <Box\r\n                                                sx={{\r\n                                                    margin: 0\r\n                                                }}\r\n                                            >\r\n                                                <TableContainer>\r\n                                                    <Table size=\"small\" aria-label=\"purchases\">\r\n                                                        <TableBody>\r\n                                                            {story.itemIds?.map((itemId, i) => (\r\n                                                                <Items key={itemId} itemId={itemId} index={i} />\r\n                                                            ))}\r\n                                                            {providedDrop.placeholder}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </TableContainer>\r\n                                            </Box>\r\n                                        </Collapse>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </Droppable>\r\n                    </>\r\n                )}\r\n            </Draggable>\r\n            <EditStory story={story} open={openStoryDrawer} handleDrawerOpen={handleStoryDrawerOpen} />\r\n            <AddItem open={openDrawer} handleDrawerOpen={handleDrawerOpen} storyId={story.id} />\r\n        </>\r\n    );\r\n};\r\n\r\nUserStory.propTypes = {\r\n    index: PropTypes.number,\r\n    story: PropTypes.object\r\n};\r\n\r\nexport default UserStory;\r\n"]},"metadata":{},"sourceType":"module"}