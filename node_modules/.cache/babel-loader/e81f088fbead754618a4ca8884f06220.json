{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/application/customer/ProductReview/ReviewEdit.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Rating, TextField, Typography } from '@mui/material'; // project imports\n\nimport { gridSpacing } from 'store/constant';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // review state options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reviewState = [{\n  value: '1',\n  label: 'Published'\n}, {\n  value: '2',\n  label: 'Pending'\n}, {\n  value: '3',\n  label: 'confirm'\n}];\n\nconst ReviewEdit = ({\n  open,\n  handleCloseDialog\n}) => {\n  _s();\n\n  // handle review status change\n  const [currency, setCurrency] = useState('1');\n\n  const handleSelectChange = event => {\n    setCurrency(event.target.value);\n  }; // handle star rating\n\n\n  const [value, setValue] = useState(2);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleCloseDialog,\n    sx: {\n      '&>div:nth-child(3)': {\n        '&>div': {\n          maxWidth: 400\n        }\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        sx: {\n          my: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic-review-product\",\n            fullWidth: true,\n            label: \"Product \",\n            defaultValue: \"Apple Watch Series 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic-review-author\",\n            fullWidth: true,\n            label: \"Author \",\n            defaultValue: \"Joseph William\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic-review\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            label: \"Text of review\",\n            defaultValue: \"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            align: \"left\",\n            variant: \"body2\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"simple-controlled\",\n            value: value,\n            precision: 0.5,\n            onChange: (event, newValue) => {\n              setValue(newValue);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-select-currency\",\n            select: true,\n            label: \"Status\",\n            value: currency,\n            fullWidth: true,\n            onChange: handleSelectChange,\n            children: reviewState.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(AnimateButton, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        onClick: handleCloseDialog,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReviewEdit, \"XoDxvQtmNB1P8wtk2B7OE98VVfI=\");\n\n_c = ReviewEdit;\nReviewEdit.propTypes = {\n  open: PropTypes.bool,\n  handleCloseDialog: PropTypes.func\n};\nexport default ReviewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewEdit\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/application/customer/ProductReview/ReviewEdit.js"],"names":["PropTypes","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","Rating","TextField","Typography","gridSpacing","AnimateButton","reviewState","value","label","ReviewEdit","open","handleCloseDialog","currency","setCurrency","handleSelectChange","event","target","setValue","maxWidth","my","newValue","map","option","propTypes","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Rating, TextField, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// review state options\r\nconst reviewState = [\r\n    {\r\n        value: '1',\r\n        label: 'Published'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Pending'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'confirm'\r\n    }\r\n];\r\n\r\nconst ReviewEdit = ({ open, handleCloseDialog }) => {\r\n    // handle review status change\r\n    const [currency, setCurrency] = useState('1');\r\n    const handleSelectChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    // handle star rating\r\n    const [value, setValue] = useState(2);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleCloseDialog}\r\n            sx={{\r\n                '&>div:nth-child(3)': {\r\n                    '&>div': {\r\n                        maxWidth: 400\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle>Edit Review</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={gridSpacing} sx={{ my: 0 }}>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic-review-product\" fullWidth label=\"Product \" defaultValue=\"Apple Watch Series 4\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic-review-author\" fullWidth label=\"Author \" defaultValue=\"Joseph William\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"outlined-basic-review\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            label=\"Text of review\"\r\n                            defaultValue=\"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography align=\"left\" variant=\"body2\">\r\n                            Rating\r\n                        </Typography>\r\n                        <Rating\r\n                            name=\"simple-controlled\"\r\n                            value={value}\r\n                            precision={0.5}\r\n                            onChange={(event, newValue) => {\r\n                                setValue(newValue);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"standard-select-currency\"\r\n                            select\r\n                            label=\"Status\"\r\n                            value={currency}\r\n                            fullWidth\r\n                            onChange={handleSelectChange}\r\n                        >\r\n                            {reviewState.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <AnimateButton>\r\n                    <Button variant=\"contained\">Create</Button>\r\n                </AnimateButton>\r\n                <Button variant=\"text\" onClick={handleCloseDialog}>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nReviewEdit.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleCloseDialog: PropTypes.func\r\n};\r\n\r\nexport default ReviewEdit;\r\n"]},"metadata":{},"sourceType":"module"}