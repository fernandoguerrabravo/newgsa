{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SellerStoreFiles.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/material/styles\";\nimport { Button, Grid, Divider, FormLabel, FormControlLabel } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { green, red, blue } from \"@mui/material/colors\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { Save, Attachment, Info, Publish } from \"@mui/icons-material\";\nimport FileProvider from \"../providers/file.provider\";\nimport { checkFileMIMEType, checkFileSize, getFormattedSize } from \"../helpers/files.helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst blobToBase64 = async file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = error => reject(error);\n});\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nconst styles2 = makeStyles(theme => ({\n  icons: {\n    fontSize: \"small\",\n    backgroundColor: red[500],\n    color: red[500]\n  },\n  formControl2: {\n    minWidth: 300,\n    padding: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  },\n  formControl1: {\n    minWidth: 100,\n    padding: theme.spacing(1)\n  }\n}));\n\nconst SellerStoreFiles = ({\n  skus,\n  idcliente\n}) => {\n  _s();\n\n  const classes2 = styles2();\n  const classes = useStyles();\n  const MAXIMUM_FILES_LIMIT = 5;\n  /**\n   * Size in MB\n   */\n\n  const MAXIMUM_FILE_SIZE = 2;\n  const ALLOWED_FORMATS = \".pdf, .doc, .docx, .odt, image/*\";\n  const [files, setFiles] = useState([]); // const [refId, setRefId] = useState(idcliente);\n  // const [skur, setSku] = useState('');\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const getCurrentFiles = async event => {\n    const rawFiles = event.target.files;\n    const fileList = []; // WIll contain an array of type File[]\n\n    if (!rawFiles) {\n      return;\n    }\n\n    if (rawFiles instanceof Array) {\n      rawFiles.forEach(file => fileList.push(file));\n    } else {\n      const rawFilesArray = Array.from(rawFiles);\n      rawFilesArray.forEach(file => fileList.push(file));\n    }\n\n    const finalFileList = [];\n\n    for (const file of fileList) {\n      var _encodedData$toString;\n\n      const extensionSeparatorIndex = file.name.lastIndexOf(\".\");\n      const formattedName = file.name.substring(0, extensionSeparatorIndex);\n      const extension = file.name.substr(extensionSeparatorIndex);\n      const encodedData = await blobToBase64(file);\n      const formattedFile = {\n        name: formattedName,\n        extension,\n        file: (_encodedData$toString = encodedData === null || encodedData === void 0 ? void 0 : encodedData.toString()) !== null && _encodedData$toString !== void 0 ? _encodedData$toString : \"\",\n        type: \"append\",\n        size: file.size\n      };\n\n      if (files.find(appendedFile => appendedFile.name === formattedFile.name)) {\n        Swal.fire({\n          icon: \"info\",\n          title: `The file ${formattedFile.name + formattedFile.extension} is already added`\n        });\n        break;\n      }\n\n      if (!checkFileMIMEType(file.type, ALLOWED_FORMATS)) {\n        Swal.fire({\n          icon: \"warning\",\n          title: \"Please select another file (Supported formats: images and PDF)\",\n          html: `<small class=\"text-muted\">The file ${file.name} is not supported</small>`\n        });\n        break;\n      }\n\n      if (!checkFileSize(file.size, MAXIMUM_FILE_SIZE)) {\n        Swal.fire({\n          icon: \"warning\",\n          title: `The maximum file size is ${MAXIMUM_FILE_SIZE}MB`,\n          html: `<small class=\"text-muted\">The file ${file.name} have a size of ${getFormattedSize(file.size, 2)}</small>`\n        });\n        break;\n      }\n\n      if (files.length < MAXIMUM_FILES_LIMIT) {\n        finalFileList.push(formattedFile);\n      } else {\n        Swal.fire({\n          icon: \"info\",\n          title: `The maximum file quantity to upload is ${MAXIMUM_FILES_LIMIT}`\n        });\n        break;\n      }\n    }\n\n    if (finalFileList.length > 0) {\n      setFiles([...files, ...finalFileList]);\n    }\n\n    event.target.value = event.target.defaultValue; // Reset input cached value\n  };\n  /* const handleRefIdChange = (event) => {\n   if (event.isTrusted) {\n  \t setRefId(event.target.value)\n   }\n  } \n  \t const handleSkuChange = (event) => {\n   if (event.isTrusted) {\n  \t setSku(event.target.value);\n   }\n  }v */\n\n\n  const handleFilesSubmit = async event => {\n    event.preventDefault();\n\n    if (event.isTrusted && skus !== \"\") {\n      const proceed = await Swal.fire({\n        title: \"The files will be uploaded to the S3 bucket. Proceed?\",\n        text: `The destination directory is /${idcliente}/${skus}`,\n        icon: \"question\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No. Abort action\",\n        showCancelButton: true\n      });\n\n      if (!(proceed === null || proceed === void 0 ? void 0 : proceed.isConfirmed)) {\n        return;\n      }\n\n      setSubmitting(true);\n\n      try {\n        var _response$value;\n\n        const response = (await new FileProvider().submitFiles(files, idcliente, skus)).data;\n\n        if (response === null || response === void 0 ? void 0 : (_response$value = response.value) === null || _response$value === void 0 ? void 0 : _response$value.fileUpload) {\n          await Swal.fire({\n            title: `${files.length > 1 ? \"Files\" : \"File\"} uploaded successfully`,\n            icon: \"success\"\n          });\n          setFiles([]);\n        } else {\n          var _response$error$messa;\n\n          await Swal.fire({\n            title: (_response$error$messa = response.error.message) !== null && _response$error$messa !== void 0 ? _response$error$messa : \"Unexpected error\",\n            icon: \"error\"\n          });\n        }\n      } catch (reason) {\n        Swal.fire({\n          title: \"Unexpected error\",\n          text: \"Please try again later\",\n          icon: \"error\"\n        });\n      }\n\n      setSubmitting(false);\n      event.target.reset();\n    } else {\n      Swal.fire({\n        title: \"Opps!!\",\n        text: \"Please enter a valid SKU\",\n        icon: \"Warning\"\n      });\n    }\n  };\n\n  const removeFile = (event, index) => {\n    if (event.isTrusted) {\n      const currentFiles = files;\n      currentFiles.splice(index, 1);\n      setFiles([...currentFiles]);\n    }\n  };\n\n  useEffect(() => {\n    document.title = \"S3 REST API w/ File Upload Example\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFilesSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      className: classes2.formControl2,\n      children: [\"Upload Business and Legal Documents\", /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"you can later upload documents or images of your product.\",\n        children: /*#__PURE__*/_jsxDEV(Info, {\n          fontSize: \"small\",\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes2.formControl1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"file1\",\n        name: \"file1\",\n        type: \"file\",\n        onChange: getCurrentFiles,\n        variant: \"outlined\",\n        className: classes2.input,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file1\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(Attachment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 24\n          }, this),\n          size: \"large\",\n          variant: \"outlined\",\n          component: \"span\",\n          children: \"Select File ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes2.formControl2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(Publish, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 24\n        }, this),\n        size: \"large\",\n        variant: \"outlined\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Upload List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes2.formControl2,\n      gutterBottom: true,\n      children: files.length > 0 ? `Files in queue (${files.length}):` : \"No files in queue yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes2.formControl2,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Extension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: files.map((file, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.extension\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getFormattedSize(file.size, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  type: \"button\",\n                  onClick: event => removeFile(event, index),\n                  disabled: submitting,\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SellerStoreFiles, \"VdM2xE5dtkNeH7sqUphfuDJu3gI=\", false, function () {\n  return [useStyles];\n});\n\n_c = SellerStoreFiles;\nexport default SellerStoreFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerStoreFiles\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SellerStoreFiles.jsx"],"names":["React","useState","useEffect","makeStyles","Button","Grid","Divider","FormLabel","FormControlLabel","TextField","Swal","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","green","red","blue","Tooltip","FormControl","Save","Attachment","Info","Publish","FileProvider","checkFileMIMEType","checkFileSize","getFormattedSize","blobToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","useStyles","table","minWidth","styles2","theme","icons","fontSize","backgroundColor","color","formControl2","padding","spacing","input","display","formControl1","SellerStoreFiles","skus","idcliente","classes2","classes","MAXIMUM_FILES_LIMIT","MAXIMUM_FILE_SIZE","ALLOWED_FORMATS","files","setFiles","submitting","setSubmitting","getCurrentFiles","event","rawFiles","target","fileList","Array","forEach","push","rawFilesArray","from","finalFileList","extensionSeparatorIndex","name","lastIndexOf","formattedName","substring","extension","substr","encodedData","formattedFile","toString","type","size","find","appendedFile","fire","icon","title","html","length","value","defaultValue","handleFilesSubmit","preventDefault","isTrusted","proceed","text","confirmButtonText","cancelButtonText","showCancelButton","isConfirmed","response","submitFiles","data","fileUpload","message","reason","reset","removeFile","index","currentFiles","splice","document","map"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/material/styles\";\nimport {\n  Button,\n  Grid,\n  Divider,\n  FormLabel,\n  FormControlLabel,\n} from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { green, red, blue } from \"@mui/material/colors\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { Save, Attachment, Info, Publish } from \"@mui/icons-material\";\nimport FileProvider from \"../providers/file.provider\";\nimport {\n  checkFileMIMEType,\n  checkFileSize,\n  getFormattedSize,\n} from \"../helpers/files.helper\";\n\nconst blobToBase64 = async (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst styles2 = makeStyles((theme) => ({\n  icons: {\n    fontSize: \"small\",\n    backgroundColor: red[500],\n    color: red[500],\n  },\n\n  formControl2: {\n    minWidth: 300,\n    padding: theme.spacing(1),\n  },\n\n  input: {\n    display: \"none\",\n  },\n\n  formControl1: {\n    minWidth: 100,\n    padding: theme.spacing(1),\n  },\n}));\n\nconst SellerStoreFiles = ({ skus, idcliente }) => {\n  const classes2 = styles2();\n  const classes = useStyles();\n\n  const MAXIMUM_FILES_LIMIT = 5;\n  /**\n   * Size in MB\n   */\n  const MAXIMUM_FILE_SIZE = 2;\n  const ALLOWED_FORMATS = \".pdf, .doc, .docx, .odt, image/*\";\n\n  const [files, setFiles] = useState([]);\n  // const [refId, setRefId] = useState(idcliente);\n  // const [skur, setSku] = useState('');\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const getCurrentFiles = async (event) => {\n    const rawFiles = event.target.files;\n    const fileList = []; // WIll contain an array of type File[]\n    if (!rawFiles) {\n      return;\n    }\n    if (rawFiles instanceof Array) {\n      rawFiles.forEach((file) => fileList.push(file));\n    } else {\n      const rawFilesArray = Array.from(rawFiles);\n      rawFilesArray.forEach((file) => fileList.push(file));\n    }\n    const finalFileList = [];\n    for (const file of fileList) {\n      const extensionSeparatorIndex = file.name.lastIndexOf(\".\");\n      const formattedName = file.name.substring(0, extensionSeparatorIndex);\n      const extension = file.name.substr(extensionSeparatorIndex);\n      const encodedData = await blobToBase64(file);\n      const formattedFile = {\n        name: formattedName,\n        extension,\n        file: encodedData?.toString() ?? \"\",\n        type: \"append\",\n        size: file.size,\n      };\n      if (\n        files.find((appendedFile) => appendedFile.name === formattedFile.name)\n      ) {\n        Swal.fire({\n          icon: \"info\",\n          title: `The file ${\n            formattedFile.name + formattedFile.extension\n          } is already added`,\n        });\n        break;\n      }\n      if (!checkFileMIMEType(file.type, ALLOWED_FORMATS)) {\n        Swal.fire({\n          icon: \"warning\",\n          title:\n            \"Please select another file (Supported formats: images and PDF)\",\n          html: `<small class=\"text-muted\">The file ${file.name} is not supported</small>`,\n        });\n        break;\n      }\n      if (!checkFileSize(file.size, MAXIMUM_FILE_SIZE)) {\n        Swal.fire({\n          icon: \"warning\",\n          title: `The maximum file size is ${MAXIMUM_FILE_SIZE}MB`,\n          html: `<small class=\"text-muted\">The file ${\n            file.name\n          } have a size of ${getFormattedSize(file.size, 2)}</small>`,\n        });\n        break;\n      }\n      if (files.length < MAXIMUM_FILES_LIMIT) {\n        finalFileList.push(formattedFile);\n      } else {\n        Swal.fire({\n          icon: \"info\",\n          title: `The maximum file quantity to upload is ${MAXIMUM_FILES_LIMIT}`,\n        });\n        break;\n      }\n    }\n    if (finalFileList.length > 0) {\n      setFiles([...files, ...finalFileList]);\n    }\n    event.target.value = event.target.defaultValue; // Reset input cached value\n  };\n\n  /* const handleRefIdChange = (event) => {\n\t\t if (event.isTrusted) {\n\t\t\t setRefId(event.target.value)\n\t\t }\n\t } \n \n\t const handleSkuChange = (event) => {\n\t\t if (event.isTrusted) {\n\t\t\t setSku(event.target.value);\n\t\t }\n\t }v */\n\n  const handleFilesSubmit = async (event) => {\n    event.preventDefault();\n    if (event.isTrusted && skus !== \"\") {\n      const proceed = await Swal.fire({\n        title: \"The files will be uploaded to the S3 bucket. Proceed?\",\n        text: `The destination directory is /${idcliente}/${skus}`,\n        icon: \"question\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No. Abort action\",\n        showCancelButton: true,\n      });\n      if (!proceed?.isConfirmed) {\n        return;\n      }\n      setSubmitting(true);\n      try {\n        const response = (\n          await new FileProvider().submitFiles(files, idcliente, skus)\n        ).data;\n        if (response?.value?.fileUpload) {\n          await Swal.fire({\n            title: `${\n              files.length > 1 ? \"Files\" : \"File\"\n            } uploaded successfully`,\n            icon: \"success\",\n          });\n          setFiles([]);\n        } else {\n          await Swal.fire({\n            title: response.error.message ?? \"Unexpected error\",\n            icon: \"error\",\n          });\n        }\n      } catch (reason) {\n        Swal.fire({\n          title: \"Unexpected error\",\n          text: \"Please try again later\",\n          icon: \"error\",\n        });\n      }\n      setSubmitting(false);\n      event.target.reset();\n    } else {\n      Swal.fire({\n        title: \"Opps!!\",\n        text: \"Please enter a valid SKU\",\n        icon: \"Warning\",\n      });\n    }\n  };\n\n  const removeFile = (event, index) => {\n    if (event.isTrusted) {\n      const currentFiles = files;\n      currentFiles.splice(index, 1);\n      setFiles([...currentFiles]);\n    }\n  };\n\n  useEffect(() => {\n    document.title = \"S3 REST API w/ File Upload Example\";\n  }, []);\n\n  return (\n    <form onSubmit={handleFilesSubmit}>\n      <Typography variant=\"h6\" gutterBottom className={classes2.formControl2}>\n        Upload Business and Legal Documents\n        <Tooltip title=\"you can later upload documents or images of your product.\">\n          <Info fontSize=\"small\" color=\"action\" />\n        </Tooltip>\n      </Typography>\n      <FormControl className={classes2.formControl1}>\n        <TextField\n          id=\"file1\"\n          name=\"file1\"\n          type=\"file\"\n          onChange={getCurrentFiles}\n          variant=\"outlined\"\n          className={classes2.input}\n          multiple\n        />\n        <label htmlFor=\"file1\">\n          <Button\n            startIcon={<Attachment />}\n            size=\"large\"\n            variant=\"outlined\"\n            component=\"span\"\n          >\n            Select File ...\n          </Button>\n        </label>\n      </FormControl>\n\n      {files.length > 0 ? (\n        <FormControl className={classes2.formControl2}>\n          <Button\n            startIcon={<Publish />}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Upload List\n          </Button>\n        </FormControl>\n      ) : null}\n\n      <Typography className={classes2.formControl2} gutterBottom>\n        {files.length > 0\n          ? `Files in queue (${files.length}):`\n          : \"No files in queue yet\"}\n      </Typography>\n      {files.length > 0 ? (\n        <TableContainer className={classes2.formControl2}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>File Name</TableCell>\n                <TableCell>File Extension</TableCell>\n                <TableCell>File Size</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {files.map((file, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{file.name}</TableCell>\n                    <TableCell>{file.extension}</TableCell>\n                    <TableCell>{getFormattedSize(file.size, 2)}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outlined\"\n                        type=\"button\"\n                        onClick={(event) => removeFile(event, index)}\n                        disabled={submitting}\n                      >\n                        Remove\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : null}\n    </form>\n  );\n};\n\nexport default SellerStoreFiles;\n"]},"metadata":{},"sourceType":"module"}