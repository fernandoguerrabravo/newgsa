{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/ui-elements/advance/UIToggleButton/ToggleButtonSizes.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material'; // assets\n\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeftTwoTone';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenterTwoTone';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRightTwoTone';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustifyTwoTone'; // ============================|| UI TOGGLE BUTTON - SIZE ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtonSizes() {\n  _s();\n\n  const theme = useTheme();\n  const [alignment, setAlignment] = useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        size: \"small\",\n        value: alignment,\n        exclusive: true,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"left\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"right\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"justify\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        size: \"medium\",\n        value: alignment,\n        exclusive: true,\n        onChange: handleChange,\n        color: \"secondary\",\n        sx: {\n          color: theme.palette.secondary.dark,\n          bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.secondary.light\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"left\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"right\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"justify\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        size: \"large\",\n        value: alignment,\n        exclusive: true,\n        onChange: handleChange,\n        color: \"primary\",\n        sx: {\n          color: theme.palette.primary.dark,\n          bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"left\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"center\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"right\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"justify\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToggleButtonSizes, \"Os+sFJJsK3jgDinQM2eOSvfQ7KQ=\", false, function () {\n  return [useTheme];\n});\n\n_c = ToggleButtonSizes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtonSizes\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/ui-elements/advance/UIToggleButton/ToggleButtonSizes.js"],"names":["useState","useTheme","Grid","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","ToggleButtonSizes","theme","alignment","setAlignment","handleChange","event","newAlignment","color","palette","secondary","dark","bgcolor","mode","light","primary"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeftTwoTone';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenterTwoTone';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRightTwoTone';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustifyTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - SIZE ||============================ //\r\n\r\nexport default function ToggleButtonSizes() {\r\n    const theme = useTheme();\r\n\r\n    const [alignment, setAlignment] = useState('left');\r\n    const handleChange = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n                <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n                <ToggleButtonGroup\r\n                    size=\"medium\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                        color: theme.palette.secondary.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.secondary.light\r\n                    }}\r\n                >\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n                <ToggleButtonGroup\r\n                    size=\"large\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    color=\"primary\"\r\n                    sx={{\r\n                        color: theme.palette.primary.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\r\n                    }}\r\n                >\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}