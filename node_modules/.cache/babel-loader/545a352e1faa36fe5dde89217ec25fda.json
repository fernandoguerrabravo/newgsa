{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/ui-component/Locales.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'; // third-party\n\nimport { IntlProvider } from 'react-intl'; // load locales files\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst loadLocaleData = locale => {\n  switch (locale) {\n    case 'fr':\n      return import('utils/locales/fr.json');\n\n    case 'ro':\n      return import('utils/locales/ro.json');\n\n    case 'zh':\n      return import('utils/locales/zh.json');\n\n    default:\n      return import('utils/locales/en.json');\n  }\n}; // ==============================|| LOCALIZATION ||============================== //\n\n\nconst Locales = ({\n  children\n}) => {\n  _s();\n\n  const customization = useSelector(state => state.customization);\n  const [messages, setMessages] = useState();\n  useEffect(() => {\n    loadLocaleData(customization.locale).then(d => {\n      setMessages(d.default);\n    });\n  }, [customization.locale]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: messages && /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: customization.locale,\n      defaultLocale: \"en\",\n      messages: messages,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Locales, \"OTkVkgqX/zJM9lt8YfFxo6GQD9A=\", false, function () {\n  return [useSelector];\n});\n\n_c = Locales;\nLocales.propTypes = {\n  children: PropTypes.node\n};\nexport default Locales;\n\nvar _c;\n\n$RefreshReg$(_c, \"Locales\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/ui-component/Locales.js"],"names":["PropTypes","useState","useEffect","useSelector","IntlProvider","loadLocaleData","locale","Locales","children","customization","state","messages","setMessages","then","d","default","propTypes","node"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CAEA;;;;;AACA,MAAMC,cAAc,GAAIC,MAAD,IAAY;AAC/B,UAAQA,MAAR;AACI,SAAK,IAAL;AACI,aAAO,OAAO,uBAAP,CAAP;;AACJ,SAAK,IAAL;AACI,aAAO,OAAO,uBAAP,CAAP;;AACJ,SAAK,IAAL;AACI,aAAO,OAAO,uBAAP,CAAP;;AACJ;AACI,aAAO,OAAO,uBAAP,CAAP;AARR;AAUH,CAXD,C,CAaA;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9B,QAAMC,aAAa,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,CAACI,aAAa,CAACH,MAAf,CAAd,CAAqCO,IAArC,CAA2CC,CAAD,IAAO;AAC7CF,MAAAA,WAAW,CAACE,CAAC,CAACC,OAAH,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACN,aAAa,CAACH,MAAf,CAJM,CAAT;AAMA,sBACI;AAAA,cACKK,QAAQ,iBACL,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEF,aAAa,CAACH,MAApC;AAA4C,MAAA,aAAa,EAAC,IAA1D;AAA+D,MAAA,QAAQ,EAAEK,QAAzE;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AASH,CAnBD;;GAAMD,O;UACoBJ,W;;;KADpBI,O;AAqBNA,OAAO,CAACS,SAAR,GAAoB;AAChBR,EAAAA,QAAQ,EAAER,SAAS,CAACiB;AADJ,CAApB;AAIA,eAAeV,OAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// third-party\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n// load locales files\r\nconst loadLocaleData = (locale) => {\r\n    switch (locale) {\r\n        case 'fr':\r\n            return import('utils/locales/fr.json');\r\n        case 'ro':\r\n            return import('utils/locales/ro.json');\r\n        case 'zh':\r\n            return import('utils/locales/zh.json');\r\n        default:\r\n            return import('utils/locales/en.json');\r\n    }\r\n};\r\n\r\n// ==============================|| LOCALIZATION ||============================== //\r\n\r\nconst Locales = ({ children }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    const [messages, setMessages] = useState();\r\n\r\n    useEffect(() => {\r\n        loadLocaleData(customization.locale).then((d) => {\r\n            setMessages(d.default);\r\n        });\r\n    }, [customization.locale]);\r\n\r\n    return (\r\n        <>\r\n            {messages && (\r\n                <IntlProvider locale={customization.locale} defaultLocale=\"en\" messages={messages}>\r\n                    {children}\r\n                </IntlProvider>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nLocales.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default Locales;\r\n"]},"metadata":{},"sourceType":"module"}