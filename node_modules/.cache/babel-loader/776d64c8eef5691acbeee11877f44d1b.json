{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/carriers/components/accountlist.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unused-vars */\n//import useGetSeller from \"../hooks/UseGetSeller\";\nimport { React, useEffect, useState } from \"react\"; // import { useTheme } from \"@mui/material/styles\";\n\nimport { Button, Paper, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { gridSpacing } from \"store/constant\";\nimport useGetCarrier from \"../hooks/useGetCarrier\";\nimport { GetCarrier } from \"../helpers/GetAccount\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AccountList({\n  idcliente\n}) {\n  _s();\n\n  const cliente = idcliente;\n  const {\n    data\n  } = GetCarrier(cliente); //const datafinal = data[0];\n\n  console.log(\"PICOOO del PERRO\", data); //console.log(\"pico del data\", datafinal)\n\n  const [botoncito, setbotoncito] = useState({\n    activo: true\n  });\n  /* useEffect(() => {\n    setbotoncito(datafinal);\n  }, [botoncito, datafinal]);\n  */\n  //  console.log(\"botonncito\", botoncito);\n\n  const columnas = [{\n    name: \"Id Conexión\",\n    selector: row => row.idcliente\n  }]; //   const nuevoseller = () => {\n  //     setoculto({\n  //       ...oculto,\n  //       hiddentable: false,\n  //       hiddenboton: true,\n  //       hiddenperfilform: true,\n  //       hiddenupdate: false,\n  //     });\n  //   };\n  //   const editar = () => {\n  //     setoculto({\n  //       ...oculto,\n  //       hiddentable: false,\n  //       hiddenboton: true,\n  //       hiddenperfilform: false,\n  //       hiddenupdate: true,\n  //     });\n  //   };\n\n  const pico = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        children: [botoncito ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\" // onClick={editar}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Conectar Nueva Cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : null, botoncito ? null : /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\" // onClick={nuevoseller}\n          ,\n          children: \"Configurar Perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      striped: true,\n      columns: columnas,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountList, \"TSVOGxXu8FgfTEHK8AKyzvMzkfM=\");\n\n_c = AccountList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/carriers/components/accountlist.jsx"],"names":["React","useEffect","useState","Button","Paper","Grid","DataTable","gridSpacing","useGetCarrier","GetCarrier","AccountList","idcliente","cliente","data","console","log","botoncito","setbotoncito","activo","columnas","name","selector","row","pico"],"mappings":";;;AAAA;;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,eAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAGA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAkC;AAAA;;AAE9C,QAAMC,OAAO,GAAGD,SAAhB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWJ,UAAU,CAACG,OAAD,CAA3B,CAH8C,CAI9C;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC,EAL8C,CAM/C;;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC;AACzCgB,IAAAA,MAAM,EAAE;AADiC,GAAD,CAA1C;AAIA;AACF;AACA;AACA;AACE;;AAEA,QAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,QAAQ,EAAGC,GAAD,IAASA,GAAG,CAACX;AAFzB,GADe,CAAjB,CAlB+C,CA0B/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMY,IAAI,GAAG,EAAb;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAEhB,WAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,EAA/B;AAAmC,QAAA,EAAE,EAAE,EAAvC;AAAA,mBACGS,SAAS,gBACR,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,WAHR,CAIE;AAJF;AAAA,iCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADQ,GASN,IAVN,EAWGA,SAAS,GAAG,IAAH,gBACR,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,WAHR,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE,QAAC,SAAD;AAAW,MAAA,OAAO,MAAlB;AAAmB,MAAA,OAAO,EAAEG,QAA5B;AAAsC,MAAA,IAAI,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD;;GA9EuBH,W;;KAAAA,W","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n//import useGetSeller from \"../hooks/UseGetSeller\";\nimport { React, useEffect, useState } from \"react\";\n// import { useTheme } from \"@mui/material/styles\";\nimport { Button, Paper, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { gridSpacing } from \"store/constant\";\nimport useGetCarrier from \"../hooks/useGetCarrier\";\nimport { GetCarrier } from \"../helpers/GetAccount\";\n\n\nexport default function AccountList({idcliente}) {\n  \n   const cliente = idcliente\n   const { data } = GetCarrier(cliente);\n   //const datafinal = data[0];\n   console.log(\"PICOOO del PERRO\", data)\n  //console.log(\"pico del data\", datafinal)\n\n  const [botoncito, setbotoncito] = useState({\n    activo: true,\n  });\n\n  /* useEffect(() => {\n    setbotoncito(datafinal);\n  }, [botoncito, datafinal]);\n*/\n  //  console.log(\"botonncito\", botoncito);\n\n  const columnas = [\n    {\n      name: \"Id Conexión\",\n      selector: (row) => row.idcliente,\n    },\n    \n  ];\n\n  //   const nuevoseller = () => {\n  //     setoculto({\n  //       ...oculto,\n  //       hiddentable: false,\n  //       hiddenboton: true,\n  //       hiddenperfilform: true,\n  //       hiddenupdate: false,\n  //     });\n  //   };\n\n  //   const editar = () => {\n  //     setoculto({\n  //       ...oculto,\n  //       hiddentable: false,\n  //       hiddenboton: true,\n  //       hiddenperfilform: false,\n  //       hiddenupdate: true,\n  //     });\n  //   };\n\n  const pico = [];\n  \n  return (\n    <>\n      <Grid container spacing={gridSpacing}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          {botoncito ? (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              // onClick={editar}\n            >\n              <strong>Conectar Nueva Cuenta</strong>\n            </Button>\n          ) : null}\n          {botoncito ? null : (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              // onClick={nuevoseller}\n            >\n              Configurar Perfil\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n      <br></br>\n      <DataTable striped columns={columnas} data={data} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}