{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/widget/Data/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { CardActions, CardContent, Checkbox, Divider, Fab, FormControlLabel, Grid } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard'; // assets\n\nimport AddRoundedIcon from '@mui/icons-material/AddRounded'; // ===========================|| DATA WIDGET - TODO LIST ||=========================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n    checkedD: false,\n    checkedE: false,\n    checkedF: false\n  });\n\n  const handleChangeState = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"To Do List\",\n    content: false,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        sx: {\n          '& .Mui-checked + span': {\n            textDecoration: 'line-through'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedA,\n              onChange: handleChangeState,\n              name: \"checkedA\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 38\n            }, this),\n            label: \"Check your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedB,\n              onChange: handleChangeState,\n              name: \"checkedB\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 38\n            }, this),\n            label: \"Make YouTube Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedC,\n              onChange: handleChangeState,\n              name: \"checkedC\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 38\n            }, this),\n            label: \"Create Banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedD,\n              onChange: handleChangeState,\n              name: \"checkedD\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 38\n            }, this),\n            label: \"Upload Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedE,\n              onChange: handleChangeState,\n              name: \"checkedE\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 38\n            }, this),\n            label: \"Update Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: state.checkedF,\n              onChange: handleChangeState,\n              name: \"checkedF\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 38\n            }, this),\n            label: \"Task Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row-reverse\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Fab, {\n            size: \"small\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"pV7kXfXPCyAIYxO/Pfnhn8ZKYYY=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/widget/Data/ToDoList.js"],"names":["useState","CardActions","CardContent","Checkbox","Divider","Fab","FormControlLabel","Grid","MainCard","AddRoundedIcon","ToDoList","state","setState","checkedA","checkedB","checkedC","checkedD","checkedE","checkedF","handleChangeState","event","target","name","checked","textDecoration"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { CardActions, CardContent, Checkbox, Divider, Fab, FormControlLabel, Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\n\r\n// ===========================|| DATA WIDGET - TODO LIST ||=========================== //\r\n\r\nconst ToDoList = () => {\r\n    const [state, setState] = useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n        checkedD: false,\r\n        checkedE: false,\r\n        checkedF: false\r\n    });\r\n    const handleChangeState = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"To Do List\" content={false}>\r\n            <CardContent>\r\n                <Grid container spacing={0} sx={{ '& .Mui-checked + span': { textDecoration: 'line-through' } }}>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedA} onChange={handleChangeState} name=\"checkedA\" color=\"primary\" />}\r\n                            label=\"Check your Email\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedB} onChange={handleChangeState} name=\"checkedB\" color=\"primary\" />}\r\n                            label=\"Make YouTube Video\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedC} onChange={handleChangeState} name=\"checkedC\" color=\"primary\" />}\r\n                            label=\"Create Banner\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedD} onChange={handleChangeState} name=\"checkedD\" color=\"primary\" />}\r\n                            label=\"Upload Project\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedE} onChange={handleChangeState} name=\"checkedE\" color=\"primary\" />}\r\n                            label=\"Update Task\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state.checkedF} onChange={handleChangeState} name=\"checkedF\" color=\"primary\" />}\r\n                            label=\"Task Issue\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <Grid container direction=\"row-reverse\">\r\n                    <Grid item>\r\n                        <Fab size=\"small\" color=\"primary\">\r\n                            <AddRoundedIcon fontSize=\"small\" />\r\n                        </Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardActions>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}