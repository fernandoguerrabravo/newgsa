{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/forms/chart/Apexchart/ApexColumnChart.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles'; // third-party\n\nimport ReactApexChart from 'react-apexcharts'; // chart options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnChartOptions = {\n  chart: {\n    type: 'bar',\n    height: 350\n  },\n  plotOptions: {\n    bar: {\n      horizontal: false,\n      columnWidth: '55%',\n      endingShape: 'rounded'\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    show: true,\n    width: 2,\n    colors: ['transparent']\n  },\n  xaxis: {\n    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n  },\n  yaxis: {\n    title: {\n      text: '$ (thousands)'\n    }\n  },\n  fill: {\n    opacity: 1\n  },\n  tooltip: {\n    y: {\n      formatter(val) {\n        return `$ ${val} thousands`;\n      }\n\n    }\n  },\n  legend: {\n    show: true,\n    fontSize: '0.875rem',\n    fontFamily: `'Roboto', sans-serif`,\n    position: 'bottom',\n    offsetX: 10,\n    offsetY: 10,\n    labels: {\n      useSeriesColors: false\n    },\n    markers: {\n      width: 16,\n      height: 16,\n      radius: 5\n    },\n    itemMargin: {\n      horizontal: 15,\n      vertical: 8\n    }\n  },\n  responsive: [{\n    breakpoint: 600,\n    options: {\n      yaxis: {\n        show: false\n      }\n    }\n  }]\n}; // ==============================|| COLUMN CHART ||============================== //\n\nconst ApexColumnChart = () => {\n  _s();\n\n  const theme = useTheme();\n  const customization = useSelector(state => state.customization);\n  const {\n    navType\n  } = customization;\n  const {\n    primary\n  } = theme.palette.text;\n  const darkLight = theme.palette.dark.light;\n  const grey200 = theme.palette.grey[200];\n  const secondary = theme.palette.secondary.main;\n  const primaryMain = theme.palette.primary.main;\n  const successDark = theme.palette.success.dark;\n  const [series] = useState([{\n    name: 'Net Profit',\n    data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n  }, {\n    name: 'Revenue',\n    data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n  }, {\n    name: 'Free Cash Flow',\n    data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n  }]);\n  const [options, setOptions] = useState(columnChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({ ...prevState,\n      colors: [secondary, primaryMain, successDark],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: navType === 'dark' ? darkLight + 20 : grey200\n      },\n      tooltip: {\n        theme: navType === 'dark' ? 'dark' : 'light'\n      },\n      legend: {\n        labels: {\n          colors: 'grey.500'\n        }\n      }\n    })); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navType, primary, darkLight, grey200, secondary, primaryMain, successDark]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApexColumnChart, \"B39lg6ZLZFAB4WJJy9JYMqW/bAA=\", false, function () {\n  return [useTheme, useSelector];\n});\n\n_c = ApexColumnChart;\nexport default ApexColumnChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApexColumnChart\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/forms/chart/Apexchart/ApexColumnChart.js"],"names":["useEffect","useState","useSelector","useTheme","ReactApexChart","columnChartOptions","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","legend","fontSize","fontFamily","position","offsetX","offsetY","labels","useSeriesColors","markers","radius","itemMargin","vertical","responsive","breakpoint","options","ApexColumnChart","theme","customization","state","navType","primary","palette","darkLight","dark","light","grey200","grey","secondary","main","primaryMain","successDark","success","series","name","data","setOptions","prevState","style","grid","borderColor"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst columnChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 350\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: '$ (thousands)'\r\n        }\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    tooltip: {\r\n        y: {\r\n            formatter(val) {\r\n                return `$ ${val} thousands`;\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: 'bottom',\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 8\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 600,\r\n            options: {\r\n                yaxis: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| COLUMN CHART ||============================== //\r\n\r\nconst ApexColumnChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Net Profit',\r\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\r\n        },\r\n        {\r\n            name: 'Free Cash Flow',\r\n            data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(columnChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [navType, primary, darkLight, grey200, secondary, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexColumnChart;\r\n"]},"metadata":{},"sourceType":"module"}