{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/pages/authentication/auth-forms/AuthForgotPassword.js\",\n    _s = $RefreshSig$();\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport { SNACKBAR_OPEN } from 'store/actions'; // ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForgotPassword = ({ ...others\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    resetPassword\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await resetPassword(values.email);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n          dispatch({\n            type: SNACKBAR_OPEN,\n            open: true,\n            message: 'Check mail for reset password link',\n            variant: 'alert',\n            alertSeverity: 'success'\n          });\n          setTimeout(() => {\n            navigate('/login', {\n              replace: true\n            });\n          }, 1500);\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...others,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.email && errors.email),\n        sx: { ...theme.typography.customInput\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-email-forgot\",\n          children: \"Email Address / Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-email-forgot\",\n          type: \"email\",\n          value: values.email,\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: \"Email Address / Username\",\n          inputProps: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-email-forgot\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Send Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForgotPassword, \"BN6acyZjZ8Q51HSGc14tulC+z/c=\", false, function () {\n  return [useTheme, useScriptRef, useDispatch, useNavigate, useAuth];\n});\n\n_c = AuthForgotPassword;\nexport default AuthForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForgotPassword\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/pages/authentication/auth-forms/AuthForgotPassword.js"],"names":["useTheme","Box","Button","FormControl","FormHelperText","InputLabel","OutlinedInput","useDispatch","useNavigate","Yup","Formik","AnimateButton","useAuth","useScriptRef","SNACKBAR_OPEN","AuthForgotPassword","others","theme","scriptedRef","dispatch","navigate","resetPassword","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","type","open","message","variant","alertSeverity","setTimeout","replace","err","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","typography","customInput","mt"],"mappings":"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","sourcesContent":["// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\r\n\r\nconst AuthForgotPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { resetPassword } = useAuth();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await resetPassword(values.email);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                        dispatch({\r\n                            type: SNACKBAR_OPEN,\r\n                            open: true,\r\n                            message: 'Check mail for reset password link',\r\n                            variant: 'alert',\r\n                            alertSeverity: 'success'\r\n                        });\r\n                        setTimeout(() => {\r\n                            navigate('/login', { replace: true });\r\n                        }, 1500);\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-forgot\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            label=\"Email Address / Username\"\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {errors.submit && (\r\n                        <Box sx={{ mt: 3 }}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Send Mail\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AuthForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}