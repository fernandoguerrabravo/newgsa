{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SkuListFiles.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport FileProvider from '../providers/file.provider';\nimport { getFormattedSize } from '../helpers/files.helper';\nimport SkuStoreFiles from './SkuStoreFiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  type: {\n    padding: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  paper: {\n    padding: theme.spacing(3),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Lister = ({\n  idcliente,\n  codigo\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const [refId, setRefId] = useState(idcliente);\n  const [sku, setSku] = useState(codigo);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleRefIdChange = event => {\n    if (event.isTrusted) {\n      setRefId(event.target.value);\n    }\n  };\n\n  const handleSkuChange = event => {\n    if (event.isTrusted) {\n      setSku(event.target.value);\n    }\n  };\n\n  const getFiles = async event => {\n    event.preventDefault();\n    setSubmitting(true);\n\n    try {\n      const files = (await new FileProvider().getFiles(refId, sku)).data.value;\n      setFiles(files);\n    } catch (reason) {\n      console.warn(reason);\n    }\n\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    document.title = 'File Lister Example - S3 REST API';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: getFiles,\n        children: submitting ? 'Searching...' : 'Update and Show Files'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: files.length > 0 ? 'Retrieved files' : 'No files to show'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 800\n        },\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: files.map((file, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.name + file.extension\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getFormattedSize(file.size, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  href: file.file,\n                  download: true,\n                  variant: \"outlined\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lister, \"d00l4K68ebvSIep81uh+vfafLWA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Lister;\nexport default Lister;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lister\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SkuListFiles.jsx"],"names":["useEffect","useState","Table","TableHead","TableRow","TableCell","TableBody","Grid","Paper","makeStyles","Button","Typography","FileProvider","getFormattedSize","SkuStoreFiles","useStyles","theme","type","padding","spacing","color","palette","text","secondary","paper","Lister","idcliente","codigo","classes","files","setFiles","refId","setRefId","sku","setSku","submitting","setSubmitting","handleRefIdChange","event","isTrusted","target","value","handleSkuChange","getFiles","preventDefault","data","reason","console","warn","document","title","length","minWidth","map","file","index","name","extension","size"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport FileProvider from '../providers/file.provider';\nimport { getFormattedSize } from '../helpers/files.helper';\nimport SkuStoreFiles from './SkuStoreFiles';\n\nconst useStyles = makeStyles(theme => ({\n\ttype: {\n\t\tpadding: theme.spacing(1),\n\t\tcolor: theme.palette.text.secondary\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(3),\n\t\tcolor: theme.palette.text.secondary\n\t}\n}));\n\nconst Lister = ({ idcliente, codigo }) => {\n\tconst classes = useStyles();\n\tconst [files, setFiles] = useState([]);\n\tconst [refId, setRefId] = useState(idcliente);\n\tconst [sku, setSku] = useState(codigo);\n\tconst [submitting, setSubmitting] = useState(false);\n\n\tconst handleRefIdChange = event => {\n\t\tif (event.isTrusted) {\n\t\t\tsetRefId(event.target.value);\n\t\t}\n\t};\n\n\tconst handleSkuChange = event => {\n\t\tif (event.isTrusted) {\n\t\t\tsetSku(event.target.value);\n\t\t}\n\t};\n\n\tconst getFiles = async event => {\n\t\tevent.preventDefault();\n\t\tsetSubmitting(true);\n\t\ttry {\n\t\t\tconst files = (await new FileProvider().getFiles(refId, sku)).data.value;\n\t\t\tsetFiles(files);\n\t\t} catch (reason) {\n\t\t\tconsole.warn(reason);\n\t\t}\n\t\tsetSubmitting(false);\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.title = 'File Lister Example - S3 REST API';\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={getFiles}>\n\t\t\t\t\t{submitting ? 'Searching...' : 'Update and Show Files'}\n\t\t\t\t</Button>\n\t\t\t\t<p />\n\t\t\t\t<Typography>{files.length > 0 ? 'Retrieved files' : 'No files to show'}</Typography>\n\t\t\t\t{files.length > 0 ? (\n\t\t\t\t\t<Table sx={{ minWidth: 800 }} size=\"small\" aria-label=\"a dense table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>File Name</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>File Size</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>Actions</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{files.map((file, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{file.name + file.extension}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{getFormattedSize(file.size, 2)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Button href={file.file} download variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t) : null}\n\t\t\t</Paper>\n\t\t\t<br />\n\t\t</>\n\t);\n};\n\nexport default Lister;\n"]},"metadata":{},"sourceType":"module"}