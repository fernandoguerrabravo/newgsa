{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/ui-component/cards/AnalyticsChartCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { Box, Button, Grid, Menu, MenuItem, Typography } from '@mui/material'; // third party\n\nimport Chart from 'react-apexcharts'; // project imports\n\nimport MainCard from './MainCard'; // assets\n\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward'; // ==========================|| ANALYTICS CHART CARD ||========================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnalyticsChartCard = ({\n  title,\n  chartData,\n  dropData,\n  listData\n}) => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  let dropHtml;\n\n  if (dropData) {\n    const handleClick = event => {\n      setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    dropHtml = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        disableElevation: true,\n        size: \"small\",\n        \"aria-controls\": \"simple-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: handleClick,\n        children: dropData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        id: \"simple-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: dropData === null || dropData === void 0 ? void 0 : dropData.options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleClose,\n          children: option.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  let listItem;\n\n  if (listData) {\n    listItem = listData.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          color: item.color\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [item.value, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [item.state === 1 && /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n              fontSize: \"inherit\",\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 50\n            }, this), item.state === 0 && /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n              fontSize: \"inherit\",\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"inherit\",\n              children: [item.percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [title && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: dropHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'block'\n          },\n          children: listItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Chart, { ...chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyticsChartCard, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = AnalyticsChartCard;\nAnalyticsChartCard.propTypes = {\n  title: PropTypes.string,\n  chartData: PropTypes.object,\n  dropData: PropTypes.object,\n  listData: PropTypes.array\n};\nexport default AnalyticsChartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsChartCard\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/ui-component/cards/AnalyticsChartCard.js"],"names":["PropTypes","useState","Box","Button","Grid","Menu","MenuItem","Typography","Chart","MainCard","ArrowDownwardIcon","ArrowUpwardIcon","AnalyticsChartCard","title","chartData","dropData","listData","anchorEl","setAnchorEl","dropHtml","handleClick","event","currentTarget","handleClose","vertical","horizontal","Boolean","options","map","option","index","label","listItem","item","color","icon","value","state","percentage","mt","display","propTypes","string","object","array"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Box, Button, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// third party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from './MainCard';\r\n\r\n// assets\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n\r\n// ==========================|| ANALYTICS CHART CARD ||========================== //\r\n\r\nconst AnalyticsChartCard = ({ title, chartData, dropData, listData }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    let dropHtml;\r\n    if (dropData) {\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event?.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        dropHtml = (\r\n            <>\r\n                <Button variant=\"text\" disableElevation size=\"small\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    {dropData.title}\r\n                </Button>\r\n                <Menu\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {dropData?.options.map((option, index) => (\r\n                        <MenuItem key={index} onClick={handleClose}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n\r\n    let listItem;\r\n    if (listData) {\r\n        listItem = listData.map((item, index) => (\r\n            <Grid item key={index} sm={12}>\r\n                <Box\r\n                    sx={{\r\n                        color: item.color\r\n                    }}\r\n                >\r\n                    <Grid container spacing={2} justifyContent=\"center\">\r\n                        <Grid item>{item.icon}</Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\">{item.value}%</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {item.state === 1 && <ArrowUpwardIcon fontSize=\"inherit\" color=\"inherit\" />}\r\n                            {item.state === 0 && <ArrowDownwardIcon fontSize=\"inherit\" color=\"inherit\" />}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                {item.percentage}%\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                {title && (\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle1\">{title}</Typography>\r\n                    </Grid>\r\n                )}\r\n                <Grid item>{dropHtml}</Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item container direction=\"column\" spacing={1} xs={12} sm={6}>\r\n                    <Box\r\n                        sx={{\r\n                            mt: 3,\r\n                            display: 'block'\r\n                        }}\r\n                    >\r\n                        {listItem}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Chart {...chartData} />\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAnalyticsChartCard.propTypes = {\r\n    title: PropTypes.string,\r\n    chartData: PropTypes.object,\r\n    dropData: PropTypes.object,\r\n    listData: PropTypes.array\r\n};\r\n\r\nexport default AnalyticsChartCard;\r\n"]},"metadata":{},"sourceType":"module"}