{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/dashboard/Default/TotalOrderLineChartCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material'; // third-party\n\nimport Chart from 'react-apexcharts'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart'; // assets\n\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.primary.dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.mode === 'dark' ? `linear-gradient(210.04deg, ${theme.palette.primary.dark} -50.94%, rgba(144, 202, 249, 0) 95.49%)` : theme.palette.primary[800],\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: theme.palette.mode === 'dark' ? `linear-gradient(140.9deg, ${theme.palette.primary.dark} -14.02%, rgba(144, 202, 249, 0) 82.50%)` : theme.palette.primary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n})); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({\n  isLoading\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const [timeValue, setTimeValue] = useState(false);\n\n  const handleChangeTime = (event, newValue) => {\n    setTimeValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalOrderCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  variant: \"rounded\",\n                  sx: { ...theme.typography.commonAvatar,\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary[800],\n                    color: '#fff',\n                    mt: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LocalMallOutlinedIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, true),\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: !timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, false),\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              mb: 0.75\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: timeValue ? /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: \"$108\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: \"$961\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: { ...theme.typography.smallAvatar,\n                        cursor: 'pointer',\n                        backgroundColor: theme.palette.primary[200],\n                        color: theme.palette.primary.dark\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                        fontSize: \"inherit\",\n                        sx: {\n                          transform: 'rotate3d(1, 1, 1, 45deg)'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '1rem',\n                        fontWeight: 500,\n                        color: theme.palette.mode === 'dark' ? theme.palette.text.secondary : theme.palette.primary[200]\n                      },\n                      children: \"Total Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: timeValue ? /*#__PURE__*/_jsxDEV(Chart, { ...ChartDataMonth\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 54\n                }, this) : /*#__PURE__*/_jsxDEV(Chart, { ...ChartDataYear\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 86\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TotalOrderLineChartCard, \"f37AJ0amxSneRDYyPE3LDMkkg/g=\", false, function () {\n  return [useTheme];\n});\n\n_c = TotalOrderLineChartCard;\nTotalOrderLineChartCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalOrderLineChartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalOrderLineChartCard\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/dashboard/Default/TotalOrderLineChartCard.js"],"names":["PropTypes","useState","useTheme","styled","Avatar","Box","Button","Grid","Typography","Chart","MainCard","SkeletonTotalOrderCard","ChartDataMonth","ChartDataYear","LocalMallOutlinedIcon","ArrowDownwardIcon","CardWrapper","theme","backgroundColor","palette","mode","dark","primary","color","overflow","position","zIndex","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","TotalOrderLineChartCard","isLoading","timeValue","setTimeValue","handleChangeTime","event","newValue","p","typography","commonAvatar","largeAvatar","main","mt","e","mb","fontSize","fontWeight","mr","smallAvatar","cursor","transform","text","secondary","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background:\r\n            theme.palette.mode === 'dark'\r\n                ? `linear-gradient(210.04deg, ${theme.palette.primary.dark} -50.94%, rgba(144, 202, 249, 0) 95.49%)`\r\n                : theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background:\r\n            theme.palette.mode === 'dark'\r\n                ? `linear-gradient(140.9deg, ${theme.palette.primary.dark} -14.02%, rgba(144, 202, 249, 0) 82.50%)`\r\n                : theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor:\r\n                                                    theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <LocalMallOutlinedIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, true)}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={!timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, false)}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {timeValue ? (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        $108\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        $961\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                                </Avatar>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color:\r\n                                                            theme.palette.mode === 'dark'\r\n                                                                ? theme.palette.text.secondary\r\n                                                                : theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Total Order\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n"]},"metadata":{},"sourceType":"module"}