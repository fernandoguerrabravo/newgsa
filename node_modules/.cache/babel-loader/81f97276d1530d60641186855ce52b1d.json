{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/priornotice/components/StepOne.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, Typography, TextField } from '@mui/material'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  firstName: yup.string().required('First Name is required'),\n  lastName: yup.string().required('Last Name is required')\n}); // ==============================|| FORM WIZARD - VALIDATION  ||============================== //\n\nconst StepOne = ({\n  shippingData,\n  setShippingData,\n  handleNext,\n  setErrorIndex\n}) => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: shippingData.firstName,\n      lastName: shippingData.lastName\n    },\n    validationSchema,\n    onSubmit: values => {\n      setShippingData({\n        firstName: values.firstName,\n        lastName: values.lastName\n      });\n      handleNext();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Host\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      id: \"validation-forms\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"firstName\",\n            name: \"firstName\",\n            label: \"First Name *\",\n            defaultValue: formik.values.firstName,\n            onChange: formik.handleChange,\n            error: formik.touched.firstName && Boolean(formik.errors.firstName),\n            helperText: formik.touched.firstName && formik.errors.firstName,\n            fullWidth: true,\n            autoComplete: \"given-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"lastName\",\n            name: \"lastName\",\n            label: \"Last Name *\",\n            defaultValue: formik.values.lastName,\n            onChange: formik.handleChange,\n            error: formik.touched.lastName && Boolean(formik.errors.lastName),\n            helperText: formik.touched.lastName && formik.errors.lastName,\n            fullWidth: true,\n            autoComplete: \"family-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address1\",\n            name: \"address1\",\n            label: \"Address line 1\",\n            fullWidth: true,\n            autoComplete: \"shipping address-line1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address2\",\n            name: \"address2\",\n            label: \"Address line 2\",\n            fullWidth: true,\n            autoComplete: \"shipping address-line2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city\",\n            name: \"city\",\n            label: \"City\",\n            fullWidth: true,\n            autoComplete: \"shipping address-level2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"state\",\n            name: \"state\",\n            label: \"State/Province/Region\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"zip\",\n            name: \"zip\",\n            label: \"Zip / Postal code\",\n            fullWidth: true,\n            autoComplete: \"shipping postal-code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"country\",\n            name: \"country\",\n            label: \"Country\",\n            fullWidth: true,\n            autoComplete: \"shipping country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"secondary\",\n              name: \"saveAddress\",\n              value: \"yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 38\n            }, this),\n            label: \"Use this address for payment details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  my: 3,\n                  ml: 1\n                },\n                type: \"submit\",\n                onClick: () => setErrorIndex(0),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n/* StepOne.propTypes = {\n    shippingData: PropTypes.object,\n    setShippingData: PropTypes.func,\n    handleNext: PropTypes.func,\n    setErrorIndex: PropTypes.func\n}; */\n\n\n_s(StepOne, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/priornotice/components/StepOne.jsx"],"names":["PropTypes","Button","Checkbox","FormControlLabel","Grid","Stack","Typography","TextField","AnimateButton","useFormik","yup","validationSchema","object","firstName","string","required","lastName","StepOne","shippingData","setShippingData","handleNext","setErrorIndex","formik","initialValues","onSubmit","values","mb","handleSubmit","handleChange","touched","Boolean","errors","my","ml"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, Typography, TextField } from '@mui/material';\n\n// project imports\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// third-party\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n    firstName: yup.string().required('First Name is required'),\n    lastName: yup.string().required('Last Name is required')\n});\n\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\n\nconst StepOne = ({ shippingData, setShippingData, handleNext, setErrorIndex }) => {\n    const formik = useFormik({\n        initialValues: {\n            firstName: shippingData.firstName,\n            lastName: shippingData.lastName\n        },\n        validationSchema,\n        onSubmit: (values) => {\n            setShippingData({\n                firstName: values.firstName,\n                lastName: values.lastName\n            });\n            handleNext();\n        }\n    });\n\n    return (\n        <>\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\n                Host \n            </Typography>\n            <form onSubmit={formik.handleSubmit} id=\"validation-forms\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            label=\"First Name *\"\n                            defaultValue={formik.values.firstName}\n                            onChange={formik.handleChange}\n                            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n                            helperText={formik.touched.firstName && formik.errors.firstName}\n                            fullWidth\n                            autoComplete=\"given-name\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            label=\"Last Name *\"\n                            defaultValue={formik.values.lastName}\n                            onChange={formik.handleChange}\n                            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n                            helperText={formik.touched.lastName && formik.errors.lastName}\n                            fullWidth\n                            autoComplete=\"family-name\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField id=\"address1\" name=\"address1\" label=\"Address line 1\" fullWidth autoComplete=\"shipping address-line1\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField id=\"address2\" name=\"address2\" label=\"Address line 2\" fullWidth autoComplete=\"shipping address-line2\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField id=\"city\" name=\"city\" label=\"City\" fullWidth autoComplete=\"shipping address-level2\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField id=\"zip\" name=\"zip\" label=\"Zip / Postal code\" fullWidth autoComplete=\"shipping postal-code\" />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField id=\"country\" name=\"country\" label=\"Country\" fullWidth autoComplete=\"shipping country\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n                            label=\"Use this address for payment details\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\n                            <AnimateButton>\n                                <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} type=\"submit\" onClick={() => setErrorIndex(0)}>\n                                    Next\n                                </Button>\n                            </AnimateButton>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n        </>\n    );\n};\n\n/* StepOne.propTypes = {\n    shippingData: PropTypes.object,\n    setShippingData: PropTypes.func,\n    handleNext: PropTypes.func,\n    setErrorIndex: PropTypes.func\n}; */\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}