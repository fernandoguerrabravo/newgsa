{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/application/contact/UserEdit.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { cloneElement, useEffect, useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Autocomplete, Avatar, Button, Divider, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField, Typography, useScrollTrigger } from '@mui/material'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport { gridSpacing } from 'store/constant';\nimport User1 from 'assets/images/users/avatar-1.png'; // assets\n\nimport HighlightOffTwoToneIcon from '@mui/icons-material/HighlightOffTwoTone';\nimport BusinessTwoToneIcon from '@mui/icons-material/BusinessTwoTone';\nimport WorkTwoToneIcon from '@mui/icons-material/WorkTwoTone';\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\nimport CallTwoToneIcon from '@mui/icons-material/CallTwoTone';\nimport UploadTwoToneIcon from '@mui/icons-material/UploadTwoTone';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport TodayTwoToneIcon from '@mui/icons-material/TodayTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/users', true);\n\nconst jobTypes = [{\n  label: 'Work',\n  id: 1\n}, {\n  label: 'Personal',\n  id: 2\n}]; // sticky edit card\n\nfunction ElevationScroll({\n  children,\n  window\n}) {\n  _s();\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 130,\n    target: window || undefined\n  });\n  return /*#__PURE__*/cloneElement(children, {\n    style: {\n      position: trigger ? 'fixed' : 'relative',\n      top: trigger ? 83 : 0,\n      width: trigger ? 318 : '100%'\n    }\n  });\n} // ==============================|| CONTACT CARD/LIST USER EDIT ||============================== //\n\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\n\nconst UserEdit = ({\n  user,\n  onCancel,\n  onSave,\n  ...others\n}) => {\n  _s2();\n\n  const theme = useTheme(); // save user to local state to update details and submit letter\n\n  const [profile, setProfile] = useState(user);\n  useEffect(() => {\n    setProfile(user);\n  }, [user]);\n  let avatarProfile = User1;\n\n  if (profile) {\n    avatarProfile = profile.avatar && avatarImage(`./${profile.avatar}`).default;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ElevationScroll, { ...others,\n    children: /*#__PURE__*/_jsxDEV(SubCard, {\n      sx: {\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n        width: '100%',\n        maxWidth: 342\n      },\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        style: {\n          height: 'calc(100vh - 83px)',\n          overflowX: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"User 3\",\n                  src: avatarProfile,\n                  sx: {\n                    width: 64,\n                    height: 64\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"containedButtonFile\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        accept: \"image/*\",\n                        style: {\n                          opacity: 0,\n                          position: 'fixed',\n                          zIndex: 1,\n                          padding: 0.5,\n                          cursor: 'pointer'\n                        },\n                        id: \"containedButtonFile\",\n                        multiple: true,\n                        type: \"file\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        size: \"small\",\n                        startIcon: /*#__PURE__*/_jsxDEV(UploadTwoToneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 100\n                        }, this),\n                        children: \"Upload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      children: \"Image size should be 125kb Max.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => onCancel(profile),\n                  size: \"large\",\n                  children: /*#__PURE__*/_jsxDEV(HighlightOffTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.name,\n                onChange: e => setProfile({ ...profile,\n                  name: e.target.value\n                }),\n                type: \"text\",\n                label: \"Name\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(BusinessTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.company,\n                onChange: e => setProfile({ ...profile,\n                  company: e.target.value\n                }),\n                type: \"text\",\n                label: \"Company\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(BusinessTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.role,\n                onChange: e => setProfile({ ...profile,\n                  role: e.target.value\n                }),\n                type: \"text\",\n                label: \"Job Title\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(WorkTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              multiple: true,\n              options: jobTypes,\n              getOptionLabel: option => option.label,\n              defaultValue: [jobTypes[0]],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.work_email,\n                onChange: e => setProfile({ ...profile,\n                  work_email: e.target.value\n                }),\n                type: \"text\",\n                label: \"Email\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(MailTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              multiple: true,\n              options: jobTypes,\n              getOptionLabel: option => option.label,\n              defaultValue: [jobTypes[1]],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.personal_email,\n                onChange: e => setProfile({ ...profile,\n                  personal_email: e.target.value\n                }),\n                type: \"text\",\n                label: \"Email\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(MailTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              startIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 63\n              }, this),\n              children: \"Add New Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              multiple: true,\n              options: jobTypes,\n              getOptionLabel: option => option.label,\n              defaultValue: [jobTypes[0]],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.work_phone,\n                onChange: e => {\n                  setProfile({ ...profile,\n                    work_phone: e.target.value\n                  });\n                },\n                type: \"text\",\n                label: \"Phone Number\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(CallTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              multiple: true,\n              options: jobTypes,\n              getOptionLabel: option => option.label,\n              defaultValue: [jobTypes[1]],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                value: profile.personal_phone,\n                onChange: e => {\n                  setProfile({ ...profile,\n                    personal_phone: e.target.value\n                  });\n                },\n                type: \"text\",\n                label: \"Phone Number\",\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(CallTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              startIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 63\n              }, this),\n              children: \"Add New Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                defaultValue: \"November 30, 1997\",\n                type: \"text\",\n                label: \"Birthday\",\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(TodayTwoToneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                defaultValue: profile.birthdayText,\n                onChange: e => setProfile({ ...profile,\n                  birthdayText: e.target.value\n                }),\n                type: \"text\",\n                label: \"Bio\",\n                multiline: true,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => onSave(profile),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  onClick: () => onCancel(profile),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserEdit, \"zxEL7pOT+5RdCc6iMa/vQIIziEE=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = UserEdit;\nUserEdit.propTypes = {\n  user: PropTypes.object,\n  onCancel: PropTypes.func,\n  onSave: PropTypes.func\n};\nexport default UserEdit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"UserEdit\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/application/contact/UserEdit.js"],"names":["PropTypes","cloneElement","useEffect","useState","useTheme","Autocomplete","Avatar","Button","Divider","FormControl","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","Typography","useScrollTrigger","PerfectScrollbar","SubCard","gridSpacing","User1","HighlightOffTwoToneIcon","BusinessTwoToneIcon","WorkTwoToneIcon","MailTwoToneIcon","CallTwoToneIcon","UploadTwoToneIcon","ControlPointIcon","TodayTwoToneIcon","avatarImage","require","context","jobTypes","label","id","ElevationScroll","children","window","trigger","disableHysteresis","threshold","target","undefined","style","position","top","width","UserEdit","user","onCancel","onSave","others","theme","profile","setProfile","avatarProfile","avatar","default","background","palette","mode","dark","main","grey","maxWidth","height","overflowX","p","opacity","zIndex","padding","cursor","name","e","value","company","role","option","params","work_email","personal_email","work_phone","personal_phone","birthdayText","propTypes","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { cloneElement, useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Autocomplete,\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useScrollTrigger\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// assets\r\nimport HighlightOffTwoToneIcon from '@mui/icons-material/HighlightOffTwoTone';\r\nimport BusinessTwoToneIcon from '@mui/icons-material/BusinessTwoTone';\r\nimport WorkTwoToneIcon from '@mui/icons-material/WorkTwoTone';\r\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\r\nimport CallTwoToneIcon from '@mui/icons-material/CallTwoTone';\r\nimport UploadTwoToneIcon from '@mui/icons-material/UploadTwoTone';\r\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\r\nimport TodayTwoToneIcon from '@mui/icons-material/TodayTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\n\r\nconst jobTypes = [\r\n    { label: 'Work', id: 1 },\r\n    { label: 'Personal', id: 2 }\r\n];\r\n\r\n// sticky edit card\r\n\r\nfunction ElevationScroll({ children, window }) {\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 130,\r\n        target: window || undefined\r\n    });\r\n\r\n    return cloneElement(children, {\r\n        style: {\r\n            position: trigger ? 'fixed' : 'relative',\r\n            top: trigger ? 83 : 0,\r\n            width: trigger ? 318 : '100%'\r\n        }\r\n    });\r\n}\r\n\r\n// ==============================|| CONTACT CARD/LIST USER EDIT ||============================== //\r\n\r\nconst UserEdit = ({ user, onCancel, onSave, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    // save user to local state to update details and submit letter\r\n    const [profile, setProfile] = useState(user);\r\n    useEffect(() => {\r\n        setProfile(user);\r\n    }, [user]);\r\n\r\n    let avatarProfile = User1;\r\n    if (profile) {\r\n        avatarProfile = profile.avatar && avatarImage(`./${profile.avatar}`).default;\r\n    }\r\n\r\n    return (\r\n        <ElevationScroll {...others}>\r\n            <SubCard\r\n                sx={{\r\n                    background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                    width: '100%',\r\n                    maxWidth: 342\r\n                }}\r\n                content={false}\r\n            >\r\n                <PerfectScrollbar style={{ height: 'calc(100vh - 83px)', overflowX: 'hidden' }}>\r\n                    <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Avatar alt=\"User 3\" src={avatarProfile} sx={{ width: 64, height: 64 }} />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item xs={12}>\r\n                                            <label htmlFor=\"containedButtonFile\">\r\n                                                <input\r\n                                                    accept=\"image/*\"\r\n                                                    style={{\r\n                                                        opacity: 0,\r\n                                                        position: 'fixed',\r\n                                                        zIndex: 1,\r\n                                                        padding: 0.5,\r\n                                                        cursor: 'pointer'\r\n                                                    }}\r\n                                                    id=\"containedButtonFile\"\r\n                                                    multiple\r\n                                                    type=\"file\"\r\n                                                />\r\n                                                <Button variant=\"outlined\" size=\"small\" startIcon={<UploadTwoToneIcon />}>\r\n                                                    Upload\r\n                                                </Button>\r\n                                            </label>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"caption\">Image size should be 125kb Max.</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => onCancel(profile)} size=\"large\">\r\n                                        <HighlightOffTwoToneIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Name</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.name}\r\n                                    onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Name\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <BusinessTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Company</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.company}\r\n                                    onChange={(e) => setProfile({ ...profile, company: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Company\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <BusinessTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Job Title</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.role}\r\n                                    onChange={(e) => setProfile({ ...profile, role: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Job Title\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <WorkTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[0]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Email</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.work_email}\r\n                                    onChange={(e) => setProfile({ ...profile, work_email: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Email\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <MailTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[1]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Email</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.personal_email}\r\n                                    onChange={(e) => setProfile({ ...profile, personal_email: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Email\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <MailTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                Add New Email\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[0]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Phone Number</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.work_phone}\r\n                                    onChange={(e) => {\r\n                                        setProfile({ ...profile, work_phone: e.target.value });\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    label=\"Phone Number\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CallTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[1]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Phone Number</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.personal_phone}\r\n                                    onChange={(e) => {\r\n                                        setProfile({ ...profile, personal_phone: e.target.value });\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    label=\"Phone Number\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CallTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                Add New Phone\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Birthday</InputLabel>\r\n                                <OutlinedInput\r\n                                    defaultValue=\"November 30, 1997\"\r\n                                    type=\"text\"\r\n                                    label=\"Birthday\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <TodayTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Bio</InputLabel>\r\n                                <OutlinedInput\r\n                                    defaultValue={profile.birthdayText}\r\n                                    onChange={(e) => setProfile({ ...profile, birthdayText: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    rows={3}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6}>\r\n                                    <Button variant=\"contained\" fullWidth onClick={() => onSave(profile)}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Button variant=\"outlined\" fullWidth onClick={() => onCancel(profile)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </PerfectScrollbar>\r\n            </SubCard>\r\n        </ElevationScroll>\r\n    );\r\n};\r\n\r\nUserEdit.propTypes = {\r\n    user: PropTypes.object,\r\n    onCancel: PropTypes.func,\r\n    onSave: PropTypes.func\r\n};\r\n\r\nexport default UserEdit;\r\n"]},"metadata":{},"sourceType":"module"}