{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/GiftGrid2.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { star } from \"../hooks/star\"; //import CustomizedDialogs from '../hooks/dialogo';\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport Center from \"react-center\";\nimport SimpleDialogDemo from \"./SimpleDialog\";\n/* const useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\n\ttable: {\n\t\tminWidth: 750,\n\t\tpadding: '2px 4px'\n\t},\n\n\tcentrar: {]]\n\t\ttextAlign: 'center',\n\t\tdirection: 'row',\n\t\tjustify: 'center',\n\t\talignItems: 'center',\n\t\tpadding: theme.spacing(6)\n\t}\n}));\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst reviews = (info, info2) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [\"Total Reviews: \", info2, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: star(info)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst link = asin => {\n  const link = `https://www.amazon.com/dp/${asin}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const GiftGrid2 = ({\n  setseleccionado,\n  setCategories,\n  category\n}) => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useFetchGifs(category); // {loading && <p>Loading Results...</p>}\n  // console.log(category)\n\n  const columnas = [{\n    name: \"Imagen\",\n    selector: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: rowData.url,\n      style: {\n        width: 60\n      },\n      alt: \"imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, {\n    name: \"ASIN\",\n    selector: rowData => link(rowData.id)\n  }, {\n    name: \"Description\",\n    selector: rowData => rowData.title\n  }, {\n    name: \"Price\",\n    selector: rowData => rowData.price\n  }, {\n    name: \"Details\",\n    selector: rowData => /*#__PURE__*/_jsxDEV(SimpleDialogDemo, {\n      codigo: rowData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }, this)\n  }, {\n    name: \"Rank\",\n    selector: rowData => reviews(rowData.reviews, rowData.total_reviews)\n  }];\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const [toggleCleared, setToggleCleared] = React.useState(false);\n  const [datos, setDatos] = React.useState(data);\n  const handleRowSelected = React.useCallback(state => {\n    setSelectedRows(state.selectedRows);\n    setseleccionado(state.selectedRows);\n  }, []);\n  console.log(\"Seleccionadas\", selectedRows);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\",\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          striped: true,\n          pagination: true,\n          columns: columnas,\n          data: data,\n          selectableRows: true,\n          onSelectedRowsChange: handleRowSelected,\n          clearSelectedRows: toggleCleared\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(GiftGrid2, \"DGt9Q6/6l7nQ1IDdCG3NClUgV54=\", false, function () {\n  return [useFetchGifs];\n});\n\n_c = GiftGrid2;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiftGrid2\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/GiftGrid2.jsx"],"names":["React","CircularProgress","Grid","DataTable","star","useFetchGifs","Center","SimpleDialogDemo","reviews","info","info2","display","justifyContent","alignItems","link","asin","GiftGrid2","setseleccionado","setCategories","category","data","loading","columnas","name","selector","rowData","url","width","id","title","price","total_reviews","selectedRows","setSelectedRows","useState","toggleCleared","setToggleCleared","datos","setDatos","handleRowSelected","useCallback","state","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { star } from \"../hooks/star\";\n//import CustomizedDialogs from '../hooks/dialogo';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport Center from \"react-center\";\nimport SimpleDialogDemo from \"./SimpleDialog\";\n/* const useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\n\ttable: {\n\t\tminWidth: 750,\n\t\tpadding: '2px 4px'\n\t},\n\n\tcentrar: {]]\n\t\ttextAlign: 'center',\n\t\tdirection: 'row',\n\t\tjustify: 'center',\n\t\talignItems: 'center',\n\t\tpadding: theme.spacing(6)\n\t}\n}));\n*/\nconst reviews = (info, info2) => {\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        Total Reviews: {info2} <br />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {info}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {star(info)}\n      </div>\n    </>\n  );\n};\n\nconst link = (asin) => {\n  const link = `https://www.amazon.com/dp/${asin}`;\n  return (\n    <>\n      <a href={link} target=\"_blank\" rel=\"noreferrer\">\n        {asin}\n      </a>\n    </>\n  );\n};\n\nexport const GiftGrid2 = ({  setseleccionado, setCategories, category }) => {\n  \n\t\n\tconst { data, loading } = useFetchGifs(category);\n  // {loading && <p>Loading Results...</p>}\n\n  // console.log(category)\n\n  const columnas = [\n    {\n      name: \"Imagen\",\n      selector: (rowData) => (\n        <img src={rowData.url} style={{ width: 60 }} alt=\"imagen\" />\n      ),\n    },\n\n    {\n      name: \"ASIN\",\n      selector: (rowData) => link(rowData.id),\n    },\n\n    {\n      name: \"Description\",\n      selector: (rowData) => rowData.title,\n    },\n    {\n      name: \"Price\",\n      selector: (rowData) => rowData.price,\n    },\n\n    {\n      name: \"Details\",\n\n      selector: (rowData) => <SimpleDialogDemo codigo={rowData.id} />,\n    },\n    {\n      name: \"Rank\",\n\n      selector: (rowData) => reviews(rowData.reviews, rowData.total_reviews),\n    },\n  ];\n\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const [toggleCleared, setToggleCleared] = React.useState(false);\n  const [datos, setDatos] = React.useState(data);\n\n \n  const handleRowSelected = React.useCallback((state) => {\n    setSelectedRows(state.selectedRows);\n\tsetseleccionado(state.selectedRows);\n  }, []);\n\n  console.log(\"Seleccionadas\", selectedRows)\n  \n\n  return (\n    <>\n      <br />\n      <br />\n      <br />\n      {loading ? (\n        <Grid item xs={12}>\n          <Center>\n            <CircularProgress color=\"primary\" size={60} />\n          </Center>\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={12}>\n            <DataTable\n              striped\n              pagination\n              columns={columnas}\n              data={data}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n            />\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}