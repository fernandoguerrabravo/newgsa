{"ast":null,"code":"import services from 'utils/mockAdapter'; // user simple cards\n\nconst users = [{\n  id: '#1Card_Kelli',\n  avatar: 'user-1.png',\n  name: 'Kelli',\n  status: 'Active'\n}, {\n  id: '#2Card_Laurence',\n  avatar: 'user-2.png',\n  name: 'Laurence',\n  status: 'Rejected'\n}, {\n  id: '#3Card_Melyssa',\n  avatar: 'user-3.png',\n  name: 'Melyssa',\n  status: 'Active'\n}, {\n  id: '#4Card_Montana',\n  avatar: 'user-4.png',\n  name: 'Montana',\n  status: 'Active'\n}, {\n  id: '#5Card_Johnathan',\n  avatar: 'user-5.png',\n  name: 'Johnathan',\n  status: 'Active'\n}, {\n  id: '#6Card_Joanne',\n  avatar: 'user-6.png',\n  name: 'Joanne',\n  status: 'Active'\n}, {\n  id: '#7Card_Lisandro',\n  avatar: 'user-7.png',\n  name: 'Lisandro',\n  status: 'Rejected'\n}, {\n  id: '#8Card_Geovany',\n  avatar: 'user-1.png',\n  name: 'Geovany',\n  status: 'Active'\n}, {\n  id: '#9Card_Lucius',\n  avatar: 'user-2.png',\n  name: 'Lucius',\n  status: 'Active'\n}, {\n  id: '#10Card_River',\n  avatar: 'user-3.png',\n  name: 'River',\n  status: 'Active'\n}, {\n  id: '#11Card_Haylee',\n  avatar: 'user-4.png',\n  name: 'Haylee',\n  status: 'Active'\n}, {\n  id: '#12Card_John',\n  avatar: 'user-5.png',\n  name: 'John',\n  status: 'Active'\n}, {\n  id: '#13Card_Jeanne',\n  avatar: 'user-6.png',\n  name: 'Jeanne',\n  status: 'Active'\n}, {\n  id: '#14Card_Maryam',\n  avatar: 'user-7.png',\n  name: 'Maryam',\n  status: 'Rejected'\n}, {\n  id: '#15Card_Alexandre',\n  avatar: 'user-1.png',\n  name: 'Alexandre',\n  status: 'Active'\n}, {\n  id: '#16Card_Jordi',\n  avatar: 'user-2.png',\n  name: 'Jordi',\n  status: 'Active'\n}, {\n  id: '#17Card_Sharon',\n  avatar: 'user-3.png',\n  name: 'Sharon',\n  status: 'Active'\n}, {\n  id: '#18Card_Trycia',\n  avatar: 'user-4.png',\n  name: 'Trycia',\n  status: 'Active'\n}, {\n  id: '#19Card_Mazie',\n  avatar: 'user-5.png',\n  name: 'Mazie',\n  status: 'Active'\n}, {\n  id: '#20Card_Virgie',\n  avatar: 'user-6.png',\n  name: 'Virgie',\n  status: 'Active'\n}]; // ==============================|| MOCK SERVICES ||============================== //\n\nservices.onGet('/api/simple-card/list').reply(200, {\n  users\n});\nservices.onPost('/api/simple-card/filter').reply(config => {\n  try {\n    const {\n      key\n    } = JSON.parse(config.data);\n    const results = users.filter(row => {\n      let matches = true;\n      const properties = ['name', 'status'];\n      let containsQuery = false;\n      properties.forEach(property => {\n        if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n\n      return matches;\n    });\n    return [200, {\n      results\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/_mockApis/user-profile/simple-card.js"],"names":["services","users","id","avatar","name","status","onGet","reply","onPost","config","key","JSON","parse","data","results","filter","row","matches","properties","containsQuery","forEach","property","toString","toLowerCase","includes","err","console","error","message"],"mappings":"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","sourcesContent":["import services from 'utils/mockAdapter';\r\n\r\n// user simple cards\r\nconst users = [\r\n    {\r\n        id: '#1Card_Kelli',\r\n        avatar: 'user-1.png',\r\n        name: 'Kelli',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#2Card_Laurence',\r\n        avatar: 'user-2.png',\r\n        name: 'Laurence',\r\n        status: 'Rejected'\r\n    },\r\n    {\r\n        id: '#3Card_Melyssa',\r\n        avatar: 'user-3.png',\r\n        name: 'Melyssa',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#4Card_Montana',\r\n        avatar: 'user-4.png',\r\n        name: 'Montana',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#5Card_Johnathan',\r\n        avatar: 'user-5.png',\r\n        name: 'Johnathan',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#6Card_Joanne',\r\n        avatar: 'user-6.png',\r\n        name: 'Joanne',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#7Card_Lisandro',\r\n        avatar: 'user-7.png',\r\n        name: 'Lisandro',\r\n        status: 'Rejected'\r\n    },\r\n    {\r\n        id: '#8Card_Geovany',\r\n        avatar: 'user-1.png',\r\n        name: 'Geovany',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#9Card_Lucius',\r\n        avatar: 'user-2.png',\r\n        name: 'Lucius',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#10Card_River',\r\n        avatar: 'user-3.png',\r\n        name: 'River',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#11Card_Haylee',\r\n        avatar: 'user-4.png',\r\n        name: 'Haylee',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#12Card_John',\r\n        avatar: 'user-5.png',\r\n        name: 'John',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#13Card_Jeanne',\r\n        avatar: 'user-6.png',\r\n        name: 'Jeanne',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#14Card_Maryam',\r\n        avatar: 'user-7.png',\r\n        name: 'Maryam',\r\n        status: 'Rejected'\r\n    },\r\n    {\r\n        id: '#15Card_Alexandre',\r\n        avatar: 'user-1.png',\r\n        name: 'Alexandre',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#16Card_Jordi',\r\n        avatar: 'user-2.png',\r\n        name: 'Jordi',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#17Card_Sharon',\r\n        avatar: 'user-3.png',\r\n        name: 'Sharon',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#18Card_Trycia',\r\n        avatar: 'user-4.png',\r\n        name: 'Trycia',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#19Card_Mazie',\r\n        avatar: 'user-5.png',\r\n        name: 'Mazie',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#20Card_Virgie',\r\n        avatar: 'user-6.png',\r\n        name: 'Virgie',\r\n        status: 'Active'\r\n    }\r\n];\r\n\r\n// ==============================|| MOCK SERVICES ||============================== //\r\n\r\nservices.onGet('/api/simple-card/list').reply(200, { users });\r\n\r\nservices.onPost('/api/simple-card/filter').reply((config) => {\r\n    try {\r\n        const { key } = JSON.parse(config.data);\r\n\r\n        const results = users.filter((row) => {\r\n            let matches = true;\r\n\r\n            const properties = ['name', 'status'];\r\n            let containsQuery = false;\r\n\r\n            properties.forEach((property) => {\r\n                if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\r\n                    containsQuery = true;\r\n                }\r\n            });\r\n\r\n            if (!containsQuery) {\r\n                matches = false;\r\n            }\r\n            return matches;\r\n        });\r\n\r\n        return [200, { results }];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Internal server error' }];\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}