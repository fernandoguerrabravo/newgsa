{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/ui-elements/advance/UITreeview/RecursiveTreeView.js\";\nimport { TreeItem, TreeView } from '@mui/lab'; // assets\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  id: 'root',\n  name: 'Parent',\n  children: [{\n    id: '1',\n    name: 'Child - 1'\n  }, {\n    id: '3',\n    name: 'Child - 3',\n    children: [{\n      id: '4',\n      name: 'Child - 4'\n    }]\n  }]\n}; // ==============================|| UI TREEVIEW ||============================== //\n\nexport default function RecursiveTreeView() {\n  const renderTree = nodes => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: nodes.id,\n    label: nodes.name,\n    children: Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null\n  }, nodes.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 40\n    }, this),\n    defaultExpanded: ['root'],\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 106\n    }, this),\n    children: renderTree(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = RecursiveTreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecursiveTreeView\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/ui-elements/advance/UITreeview/RecursiveTreeView.js"],"names":["TreeItem","TreeView","ExpandMoreIcon","ChevronRightIcon","data","id","name","children","RecursiveTreeView","renderTree","nodes","Array","isArray","map","node"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,UAAnC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,EAAE,EAAE,MADK;AAETC,EAAAA,IAAI,EAAE,QAFG;AAGTC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADM,EAKN;AACID,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADM;AAHd,GALM;AAHD,CAAb,C,CAqBA;;AAEA,eAAe,SAASE,iBAAT,GAA6B;AACxC,QAAMC,UAAU,GAAIC,KAAD,iBACf,QAAC,QAAD;AAAyB,IAAA,MAAM,EAAEA,KAAK,CAACL,EAAvC;AAA2C,IAAA,KAAK,EAAEK,KAAK,CAACJ,IAAxD;AAAA,cACKK,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACH,QAApB,IAAgCG,KAAK,CAACH,QAAN,CAAeM,GAAf,CAAoBC,IAAD,IAAUL,UAAU,CAACK,IAAD,CAAvC,CAAhC,GAAiF;AADtF,KAAeJ,KAAK,CAACL,EAArB;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI,QAAC,QAAD;AAAU,IAAA,mBAAmB,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAA/B;AAAmD,IAAA,eAAe,EAAE,CAAC,MAAD,CAApE;AAA8E,IAAA,iBAAiB,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAjG;AAAA,cACKI,UAAU,CAACL,IAAD;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAZuBI,iB","sourcesContent":["import { TreeItem, TreeView } from '@mui/lab';\r\n\r\n// assets\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\nconst data = {\r\n    id: 'root',\r\n    name: 'Parent',\r\n    children: [\r\n        {\r\n            id: '1',\r\n            name: 'Child - 1'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Child - 3',\r\n            children: [\r\n                {\r\n                    id: '4',\r\n                    name: 'Child - 4'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| UI TREEVIEW ||============================== //\r\n\r\nexport default function RecursiveTreeView() {\r\n    const renderTree = (nodes) => (\r\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\r\n        </TreeItem>\r\n    );\r\n\r\n    return (\r\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpanded={['root']} defaultExpandIcon={<ChevronRightIcon />}>\r\n            {renderTree(data)}\r\n        </TreeView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}