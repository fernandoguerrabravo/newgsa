{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Board/ItemDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { Box, Button, Divider, Drawer, Grid, Stack, Typography } from '@mui/material'; // third party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport ItemComment from './ItemComment';\nimport EditItem from './EditItem';\nimport AddItemComment from './AddItemComment';\nimport AlertItemDelete from './AlertItemDelete';\nimport { DELETE_ITEM, SELECT_ITEM, SNACKBAR_OPEN } from 'store/actions'; // assets\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'; // ==============================|| KANBAN BOARD - ITEM DETAILS ||============================== //\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemDetails = () => {\n  _s();\n\n  let selectedData;\n\n  let commentList = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  const dispatch = useDispatch();\n  const kanban = useSelector(state => state.kanban);\n  const {\n    columns,\n    comments,\n    profiles,\n    items,\n    selectedItem,\n    userStory\n  } = kanban; // drawer\n\n  const [open, setOpen] = useState(selectedItem !== false);\n\n  const handleDrawerOpen = () => {\n    setOpen(prevState => !prevState);\n    dispatch({\n      type: SELECT_ITEM,\n      payload: {\n        selectedItem: false\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (selectedItem !== false) setOpen(true);\n  }, [selectedItem]);\n\n  if (selectedItem !== false) {\n    var _selectedData;\n\n    selectedData = items.filter(item => item.id === selectedItem)[0];\n\n    if ((_selectedData = selectedData) === null || _selectedData === void 0 ? void 0 : _selectedData.commentIds) {\n      commentList = selectedData.commentIds.reverse().map((commentId, index) => {\n        const commentData = comments.filter(comment => comment.id === commentId)[0];\n        const profile = profiles.filter(item => item.id === commentData.profileId)[0];\n        return /*#__PURE__*/_jsxDEV(ItemComment, {\n          comment: commentData,\n          profile: profile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  }\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleModalClose = status => {\n    setOpenModal(false);\n\n    if (status) {\n      handleDrawerOpen();\n      dispatch({\n        type: DELETE_ITEM,\n        payload: {\n          itemId: selectedData.id\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Task Deleted successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    sx: {\n      ml: open ? 3 : 0,\n      flexShrink: 0,\n      zIndex: 1200,\n      overflowX: 'hidden',\n      width: {\n        xs: 320,\n        md: 450\n      },\n      '& .MuiDrawer-paper': {\n        height: '100vh',\n        width: {\n          xs: 320,\n          md: 450\n        },\n        position: 'fixed',\n        border: 'none',\n        borderRadius: '0px'\n      }\n    },\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: open,\n    ModalProps: {\n      keepMounted: true\n    },\n    onClose: handleDrawerOpen,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [selectedData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 0.5,\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                width: 'calc(100% - 50px)'\n              },\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 0.5,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  color: \"error\",\n                  sx: {\n                    p: 0.5,\n                    minWidth: 32,\n                    display: {\n                      xs: 'block',\n                      md: 'none'\n                    }\n                  },\n                  onClick: handleDrawerOpen,\n                  children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  sx: {\n                    display: 'inline-block',\n                    width: 'calc(100% - 34px)',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    verticalAlign: 'middle'\n                  },\n                  children: selectedData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                color: \"error\",\n                sx: {\n                  p: 0.5,\n                  minWidth: 32\n                },\n                onClick: () => setOpenModal(true),\n                children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(AlertItemDelete, {\n                title: selectedData.title,\n                open: openModal,\n                handleClose: handleModalClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          component: \"div\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(EditItem, {\n                  item: selectedData,\n                  profiles: profiles,\n                  userStory: userStory,\n                  columns: columns,\n                  handleDrawerOpen: handleDrawerOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: commentList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(AddItemComment, {\n                  itemId: selectedItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !selectedData && /*#__PURE__*/_jsxDEV(Stack, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        sx: {\n          height: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"error\",\n          children: \"No item found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemDetails, \"FnIH1trtxAUbxIMA+n8Agaz+dnI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemDetails;\nexport default ItemDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetails\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Board/ItemDetails.js"],"names":["useEffect","useState","useDispatch","useSelector","Box","Button","Divider","Drawer","Grid","Stack","Typography","PerfectScrollbar","ItemComment","EditItem","AddItemComment","AlertItemDelete","DELETE_ITEM","SELECT_ITEM","SNACKBAR_OPEN","DeleteTwoToneIcon","HighlightOffIcon","ItemDetails","selectedData","commentList","dispatch","kanban","state","columns","comments","profiles","items","selectedItem","userStory","open","setOpen","handleDrawerOpen","prevState","type","payload","filter","item","id","commentIds","reverse","map","commentId","index","commentData","comment","profile","profileId","openModal","setOpenModal","handleModalClose","status","itemId","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","ml","flexShrink","zIndex","overflowX","width","xs","md","height","position","border","borderRadius","keepMounted","p","minWidth","display","textOverflow","whiteSpace","overflow","verticalAlign","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,UAApD,QAAsE,eAAtE,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,eAAxD,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B,C,CAEA;;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,MAAIC,YAAJ;;AACA,MAAIC,WAAW,gBAAG,qCAAlB;;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,MAAM,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA,YAAtC;AAAoDC,IAAAA;AAApD,MAAkEP,MAAxE,CANsB,CAQtB;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC8B,YAAY,KAAK,KAAlB,CAAhC;;AACA,QAAMI,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,OAAO,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAP;AACAZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEpB,WADD;AAELqB,MAAAA,OAAO,EAAE;AACLP,QAAAA,YAAY,EAAE;AADT;AAFJ,KAAD,CAAR;AAMH,GARD;;AAUA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,YAAY,KAAK,KAArB,EAA4BG,OAAO,CAAC,IAAD,CAAP;AAC/B,GAFQ,EAEN,CAACH,YAAD,CAFM,CAAT;;AAIA,MAAIA,YAAY,KAAK,KAArB,EAA4B;AAAA;;AACxBT,IAAAA,YAAY,GAAGQ,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYV,YAAnC,EAAiD,CAAjD,CAAf;;AACA,yBAAIT,YAAJ,kDAAI,cAAcoB,UAAlB,EAA8B;AAC1BnB,MAAAA,WAAW,GAAGD,YAAY,CAACoB,UAAb,CAAwBC,OAAxB,GAAkCC,GAAlC,CAAsC,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACtE,cAAMC,WAAW,GAAGnB,QAAQ,CAACW,MAAT,CAAiBS,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeI,SAA5C,EAAuD,CAAvD,CAApB;AACA,cAAMI,OAAO,GAAGpB,QAAQ,CAACU,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYM,WAAW,CAACG,SAAlD,EAA6D,CAA7D,CAAhB;AACA,4BAAO,QAAC,WAAD;AAAyB,UAAA,OAAO,EAAEH,WAAlC;AAA+C,UAAA,OAAO,EAAEE;AAAxD,WAAkBH,KAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAJa,CAAd;AAKH;AACJ;;AAED,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnD,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMoD,gBAAgB,GAAIC,MAAD,IAAY;AACjCF,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,QAAIE,MAAJ,EAAY;AACRnB,MAAAA,gBAAgB;AAChBX,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAErB,WADD;AAELsB,QAAAA,OAAO,EAAE;AACLiB,UAAAA,MAAM,EAAEjC,YAAY,CAACmB;AADhB;AAFJ,OAAD,CAAR;AAOAjB,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEnB,aADD;AAELe,QAAAA,IAAI,EAAE,IAFD;AAGLuB,QAAAA,OAAO,EAAE,2BAHJ;AAILC,QAAAA,OAAO,EAAE,OAJJ;AAKLC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SALT;AAMLC,QAAAA,aAAa,EAAE;AANV,OAAD,CAAR;AAQH;AACJ,GApBD;;AAsBA,sBACI,QAAC,MAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,EAAE,EAAE7B,IAAI,GAAG,CAAH,GAAO,CADf;AAEA8B,MAAAA,UAAU,EAAE,CAFZ;AAGAC,MAAAA,MAAM,EAAE,IAHR;AAIAC,MAAAA,SAAS,EAAE,QAJX;AAKAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE;AAAf,OALP;AAMA,4BAAsB;AAClBC,QAAAA,MAAM,EAAE,OADU;AAElBH,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,GAAN;AAAWC,UAAAA,EAAE,EAAE;AAAf,SAFW;AAGlBE,QAAAA,QAAQ,EAAE,OAHQ;AAIlBC,QAAAA,MAAM,EAAE,MAJU;AAKlBC,QAAAA,YAAY,EAAE;AALI;AANtB,KADR;AAeI,IAAA,OAAO,EAAC,WAfZ;AAgBI,IAAA,MAAM,EAAC,OAhBX;AAiBI,IAAA,IAAI,EAAEvC,IAjBV;AAkBI,IAAA,UAAU,EAAE;AAAEwC,MAAAA,WAAW,EAAE;AAAf,KAlBhB;AAmBI,IAAA,OAAO,EAAEtC,gBAnBb;AAAA,2BAqBI;AAAA,iBACKb,YAAY,iBACT;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEoD,YAAAA,CAAC,EAAE;AAAL,WAAT;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,GAA7C;AAAkD,YAAA,cAAc,EAAC,eAAjE;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE;AAAER,gBAAAA,KAAK,EAAE;AAAT,eAAf;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,KAAjB;AAAuB,gBAAA,OAAO,EAAE,GAAhC;AAAqC,gBAAA,UAAU,EAAC,QAAhD;AAAA,wCACI,QAAC,MAAD;AACI,kBAAA,OAAO,EAAC,MADZ;AAEI,kBAAA,KAAK,EAAC,OAFV;AAGI,kBAAA,EAAE,EAAE;AAAEQ,oBAAAA,CAAC,EAAE,GAAL;AAAUC,oBAAAA,QAAQ,EAAE,EAApB;AAAwBC,oBAAAA,OAAO,EAAE;AAAET,sBAAAA,EAAE,EAAE,OAAN;AAAeC,sBAAAA,EAAE,EAAE;AAAnB;AAAjC,mBAHR;AAII,kBAAA,OAAO,EAAEjC,gBAJb;AAAA,yCAMI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,UAAD;AACI,kBAAA,OAAO,EAAC,IADZ;AAEI,kBAAA,EAAE,EAAE;AACAyC,oBAAAA,OAAO,EAAE,cADT;AAEAV,oBAAAA,KAAK,EAAE,mBAFP;AAGAW,oBAAAA,YAAY,EAAE,UAHd;AAIAC,oBAAAA,UAAU,EAAE,QAJZ;AAKAC,oBAAAA,QAAQ,EAAE,QALV;AAMAC,oBAAAA,aAAa,EAAE;AANf,mBAFR;AAAA,4BAWK1D,YAAY,CAAC2D;AAXlB;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eA2BI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,sCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,MAAhB;AAAuB,gBAAA,KAAK,EAAC,OAA7B;AAAqC,gBAAA,EAAE,EAAE;AAAEP,kBAAAA,CAAC,EAAE,GAAL;AAAUC,kBAAAA,QAAQ,EAAE;AAApB,iBAAzC;AAAmE,gBAAA,OAAO,EAAE,MAAMvB,YAAY,CAAC,IAAD,CAA9F;AAAA,uCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAE9B,YAAY,CAAC2D,KAArC;AAA4C,gBAAA,IAAI,EAAE9B,SAAlD;AAA6D,gBAAA,WAAW,EAAEE;AAA1E;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqCI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBArCJ,eAsCI,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC,KAA5B;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEqB,cAAAA,CAAC,EAAE;AAAL,aAAT;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACI,QAAC,QAAD;AACI,kBAAA,IAAI,EAAEpD,YADV;AAEI,kBAAA,QAAQ,EAAEO,QAFd;AAGI,kBAAA,SAAS,EAAEG,SAHf;AAII,kBAAA,OAAO,EAAEL,OAJb;AAKI,kBAAA,gBAAgB,EAAEQ;AALtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,0BACKZ;AADL;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAaI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACI,QAAC,cAAD;AAAgB,kBAAA,MAAM,EAAEQ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA,sBAFR,EA+DK,CAACT,YAAD,iBACG,QAAC,KAAD;AAAO,QAAA,cAAc,EAAC,QAAtB;AAA+B,QAAA,UAAU,EAAC,QAA1C;AAAmD,QAAA,EAAE,EAAE;AAAE+C,UAAAA,MAAM,EAAE;AAAV,SAAvD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhER;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+FH,CA1JD;;GAAMhD,W;UAIenB,W,EACFC,W;;;KALbkB,W;AA4JN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Box, Button, Divider, Drawer, Grid, Stack, Typography } from '@mui/material';\r\n\r\n// third party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport ItemComment from './ItemComment';\r\nimport EditItem from './EditItem';\r\nimport AddItemComment from './AddItemComment';\r\nimport AlertItemDelete from './AlertItemDelete';\r\nimport { DELETE_ITEM, SELECT_ITEM, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\n// ==============================|| KANBAN BOARD - ITEM DETAILS ||============================== //\r\n\r\nconst ItemDetails = () => {\r\n    let selectedData;\r\n    let commentList = <></>;\r\n\r\n    const dispatch = useDispatch();\r\n    const kanban = useSelector((state) => state.kanban);\r\n    const { columns, comments, profiles, items, selectedItem, userStory } = kanban;\r\n\r\n    // drawer\r\n    const [open, setOpen] = useState(selectedItem !== false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen((prevState) => !prevState);\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            payload: {\r\n                selectedItem: false\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedItem !== false) setOpen(true);\r\n    }, [selectedItem]);\r\n\r\n    if (selectedItem !== false) {\r\n        selectedData = items.filter((item) => item.id === selectedItem)[0];\r\n        if (selectedData?.commentIds) {\r\n            commentList = selectedData.commentIds.reverse().map((commentId, index) => {\r\n                const commentData = comments.filter((comment) => comment.id === commentId)[0];\r\n                const profile = profiles.filter((item) => item.id === commentData.profileId)[0];\r\n                return <ItemComment key={index} comment={commentData} profile={profile} />;\r\n            });\r\n        }\r\n    }\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const handleModalClose = (status) => {\r\n        setOpenModal(false);\r\n        if (status) {\r\n            handleDrawerOpen();\r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: {\r\n                    itemId: selectedData.id\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Task Deleted successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            sx={{\r\n                ml: open ? 3 : 0,\r\n                flexShrink: 0,\r\n                zIndex: 1200,\r\n                overflowX: 'hidden',\r\n                width: { xs: 320, md: 450 },\r\n                '& .MuiDrawer-paper': {\r\n                    height: '100vh',\r\n                    width: { xs: 320, md: 450 },\r\n                    position: 'fixed',\r\n                    border: 'none',\r\n                    borderRadius: '0px'\r\n                }\r\n            }}\r\n            variant=\"temporary\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            ModalProps={{ keepMounted: true }}\r\n            onClose={handleDrawerOpen}\r\n        >\r\n            <>\r\n                {selectedData && (\r\n                    <>\r\n                        <Box sx={{ p: 3 }}>\r\n                            <Grid container alignItems=\"center\" spacing={0.5} justifyContent=\"space-between\">\r\n                                <Grid item sx={{ width: 'calc(100% - 50px)' }}>\r\n                                    <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                                        <Button\r\n                                            variant=\"text\"\r\n                                            color=\"error\"\r\n                                            sx={{ p: 0.5, minWidth: 32, display: { xs: 'block', md: 'none' } }}\r\n                                            onClick={handleDrawerOpen}\r\n                                        >\r\n                                            <HighlightOffIcon />\r\n                                        </Button>\r\n                                        <Typography\r\n                                            variant=\"h4\"\r\n                                            sx={{\r\n                                                display: 'inline-block',\r\n                                                width: 'calc(100% - 34px)',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                                overflow: 'hidden',\r\n                                                verticalAlign: 'middle'\r\n                                            }}\r\n                                        >\r\n                                            {selectedData.title}\r\n                                        </Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"text\" color=\"error\" sx={{ p: 0.5, minWidth: 32 }} onClick={() => setOpenModal(true)}>\r\n                                        <DeleteTwoToneIcon />\r\n                                    </Button>\r\n                                    <AlertItemDelete title={selectedData.title} open={openModal} handleClose={handleModalClose} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Divider />\r\n                        <PerfectScrollbar component=\"div\">\r\n                            <Box sx={{ p: 3 }}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <EditItem\r\n                                            item={selectedData}\r\n                                            profiles={profiles}\r\n                                            userStory={userStory}\r\n                                            columns={columns}\r\n                                            handleDrawerOpen={handleDrawerOpen}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        {commentList}\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AddItemComment itemId={selectedItem} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </PerfectScrollbar>\r\n                    </>\r\n                )}\r\n                {!selectedData && (\r\n                    <Stack justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh' }}>\r\n                        <Typography variant=\"h5\" color=\"error\">\r\n                            No item found\r\n                        </Typography>\r\n                    </Stack>\r\n                )}\r\n            </>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default ItemDetails;\r\n"]},"metadata":{},"sourceType":"module"}