{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Board/EditColumn.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { OutlinedInput } from '@mui/material'; // project imports\n\nimport { EDIT_COLUMN } from 'store/actions'; // ==============================|| KANBAN BOARD - COLUMN EDIT ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditColumn = ({\n  column\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const handleColumnRename = event => {\n    dispatch({\n      type: EDIT_COLUMN,\n      payload: {\n        column: {\n          id: column.id,\n          title: event.target.value,\n          itemIds: column.itemIds\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    fullWidth: true,\n    value: column.title,\n    onChange: handleColumnRename,\n    sx: {\n      mb: 1.5,\n      '& input:focus': {\n        bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\n      },\n      '& input:hover': {\n        bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\n      },\n      '& input:hover + fieldset': {\n        display: 'block'\n      },\n      '&, & input': {\n        bgcolor: 'transparent'\n      },\n      '& fieldset': {\n        display: 'none'\n      },\n      '& input:focus + fieldset': {\n        display: 'block'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditColumn, \"k96Oy46zkrmUN7zHz8tx3R73/fQ=\", false, function () {\n  return [useTheme, useDispatch];\n});\n\n_c = EditColumn;\nEditColumn.propTypes = {\n  column: PropTypes.object\n};\nexport default EditColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditColumn\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/application/kanban/Board/EditColumn.js"],"names":["PropTypes","useDispatch","useTheme","OutlinedInput","EDIT_COLUMN","EditColumn","column","theme","dispatch","handleColumnRename","event","type","payload","id","title","target","value","itemIds","mb","bgcolor","palette","mode","dark","grey","display","propTypes","object"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC/B,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,kBAAkB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAE;AACLN,QAAAA,MAAM,EAAE;AACJO,UAAAA,EAAE,EAAEP,MAAM,CAACO,EADP;AAEJC,UAAAA,KAAK,EAAEJ,KAAK,CAACK,MAAN,CAAaC,KAFhB;AAGJC,UAAAA,OAAO,EAAEX,MAAM,CAACW;AAHZ;AADH;AAFJ,KAAD,CAAR;AAUH,GAXD;;AAaA,sBACI,QAAC,aAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAEX,MAAM,CAACQ,KAFlB;AAGI,IAAA,QAAQ,EAAEL,kBAHd;AAII,IAAA,EAAE,EAAE;AACAS,MAAAA,EAAE,EAAE,GADJ;AAEA,uBAAiB;AACbC,QAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCd,KAAK,CAACa,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAAhC,GAA0Df,KAAK,CAACa,OAAN,CAAcG,IAAd,CAAmB,EAAnB;AADtD,OAFjB;AAKA,uBAAiB;AACbJ,QAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCd,KAAK,CAACa,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAAhC,GAA0Df,KAAK,CAACa,OAAN,CAAcG,IAAd,CAAmB,EAAnB;AADtD,OALjB;AAQA,kCAA4B;AACxBC,QAAAA,OAAO,EAAE;AADe,OAR5B;AAWA,oBAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAXd;AAYA,oBAAc;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAZd;AAaA,kCAA4B;AAAEA,QAAAA,OAAO,EAAE;AAAX;AAb5B;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvCD;;GAAMnB,U;UACYH,Q,EACGD,W;;;KAFfI,U;AAyCNA,UAAU,CAACoB,SAAX,GAAuB;AACnBnB,EAAAA,MAAM,EAAEN,SAAS,CAAC0B;AADC,CAAvB;AAIA,eAAerB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { OutlinedInput } from '@mui/material';\r\n\r\n// project imports\r\nimport { EDIT_COLUMN } from 'store/actions';\r\n\r\n// ==============================|| KANBAN BOARD - COLUMN EDIT ||============================== //\r\n\r\nconst EditColumn = ({ column }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleColumnRename = (event) => {\r\n        dispatch({\r\n            type: EDIT_COLUMN,\r\n            payload: {\r\n                column: {\r\n                    id: column.id,\r\n                    title: event.target.value,\r\n                    itemIds: column.itemIds\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <OutlinedInput\r\n            fullWidth\r\n            value={column.title}\r\n            onChange={handleColumnRename}\r\n            sx={{\r\n                mb: 1.5,\r\n                '& input:focus': {\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\r\n                },\r\n                '& input:hover': {\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[50]\r\n                },\r\n                '& input:hover + fieldset': {\r\n                    display: 'block'\r\n                },\r\n                '&, & input': { bgcolor: 'transparent' },\r\n                '& fieldset': { display: 'none' },\r\n                '& input:focus + fieldset': { display: 'block' }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nEditColumn.propTypes = {\r\n    column: PropTypes.object\r\n};\r\n\r\nexport default EditColumn;\r\n"]},"metadata":{},"sourceType":"module"}