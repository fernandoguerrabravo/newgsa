{"ast":null,"code":"import services from 'utils/mockAdapter'; // user profile card\n\nconst users = [{\n  id: '#1Card_Perry',\n  avatar: 'user-7.png',\n  profile: 'profile-back-1.png',\n  name: 'Perry',\n  role: 'Internal Assurance Architect',\n  status: 'Active'\n}, {\n  id: '#2Card_Jennyfer',\n  avatar: 'user-6.png',\n  profile: 'profile-back-2.png',\n  name: 'Jennyfer',\n  role: 'Internal Data Facilitator',\n  status: 'Active'\n}, {\n  id: '#3Card_Antonette',\n  avatar: 'user-5.png',\n  profile: 'profile-back-3.png',\n  name: 'Antonette',\n  role: 'National Applications Officer',\n  status: 'Rejected'\n}, {\n  id: '#4Card_Mekhi',\n  avatar: 'user-4.png',\n  profile: 'profile-back-4.png',\n  name: 'Mekhi',\n  role: 'Central Quality Liaison',\n  status: 'Active'\n}, {\n  id: '#5Card_Margie',\n  avatar: 'user-3.png',\n  profile: 'profile-back-5.png',\n  name: 'Margie',\n  role: 'Direct Implementation Developer',\n  status: 'Active'\n}, {\n  id: '#6Card_Wilfrid',\n  avatar: 'user-2.png',\n  profile: 'profile-back-6.png',\n  name: 'Wilfrid',\n  role: 'Lead Intranet Planner',\n  status: 'Active'\n}, {\n  id: '#7Card_Kennedy',\n  avatar: 'user-1.png',\n  profile: 'profile-back-7.png',\n  name: 'Kennedy',\n  role: 'Regional Division Administrator',\n  status: 'Active'\n}, {\n  id: '#8Card_Ida',\n  avatar: 'user-4.png',\n  profile: 'profile-back-8.png',\n  name: 'Ida',\n  role: 'Central Brand Coordinator',\n  status: 'Active'\n}, {\n  id: '#9Card_Madyson',\n  avatar: 'user-5.png',\n  profile: 'profile-back-9.png',\n  name: 'Madyson',\n  role: 'Product Tactics Facilitator',\n  status: 'Active'\n}, {\n  id: '#10Card_Murphy',\n  avatar: 'user-6.png',\n  profile: 'profile-back-10.png',\n  name: 'Murphy',\n  role: 'Lead Directives Analyst',\n  status: 'Rejected'\n}, {\n  id: '#11Card_Lucie',\n  avatar: 'user-7.png',\n  profile: 'profile-back-11.png',\n  name: 'Lucie',\n  role: 'Principal Marketing Administrator',\n  status: 'Active'\n}, {\n  id: '#12Card_Sonny',\n  avatar: 'user-1.png',\n  profile: 'profile-back-12.png',\n  name: 'Sonny',\n  role: 'Direct Assurance Administrator',\n  status: 'Active'\n}]; // ==============================|| MOCK SERVICES ||============================== //\n\nservices.onGet('/api/profile-card/list').reply(200, {\n  users\n});\nservices.onPost('/api/profile-card/filter').reply(config => {\n  try {\n    const {\n      key\n    } = JSON.parse(config.data);\n    const results = users.filter(row => {\n      let matches = true;\n      const properties = ['name', 'role', 'status'];\n      let containsQuery = false;\n      properties.forEach(property => {\n        if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n\n      return matches;\n    });\n    return [200, {\n      results\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/_mockApis/user-profile/profile-card.js"],"names":["services","users","id","avatar","profile","name","role","status","onGet","reply","onPost","config","key","JSON","parse","data","results","filter","row","matches","properties","containsQuery","forEach","property","toString","toLowerCase","includes","err","console","error","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,cADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,OAJV;AAKIC,EAAAA,IAAI,EAAE,8BALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CADU,EASV;AACIL,EAAAA,EAAE,EAAE,iBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,UAJV;AAKIC,EAAAA,IAAI,EAAE,2BALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CATU,EAiBV;AACIL,EAAAA,EAAE,EAAE,kBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,WAJV;AAKIC,EAAAA,IAAI,EAAE,+BALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAjBU,EAyBV;AACIL,EAAAA,EAAE,EAAE,cADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,OAJV;AAKIC,EAAAA,IAAI,EAAE,yBALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAzBU,EAiCV;AACIL,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,IAAI,EAAE,iCALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAjCU,EAyCV;AACIL,EAAAA,EAAE,EAAE,gBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,SAJV;AAKIC,EAAAA,IAAI,EAAE,uBALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAzCU,EAiDV;AACIL,EAAAA,EAAE,EAAE,gBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,SAJV;AAKIC,EAAAA,IAAI,EAAE,iCALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAjDU,EAyDV;AACIL,EAAAA,EAAE,EAAE,YADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,KAJV;AAKIC,EAAAA,IAAI,EAAE,2BALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAzDU,EAiEV;AACIL,EAAAA,EAAE,EAAE,gBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,oBAHb;AAIIC,EAAAA,IAAI,EAAE,SAJV;AAKIC,EAAAA,IAAI,EAAE,6BALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAjEU,EAyEV;AACIL,EAAAA,EAAE,EAAE,gBADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,qBAHb;AAIIC,EAAAA,IAAI,EAAE,QAJV;AAKIC,EAAAA,IAAI,EAAE,yBALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAzEU,EAiFV;AACIL,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,qBAHb;AAIIC,EAAAA,IAAI,EAAE,OAJV;AAKIC,EAAAA,IAAI,EAAE,mCALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAjFU,EAyFV;AACIL,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,MAAM,EAAE,YAFZ;AAGIC,EAAAA,OAAO,EAAE,qBAHb;AAIIC,EAAAA,IAAI,EAAE,OAJV;AAKIC,EAAAA,IAAI,EAAE,gCALV;AAMIC,EAAAA,MAAM,EAAE;AANZ,CAzFU,CAAd,C,CAmGA;;AAEAP,QAAQ,CAACQ,KAAT,CAAe,wBAAf,EAAyCC,KAAzC,CAA+C,GAA/C,EAAoD;AAAER,EAAAA;AAAF,CAApD;AAEAD,QAAQ,CAACU,MAAT,CAAgB,0BAAhB,EAA4CD,KAA5C,CAAmDE,MAAD,IAAY;AAC1D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAUC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,IAAlB,CAAhB;AAEA,UAAMC,OAAO,GAAGf,KAAK,CAACgB,MAAN,CAAcC,GAAD,IAAS;AAClC,UAAIC,OAAO,GAAG,IAAd;AAEA,YAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAAnB;AACA,UAAIC,aAAa,GAAG,KAApB;AAEAD,MAAAA,UAAU,CAACE,OAAX,CAAoBC,QAAD,IAAc;AAC7B,YAAIL,GAAG,CAACK,QAAD,CAAH,CAAcC,QAAd,GAAyBC,WAAzB,GAAuCC,QAAvC,CAAgDd,GAAG,CAACY,QAAJ,GAAeC,WAAf,EAAhD,CAAJ,EAAmF;AAC/EJ,UAAAA,aAAa,GAAG,IAAhB;AACH;AACJ,OAJD;;AAMA,UAAI,CAACA,aAAL,EAAoB;AAChBF,QAAAA,OAAO,GAAG,KAAV;AACH;;AACD,aAAOA,OAAP;AACH,KAhBe,CAAhB;AAkBA,WAAO,CAAC,GAAD,EAAM;AAAEH,MAAAA;AAAF,KAAN,CAAP;AACH,GAtBD,CAsBE,OAAOW,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,WAAO,CAAC,GAAD,EAAM;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAN,CAAP;AACH;AACJ,CA3BD","sourcesContent":["import services from 'utils/mockAdapter';\r\n\r\n// user profile card\r\nconst users = [\r\n    {\r\n        id: '#1Card_Perry',\r\n        avatar: 'user-7.png',\r\n        profile: 'profile-back-1.png',\r\n        name: 'Perry',\r\n        role: 'Internal Assurance Architect',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#2Card_Jennyfer',\r\n        avatar: 'user-6.png',\r\n        profile: 'profile-back-2.png',\r\n        name: 'Jennyfer',\r\n        role: 'Internal Data Facilitator',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#3Card_Antonette',\r\n        avatar: 'user-5.png',\r\n        profile: 'profile-back-3.png',\r\n        name: 'Antonette',\r\n        role: 'National Applications Officer',\r\n        status: 'Rejected'\r\n    },\r\n    {\r\n        id: '#4Card_Mekhi',\r\n        avatar: 'user-4.png',\r\n        profile: 'profile-back-4.png',\r\n        name: 'Mekhi',\r\n        role: 'Central Quality Liaison',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#5Card_Margie',\r\n        avatar: 'user-3.png',\r\n        profile: 'profile-back-5.png',\r\n        name: 'Margie',\r\n        role: 'Direct Implementation Developer',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#6Card_Wilfrid',\r\n        avatar: 'user-2.png',\r\n        profile: 'profile-back-6.png',\r\n        name: 'Wilfrid',\r\n        role: 'Lead Intranet Planner',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#7Card_Kennedy',\r\n        avatar: 'user-1.png',\r\n        profile: 'profile-back-7.png',\r\n        name: 'Kennedy',\r\n        role: 'Regional Division Administrator',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#8Card_Ida',\r\n        avatar: 'user-4.png',\r\n        profile: 'profile-back-8.png',\r\n        name: 'Ida',\r\n        role: 'Central Brand Coordinator',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#9Card_Madyson',\r\n        avatar: 'user-5.png',\r\n        profile: 'profile-back-9.png',\r\n        name: 'Madyson',\r\n        role: 'Product Tactics Facilitator',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#10Card_Murphy',\r\n        avatar: 'user-6.png',\r\n        profile: 'profile-back-10.png',\r\n        name: 'Murphy',\r\n        role: 'Lead Directives Analyst',\r\n        status: 'Rejected'\r\n    },\r\n    {\r\n        id: '#11Card_Lucie',\r\n        avatar: 'user-7.png',\r\n        profile: 'profile-back-11.png',\r\n        name: 'Lucie',\r\n        role: 'Principal Marketing Administrator',\r\n        status: 'Active'\r\n    },\r\n    {\r\n        id: '#12Card_Sonny',\r\n        avatar: 'user-1.png',\r\n        profile: 'profile-back-12.png',\r\n        name: 'Sonny',\r\n        role: 'Direct Assurance Administrator',\r\n        status: 'Active'\r\n    }\r\n];\r\n\r\n// ==============================|| MOCK SERVICES ||============================== //\r\n\r\nservices.onGet('/api/profile-card/list').reply(200, { users });\r\n\r\nservices.onPost('/api/profile-card/filter').reply((config) => {\r\n    try {\r\n        const { key } = JSON.parse(config.data);\r\n\r\n        const results = users.filter((row) => {\r\n            let matches = true;\r\n\r\n            const properties = ['name', 'role', 'status'];\r\n            let containsQuery = false;\r\n\r\n            properties.forEach((property) => {\r\n                if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\r\n                    containsQuery = true;\r\n                }\r\n            });\r\n\r\n            if (!containsQuery) {\r\n                matches = false;\r\n            }\r\n            return matches;\r\n        });\r\n\r\n        return [200, { results }];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Internal server error' }];\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}