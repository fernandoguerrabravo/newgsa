{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/application/kanban/Board/Columns.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, IconButton } from '@mui/material'; // third-party\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd'; // project imports\n\nimport EditColumn from './EditColumn';\nimport Items from './Items';\nimport AddItem from './AddItem';\nimport AlertColumnDelete from './AlertColumnDelete';\nimport { gridSpacing } from 'store/constant';\nimport { DELETE_COLUMN, SNACKBAR_OPEN } from 'store/actions'; // assets\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone'; // column drag wrapper\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDragWrapper = (isDragging, draggableStyle, theme, radius) => ({\n  minWidth: 250,\n  border: '1px solid',\n  borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\n  backgroundColor: isDragging ? theme.palette.grey[50] : theme.palette.primary.light,\n  borderRadius: radius,\n  userSelect: 'none',\n  margin: `0 ${16}px 0 0`,\n  height: '100%',\n  ...draggableStyle\n}); // column drop wrapper\n\n\nconst getDropWrapper = (isDraggingOver, theme, radius) => ({\n  background: isDraggingOver ? theme.palette.primary[200] : theme.palette.primary.light,\n  padding: '8px 16px 14px',\n  width: 'auto',\n  borderRadius: radius\n}); // ==============================|| KANBAN BOARD - COLUMN ||============================== //\n\n\nconst Columns = ({\n  column,\n  index\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const customization = useSelector(state => state.customization);\n  const kanban = useSelector(state => state.kanban);\n  const {\n    items\n  } = kanban;\n  const columnItems = column.itemIds.map(itemId => items.filter(item => item.id === itemId)[0]);\n  const [open, setOpen] = useState(false);\n\n  const handleColumnDelete = () => {\n    setOpen(true);\n  };\n\n  const handleClose = status => {\n    setOpen(false);\n\n    if (status) {\n      dispatch({\n        type: DELETE_COLUMN,\n        payload: {\n          columnId: column.id\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Column deleted successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: column.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      style: getDragWrapper(snapshot.isDragging, provided.draggableProps.style, theme, `${customization.borderRadius}px`),\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id,\n        type: \"item\",\n        children: (providedDrop, snapshotDrop) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: providedDrop.innerRef,\n          ...providedDrop.droppableProps,\n          style: getDropWrapper(snapshotDrop.isDraggingOver, theme, `${customization.borderRadius}px`),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: gridSpacing,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              zeroMinWidth: true,\n              children: /*#__PURE__*/_jsxDEV(EditColumn, {\n                column: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                mb: 1.5\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleColumnDelete,\n                size: \"large\",\n                children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                  fontSize: \"small\",\n                  \"aria-controls\": \"menu-simple-card\",\n                  \"aria-haspopup\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(AlertColumnDelete, {\n                title: column.title,\n                open: open,\n                handleClose: handleClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), columnItems.map((item, i) => /*#__PURE__*/_jsxDEV(Items, {\n            item: item,\n            index: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this)), providedDrop.placeholder, /*#__PURE__*/_jsxDEV(AddItem, {\n            columnId: column.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Columns, \"MuvDPflJWZ9wN9vHgI7FA6d6gfg=\", false, function () {\n  return [useTheme, useDispatch, useSelector, useSelector];\n});\n\n_c = Columns;\nColumns.propTypes = {\n  column: PropTypes.object,\n  index: PropTypes.number\n};\nexport default Columns;\n\nvar _c;\n\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/application/kanban/Board/Columns.js"],"names":["PropTypes","useState","useDispatch","useSelector","useTheme","Grid","IconButton","Droppable","Draggable","EditColumn","Items","AddItem","AlertColumnDelete","gridSpacing","DELETE_COLUMN","SNACKBAR_OPEN","DeleteTwoToneIcon","getDragWrapper","isDragging","draggableStyle","theme","radius","minWidth","border","borderColor","palette","mode","background","default","primary","backgroundColor","grey","light","borderRadius","userSelect","margin","height","getDropWrapper","isDraggingOver","padding","width","Columns","column","index","dispatch","customization","state","kanban","items","columnItems","itemIds","map","itemId","filter","item","id","open","setOpen","handleColumnDelete","handleClose","status","type","payload","columnId","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","providedDrop","snapshotDrop","droppableProps","mb","title","i","placeholder","propTypes","object","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, IconButton } from '@mui/material';\r\n\r\n// third-party\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// project imports\r\nimport EditColumn from './EditColumn';\r\nimport Items from './Items';\r\nimport AddItem from './AddItem';\r\nimport AlertColumnDelete from './AlertColumnDelete';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { DELETE_COLUMN, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\n\r\n// column drag wrapper\r\nconst getDragWrapper = (isDragging, draggableStyle, theme, radius) => ({\r\n    minWidth: 250,\r\n    border: '1px solid',\r\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n    backgroundColor: isDragging ? theme.palette.grey[50] : theme.palette.primary.light,\r\n    borderRadius: radius,\r\n    userSelect: 'none',\r\n    margin: `0 ${16}px 0 0`,\r\n    height: '100%',\r\n    ...draggableStyle\r\n});\r\n\r\n// column drop wrapper\r\nconst getDropWrapper = (isDraggingOver, theme, radius) => ({\r\n    background: isDraggingOver ? theme.palette.primary[200] : theme.palette.primary.light,\r\n    padding: '8px 16px 14px',\r\n    width: 'auto',\r\n    borderRadius: radius\r\n});\r\n\r\n// ==============================|| KANBAN BOARD - COLUMN ||============================== //\r\n\r\nconst Columns = ({ column, index }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const customization = useSelector((state) => state.customization);\r\n    const kanban = useSelector((state) => state.kanban);\r\n    const { items } = kanban;\r\n    const columnItems = column.itemIds.map((itemId) => items.filter((item) => item.id === itemId)[0]);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleColumnDelete = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (status) => {\r\n        setOpen(false);\r\n        if (status) {\r\n            dispatch({\r\n                type: DELETE_COLUMN,\r\n                payload: {\r\n                    columnId: column.id\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Column deleted successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Draggable draggableId={column.id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getDragWrapper(snapshot.isDragging, provided.draggableProps.style, theme, `${customization.borderRadius}px`)}\r\n                >\r\n                    <Droppable droppableId={column.id} type=\"item\">\r\n                        {(providedDrop, snapshotDrop) => (\r\n                            <div\r\n                                ref={providedDrop.innerRef}\r\n                                {...providedDrop.droppableProps}\r\n                                style={getDropWrapper(snapshotDrop.isDraggingOver, theme, `${customization.borderRadius}px`)}\r\n                            >\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                    <Grid item xs zeroMinWidth>\r\n                                        <EditColumn column={column} />\r\n                                    </Grid>\r\n                                    <Grid item sx={{ mb: 1.5 }}>\r\n                                        <IconButton onClick={handleColumnDelete} size=\"large\">\r\n                                            <DeleteTwoToneIcon fontSize=\"small\" aria-controls=\"menu-simple-card\" aria-haspopup=\"true\" />\r\n                                        </IconButton>\r\n                                        <AlertColumnDelete title={column.title} open={open} handleClose={handleClose} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {columnItems.map((item, i) => (\r\n                                    <Items key={i} item={item} index={i} />\r\n                                ))}\r\n                                {providedDrop.placeholder}\r\n                                <AddItem columnId={column.id} />\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nColumns.propTypes = {\r\n    column: PropTypes.object,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default Columns;\r\n"]},"metadata":{},"sourceType":"module"}