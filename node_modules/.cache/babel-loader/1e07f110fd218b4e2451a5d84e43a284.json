{"ast":null,"code":"const {\n  createElement,\n  useEffect\n} = require('react');\n\nconst {\n  setGlobal,\n  useGlobal\n} = require('reactn');\n\nsetGlobal({\n  useHistoryUrl: location.pathname,\n  useHistoryState: window.history.state\n});\n\nconst navigate = (url, state = {}, {\n  push = true\n} = {}) => {\n  setGlobal({\n    useHistoryUrl: url,\n    useHistoryState: state\n  });\n\n  if (push) {\n    window.history.pushState(state, null, url);\n  }\n};\n\nconst handleLink = event => {\n  if (event.button === 0 && !(event.ctrlKey || event.metaKey || event.shiftKey || event.altKey)) {\n    event.preventDefault();\n    navigate(event.currentTarget.pathname);\n  }\n};\n\nconst Link = props => createElement('a', Object.assign({}, props, {\n  onClick(event) {\n    handleLink(event);\n\n    if (props.onClick) {\n      props.onClick(event);\n    }\n  }\n\n}));\n\nconst useCurrentUrl = () => {\n  const [url] = useGlobal('useHistoryUrl');\n  const [state] = useGlobal('useHistoryState');\n  return {\n    url,\n    state\n  };\n};\n\nconst useHistory = () => {\n  const handlePopstate = ev => {\n    navigate(location.pathname, ev.state, {\n      push: false\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('popstate', handlePopstate);\n    return () => window.removeEventListener('popstate', handlePopstate);\n  });\n  return useCurrentUrl();\n};\n\nmodule.exports = useHistory;\nObject.assign(module.exports, {\n  useHistory,\n  useCurrentUrl,\n  navigate,\n  handleLink,\n  Link\n});","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/node_modules/use-history/index.js"],"names":["createElement","useEffect","require","setGlobal","useGlobal","useHistoryUrl","location","pathname","useHistoryState","window","history","state","navigate","url","push","pushState","handleLink","event","button","ctrlKey","metaKey","shiftKey","altKey","preventDefault","currentTarget","Link","props","Object","assign","onClick","useCurrentUrl","useHistory","handlePopstate","ev","addEventListener","removeEventListener","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,IAA+BC,OAAO,CAAC,OAAD,CAA5C;;AACA,MAAM;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA2BF,OAAO,CAAC,QAAD,CAAxC;;AAEAC,SAAS,CAAC;AACTE,EAAAA,aAAa,EAAEC,QAAQ,CAACC,QADf;AAETC,EAAAA,eAAe,EAAEC,MAAM,CAACC,OAAP,CAAeC;AAFvB,CAAD,CAAT;;AAKA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMF,KAAK,GAAG,EAAd,EAAkB;AAAEG,EAAAA,IAAI,GAAG;AAAT,IAAkB,EAApC,KAA2C;AAC3DX,EAAAA,SAAS,CAAC;AACTE,IAAAA,aAAa,EAAEQ,GADN;AAETL,IAAAA,eAAe,EAAEG;AAFR,GAAD,CAAT;;AAKA,MAAGG,IAAH,EAAS;AACRL,IAAAA,MAAM,CAACC,OAAP,CAAeK,SAAf,CAAyBJ,KAAzB,EAAgC,IAAhC,EAAsCE,GAAtC;AACA;AACD,CATD;;AAWA,MAAMG,UAAU,GAAGC,KAAK,IAAI;AAC3B,MAAGA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsB,EAAED,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACG,OAAvB,IAAkCH,KAAK,CAACI,QAAxC,IAAoDJ,KAAK,CAACK,MAA5D,CAAzB,EAA8F;AAC7FL,IAAAA,KAAK,CAACM,cAAN;AACAX,IAAAA,QAAQ,CAACK,KAAK,CAACO,aAAN,CAAoBjB,QAArB,CAAR;AACA;AACD,CALD;;AAOA,MAAMkB,IAAI,GAAGC,KAAK,IAAI1B,aAAa,CAClC,GADkC,EAElC2B,MAAM,CAACC,MAAP,CACC,EADD,EAECF,KAFD,EAGC;AACCG,EAAAA,OAAO,CAACZ,KAAD,EAAQ;AACdD,IAAAA,UAAU,CAACC,KAAD,CAAV;;AACA,QAAGS,KAAK,CAACG,OAAT,EAAkB;AACjBH,MAAAA,KAAK,CAACG,OAAN,CAAcZ,KAAd;AACA;AACD;;AANF,CAHD,CAFkC,CAAnC;;AAgBA,MAAMa,aAAa,GAAG,MAAM;AAC3B,QAAM,CAACjB,GAAD,IAAQT,SAAS,CAAC,eAAD,CAAvB;AACA,QAAM,CAACO,KAAD,IAAUP,SAAS,CAAC,iBAAD,CAAzB;AACA,SAAO;AAACS,IAAAA,GAAD;AAAMF,IAAAA;AAAN,GAAP;AACA,CAJD;;AAMA,MAAMoB,UAAU,GAAG,MAAM;AACxB,QAAMC,cAAc,GAAGC,EAAE,IAAI;AAC5BrB,IAAAA,QAAQ,CAACN,QAAQ,CAACC,QAAV,EAAoB0B,EAAE,CAACtB,KAAvB,EAA8B;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAA9B,CAAR;AACA,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,MAAM,CAACyB,gBAAP,CAAwB,UAAxB,EAAoCF,cAApC;AACA,WAAO,MAAMvB,MAAM,CAAC0B,mBAAP,CAA2B,UAA3B,EAAuCH,cAAvC,CAAb;AACA,GAHQ,CAAT;AAKA,SAAOF,aAAa,EAApB;AACA,CAXD;;AAaAM,MAAM,CAACC,OAAP,GAAiBN,UAAjB;AAEAJ,MAAM,CAACC,MAAP,CAAcQ,MAAM,CAACC,OAArB,EAA8B;AAC7BN,EAAAA,UAD6B;AAE7BD,EAAAA,aAF6B;AAG7BlB,EAAAA,QAH6B;AAI7BI,EAAAA,UAJ6B;AAK7BS,EAAAA;AAL6B,CAA9B","sourcesContent":["const { createElement, useEffect } = require('react')\nconst { setGlobal, useGlobal } = require('reactn')\n\nsetGlobal({\n\tuseHistoryUrl: location.pathname,\n\tuseHistoryState: window.history.state,\n})\n\nconst navigate = (url, state = {}, { push = true } = {}) => {\n\tsetGlobal({\n\t\tuseHistoryUrl: url,\n\t\tuseHistoryState: state,\n\t})\n\n\tif(push) {\n\t\twindow.history.pushState(state, null, url)\n\t}\n}\n\nconst handleLink = event => {\n\tif(event.button === 0 && !(event.ctrlKey || event.metaKey || event.shiftKey || event.altKey)) {\n\t\tevent.preventDefault()\n\t\tnavigate(event.currentTarget.pathname)\n\t}\n}\n\nconst Link = props => createElement(\n\t'a',\n\tObject.assign(\n\t\t{},\n\t\tprops,\n\t\t{\n\t\t\tonClick(event) {\n\t\t\t\thandleLink(event)\n\t\t\t\tif(props.onClick) {\n\t\t\t\t\tprops.onClick(event)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t)\n)\n\nconst useCurrentUrl = () => {\n\tconst [url] = useGlobal('useHistoryUrl')\n\tconst [state] = useGlobal('useHistoryState')\n\treturn {url, state}\n}\n\nconst useHistory = () => {\n\tconst handlePopstate = ev => {\n\t\tnavigate(location.pathname, ev.state, { push: false })\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('popstate', handlePopstate)\n\t\treturn () => window.removeEventListener('popstate', handlePopstate)\n\t})\n\n\treturn useCurrentUrl()\n}\n\nmodule.exports = useHistory\n\nObject.assign(module.exports, {\n\tuseHistory,\n\tuseCurrentUrl,\n\tnavigate,\n\thandleLink,\n\tLink,\n})"]},"metadata":{},"sourceType":"script"}