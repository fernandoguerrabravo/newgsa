{"ast":null,"code":"/**\r\n * axios setup to use mock service\r\n */\nimport axios from 'axios';\nconst axiosServices = axios.create(); // interceptor for http\n\naxiosServices.interceptors.response.use(response => response, error => Promise.reject(error.response && error.response.data || 'Wrong Services'));\nexport default axiosServices;","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/utils/axios.js"],"names":["axios","axiosServices","create","interceptors","response","use","error","Promise","reject","data"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,EAAtB,C,CAEA;;AACAD,aAAa,CAACE,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACKD,QAAD,IAAcA,QADlB,EAEKE,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAgBF,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeK,IAAlC,IAA2C,gBAA1D,CAFf;AAKA,eAAeR,aAAf","sourcesContent":["/**\r\n * axios setup to use mock service\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nconst axiosServices = axios.create();\r\n\r\n// interceptor for http\r\naxiosServices.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => Promise.reject((error.response && error.response.data) || 'Wrong Services')\r\n);\r\n\r\nexport default axiosServices;\r\n"]},"metadata":{},"sourceType":"module"}