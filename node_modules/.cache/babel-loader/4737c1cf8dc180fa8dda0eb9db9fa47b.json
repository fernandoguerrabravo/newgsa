{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/ui-component/cards/AttachmentCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport DownloadForOfflineTwoToneIcon from '@mui/icons-material/DownloadForOfflineTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst backImage = require.context('assets/images/profile', true); // ==============================|| ATTACHMENT CARD ||============================== //\n\n\nconst AttachmentCard = ({\n  title,\n  image\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const backProfile = image && backImage(`./${image}`).default;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      bgcolor: theme.palette.mode === 'dark' ? 'dark.dark' : 'grey.100'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: backProfile,\n      title: \"Slider5 image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        p: 2,\n        pb: '16px !important'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          zeroMinWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            sx: {\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(DownloadForOfflineTwoToneIcon, {\n            sx: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AttachmentCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = AttachmentCard;\nAttachmentCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\nexport default AttachmentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttachmentCard\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/ui-component/cards/AttachmentCard.js"],"names":["PropTypes","useTheme","Card","CardContent","CardMedia","Grid","Typography","gridSpacing","DownloadForOfflineTwoToneIcon","backImage","require","context","AttachmentCard","title","image","theme","backProfile","default","bgcolor","palette","mode","p","pb","overflow","textOverflow","whiteSpace","cursor","propTypes","string","oneOfType","node","object"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,UAA7C,QAA+D,eAA/D;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,OAAOC,6BAAP,MAA0C,+CAA1C;;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,OAAR,CAAgB,uBAAhB,EAAyC,IAAzC,CAAlB,C,CAEA;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AACzC,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,WAAW,GAAGF,KAAK,IAAIL,SAAS,CAAE,KAAIK,KAAM,EAAZ,CAAT,CAAwBG,OAArD;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC,WAAhC,GAA8C;AAAzD,KAAV;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,KAArB;AAA2B,MAAA,KAAK,EAAEJ,WAAlC;AAA+C,MAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEK,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,EAAE,EAAE;AAAZ,OAAjB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAEf,WAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,MAAb;AAAc,UAAA,YAAY,MAA1B;AAAA,iCACI,QAAC,UAAD;AACI,YAAA,OAAO,EAAC,IADZ;AAEI,YAAA,SAAS,EAAC,KAFd;AAGI,YAAA,EAAE,EAAE;AAAEgB,cAAAA,QAAQ,EAAE,QAAZ;AAAsBC,cAAAA,YAAY,EAAE,UAApC;AAAgDC,cAAAA,UAAU,EAAE;AAA5D,aAHR;AAAA,sBAKKZ;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,6BAAD;AAA+B,YAAA,EAAE,EAAE;AAAEa,cAAAA,MAAM,EAAE;AAAV;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAzBD;;GAAMd,c;UACYX,Q;;;KADZW,c;AA2BNA,cAAc,CAACe,SAAf,GAA2B;AACvBb,EAAAA,KAAK,EAAEd,SAAS,CAAC4B,MADM;AAEvBf,EAAAA,KAAK,EAAEb,SAAS,CAAC6B,SAAV,CAAoB,CAAC7B,SAAS,CAAC8B,IAAX,EAAiB9B,SAAS,CAAC4B,MAA3B,EAAmC5B,SAAS,CAAC+B,MAA7C,CAApB;AAFgB,CAA3B;AAKA,eAAenB,cAAf","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@mui/material';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport DownloadForOfflineTwoToneIcon from '@mui/icons-material/DownloadForOfflineTwoTone';\r\n\r\nconst backImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| ATTACHMENT CARD ||============================== //\r\n\r\nconst AttachmentCard = ({ title, image }) => {\r\n    const theme = useTheme();\r\n    const backProfile = image && backImage(`./${image}`).default;\r\n\r\n    return (\r\n        <Card sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.dark' : 'grey.100' }}>\r\n            <CardMedia component=\"img\" image={backProfile} title=\"Slider5 image\" />\r\n            <CardContent sx={{ p: 2, pb: '16px !important' }}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs zeroMinWidth>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            component=\"div\"\r\n                            sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <DownloadForOfflineTwoToneIcon sx={{ cursor: 'pointer' }} />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAttachmentCard.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default AttachmentCard;\r\n"]},"metadata":{},"sourceType":"module"}