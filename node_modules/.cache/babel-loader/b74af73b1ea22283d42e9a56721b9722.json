{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/sistema_gsa/newgsa/src/views/ui-elements/advance/UIDialog/SimpleDialog.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, Fragment } from 'react'; // material-ui\n\nimport { Avatar, Button, Card, CardContent, Dialog, DialogTitle, Divider, List, ListItemButton, ListItemAvatar, ListItemText } from '@mui/material'; // assets\n\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true); // alert user data\n\n\nconst emails = [{\n  email: 'username@company.com',\n  avatar: 'user-1.png'\n}, {\n  email: 'user02@company.com',\n  avatar: 'user-2.png'\n}]; // ===============================|| DIALOG ||=============================== //\n\nfunction SimpleDialog({\n  onClose,\n  selectedValue,\n  open\n}) {\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        cursor: 'move'\n      },\n      id: \"draggable-dialog-title\",\n      children: \"User Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          pt: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [emails.map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n              onClick: () => handleListItemClick(item.email),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"User 1\",\n                  src: avatarImage(`./${item.avatar}`).default\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(ListItemButton, {\n            autoFocus: true,\n            onClick: () => handleListItemClick('addAccount'),\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                sx: {\n                  width: 32,\n                  height: 32,\n                  border: '2px solid',\n                  color: 'grey.500',\n                  borderColor: 'grey.500',\n                  bgcolor: 'transparent'\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Add New Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n}; // ===============================|| UI DIALOG - SIMPLE ||=============================== //\n\nexport default function SimpleDialogDemo() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[0].email);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      children: \"Open simple dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleDialogDemo, \"VYepkCsKDbY1ovhPju+Gj6Pvi8o=\");\n\n_c2 = SimpleDialogDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"SimpleDialogDemo\");","map":{"version":3,"sources":["/Users/admin/Documents/sistema_gsa/newgsa/src/views/ui-elements/advance/UIDialog/SimpleDialog.js"],"names":["PropTypes","useState","Fragment","Avatar","Button","Card","CardContent","Dialog","DialogTitle","Divider","List","ListItemButton","ListItemAvatar","ListItemText","AddIcon","avatarImage","require","context","emails","email","avatar","SimpleDialog","onClose","selectedValue","open","handleClose","handleListItemClick","value","cursor","pt","map","item","index","default","width","height","border","color","borderColor","bgcolor","propTypes","func","isRequired","bool","string","SimpleDialogDemo","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItemButton,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\n// assets\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// alert user data\r\nconst emails = [\r\n    {\r\n        email: 'username@company.com',\r\n        avatar: 'user-1.png'\r\n    },\r\n    {\r\n        email: 'user02@company.com',\r\n        avatar: 'user-2.png'\r\n    }\r\n];\r\n\r\n// ===============================|| DIALOG ||=============================== //\r\n\r\nfunction SimpleDialog({ onClose, selectedValue, open }) {\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                User Account\r\n            </DialogTitle>\r\n            <Card>\r\n                <CardContent sx={{ pt: 0 }}>\r\n                    <List>\r\n                        {emails.map((item, index) => (\r\n                            <Fragment key={index}>\r\n                                <ListItemButton onClick={() => handleListItemClick(item.email)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"User 1\" src={avatarImage(`./${item.avatar}`).default} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={item.email} />\r\n                                </ListItemButton>\r\n                                <Divider />\r\n                            </Fragment>\r\n                        ))}\r\n\r\n                        <ListItemButton autoFocus onClick={() => handleListItemClick('addAccount')}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        border: '2px solid',\r\n                                        color: 'grey.500',\r\n                                        borderColor: 'grey.500',\r\n                                        bgcolor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Add New Account\" />\r\n                        </ListItemButton>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired\r\n};\r\n\r\n// ===============================|| UI DIALOG - SIMPLE ||=============================== //\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(emails[0].email);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}