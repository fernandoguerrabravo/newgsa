{"ast":null,"code":"// project imports\nimport { columns, columnsOrder, comments, items, profiles, userStory, userStoryOrder } from './kanban';\nimport { ADD_COLUMN, EDIT_COLUMN, DELETE_COLUMN, UPDATE_COLUMN_ORDER, UPDATE_COLUMN_ITEM_ORDER, DELETE_ITEM, SELECT_ITEM, ADD_ITEM, ADD_ITEM_COMMENT, EDIT_ITEM, ADD_STORY, EDIT_STORY, UPDATE_STORY_ORDER, UPDATE_STORY_ITEM_ORDER, ADD_STORY_COMMENT, DELETE_STORY } from './actions';\nconst initialState = {\n  columns,\n  columnsOrder,\n  comments,\n  items,\n  profiles,\n  selectedItem: false,\n  userStory,\n  userStoryOrder\n};\n\nconst kanbanReducer = (state = initialState, action) => {\n  let newColumn;\n  let currentColumn;\n  let newUserStory;\n  let currentStory;\n  let newItems;\n  let itemIds;\n\n  switch (action.type) {\n    case ADD_COLUMN:\n      return { ...state,\n        columns: [...state.columns, action.payload.column],\n        columnsOrder: [...state.columnsOrder, action.payload.column.id]\n      };\n\n    case UPDATE_COLUMN_ORDER:\n      return { ...state,\n        columnsOrder: action.payload.columnsOrder\n      };\n\n    case EDIT_COLUMN:\n      state.columns.splice(state.columns.findIndex(column => column.id === action.payload.column.id), 1, action.payload.column);\n      return { ...state,\n        columns: state.columns\n      };\n\n    case DELETE_COLUMN:\n      state.columns.splice(state.columns.findIndex(column => column.id === action.payload.columnId), 1);\n      state.columnsOrder.splice(state.columnsOrder.findIndex(columnId => columnId === action.payload.columnId), 1);\n      return { ...state,\n        columns: state.columns,\n        columnsOrder: state.columnsOrder\n      };\n\n    case ADD_ITEM:\n      if (action.payload.columnId !== '0') {\n        newColumn = state.columns.map(column => {\n          if (column.id === action.payload.columnId) {\n            return { ...column,\n              itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\n            };\n          }\n\n          return column;\n        });\n      } else {\n        newColumn = state.columns;\n      }\n\n      if (action.payload.storyId !== '0') {\n        newUserStory = state.userStory.map(story => {\n          if (story.id === action.payload.storyId) {\n            return { ...story,\n              itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\n            };\n          }\n\n          return story;\n        });\n      } else {\n        newUserStory = state.userStory;\n      }\n\n      return { ...state,\n        items: [...state.items, action.payload.item],\n        columns: newColumn,\n        userStory: newUserStory\n      };\n\n    case EDIT_ITEM:\n      state.items.splice(state.items.findIndex(item => item.id === action.payload.item.id), 1, action.payload.item);\n      newUserStory = state.userStory;\n\n      if (action.payload.storyId) {\n        currentStory = state.userStory.filter(story => story.itemIds.filter(itemId => itemId === action.payload.item.id)[0])[0];\n\n        if (currentStory !== undefined && currentStory.id !== action.payload.storyId) {\n          newUserStory = state.userStory.map(story => {\n            if (story.itemIds.filter(itemId => itemId === action.payload.item.id)[0]) {\n              return { ...story,\n                itemIds: story.itemIds.filter(itemId => itemId !== action.payload.item.id)\n              };\n            }\n\n            if (story.id === action.payload.storyId) {\n              return { ...story,\n                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\n              };\n            }\n\n            return story;\n          });\n        }\n\n        if (currentStory === undefined) {\n          newUserStory = state.userStory.map(story => {\n            if (story.id === action.payload.storyId) {\n              return { ...story,\n                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\n              };\n            }\n\n            return story;\n          });\n        }\n      }\n\n      newColumn = state.columns;\n\n      if (action.payload.columnId) {\n        currentColumn = state.columns.filter(column => column.itemIds.filter(itemId => itemId === action.payload.item.id)[0])[0];\n\n        if (currentColumn !== undefined && currentColumn.id !== action.payload.columnId) {\n          newColumn = state.columns.map(column => {\n            if (column.itemIds.filter(itemId => itemId === action.payload.item.id)[0]) {\n              return { ...column,\n                itemIds: column.itemIds.filter(itemId => itemId !== action.payload.item.id)\n              };\n            }\n\n            if (column.id === action.payload.columnId) {\n              return { ...column,\n                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\n              };\n            }\n\n            return column;\n          });\n        }\n\n        if (currentColumn === undefined) {\n          newColumn = state.columns.map(column => {\n            if (column.id === action.payload.columnId) {\n              return { ...column,\n                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\n              };\n            }\n\n            return column;\n          });\n        }\n      }\n\n      return { ...state,\n        items: state.items,\n        columns: newColumn,\n        userStory: newUserStory\n      };\n\n    case UPDATE_COLUMN_ITEM_ORDER:\n      return { ...state,\n        columns: action.payload.columns\n      };\n\n    case SELECT_ITEM:\n      return { ...state,\n        selectedItem: action.payload.selectedItem\n      };\n\n    case ADD_ITEM_COMMENT:\n      newItems = state.items.map(item => {\n        if (item.id === action.payload.itemId) {\n          return { ...item,\n            commentIds: item.commentIds ? [...item.commentIds, action.payload.comment.id] : [action.payload.comment.id]\n          };\n        }\n\n        return item;\n      });\n      return { ...state,\n        items: newItems,\n        comments: [...state.comments, action.payload.comment]\n      };\n\n    case DELETE_ITEM:\n      newColumn = state.columns.map(column => {\n        itemIds = column.itemIds.filter(id => id !== action.payload.itemId);\n        return { ...column,\n          itemIds\n        };\n      });\n      newUserStory = state.userStory.map(story => {\n        itemIds = story.itemIds.filter(id => id !== action.payload.itemId);\n        return { ...story,\n          itemIds\n        };\n      });\n      state.items.splice(state.items.findIndex(item => item.id === action.payload.itemId), 1);\n      return { ...state,\n        items: state.items,\n        columns: newColumn,\n        userStory: newUserStory\n      };\n\n    case ADD_STORY:\n      return { ...state,\n        userStory: [...state.userStory, action.payload.story],\n        userStoryOrder: [...state.userStoryOrder, action.payload.story.id]\n      };\n\n    case EDIT_STORY:\n      state.userStory.splice(state.userStory.findIndex(story => story.id === action.payload.story.id), 1, action.payload.story);\n      return { ...state,\n        userStory: state.userStory\n      };\n\n    case UPDATE_STORY_ORDER:\n      return { ...state,\n        userStoryOrder: action.payload.userStoryOrder\n      };\n\n    case UPDATE_STORY_ITEM_ORDER:\n      return { ...state,\n        userStory: action.payload.userStory\n      };\n\n    case ADD_STORY_COMMENT:\n      newUserStory = state.userStory.map(story => {\n        if (story.id === action.payload.storyId) {\n          return { ...story,\n            commentIds: story.commentIds ? [...story.commentIds, action.payload.comment.id] : [action.payload.comment.id]\n          };\n        }\n\n        return story;\n      });\n      return { ...state,\n        userStory: newUserStory,\n        comments: [...state.comments, action.payload.comment]\n      };\n\n    case DELETE_STORY:\n      state.userStory.splice(state.userStory.findIndex(story => story.id === action.payload.storyId), 1);\n      state.userStoryOrder.splice(state.userStoryOrder.findIndex(storyId => storyId === action.payload.storyId), 1);\n      return { ...state,\n        userStory: state.userStory,\n        userStoryOrder: state.userStoryOrder\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default kanbanReducer;","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/store/kanbanReducer.js"],"names":["columns","columnsOrder","comments","items","profiles","userStory","userStoryOrder","ADD_COLUMN","EDIT_COLUMN","DELETE_COLUMN","UPDATE_COLUMN_ORDER","UPDATE_COLUMN_ITEM_ORDER","DELETE_ITEM","SELECT_ITEM","ADD_ITEM","ADD_ITEM_COMMENT","EDIT_ITEM","ADD_STORY","EDIT_STORY","UPDATE_STORY_ORDER","UPDATE_STORY_ITEM_ORDER","ADD_STORY_COMMENT","DELETE_STORY","initialState","selectedItem","kanbanReducer","state","action","newColumn","currentColumn","newUserStory","currentStory","newItems","itemIds","type","payload","column","id","splice","findIndex","columnId","map","item","storyId","story","filter","itemId","undefined","commentIds","comment"],"mappings":"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","sourcesContent":["// project imports\r\nimport { columns, columnsOrder, comments, items, profiles, userStory, userStoryOrder } from './kanban';\r\nimport {\r\n    ADD_COLUMN,\r\n    EDIT_COLUMN,\r\n    DELETE_COLUMN,\r\n    UPDATE_COLUMN_ORDER,\r\n    UPDATE_COLUMN_ITEM_ORDER,\r\n    DELETE_ITEM,\r\n    SELECT_ITEM,\r\n    ADD_ITEM,\r\n    ADD_ITEM_COMMENT,\r\n    EDIT_ITEM,\r\n    ADD_STORY,\r\n    EDIT_STORY,\r\n    UPDATE_STORY_ORDER,\r\n    UPDATE_STORY_ITEM_ORDER,\r\n    ADD_STORY_COMMENT,\r\n    DELETE_STORY\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    columns,\r\n    columnsOrder,\r\n    comments,\r\n    items,\r\n    profiles,\r\n    selectedItem: false,\r\n    userStory,\r\n    userStoryOrder\r\n};\r\n\r\nconst kanbanReducer = (state = initialState, action) => {\r\n    let newColumn;\r\n    let currentColumn;\r\n    let newUserStory;\r\n    let currentStory;\r\n    let newItems;\r\n    let itemIds;\r\n\r\n    switch (action.type) {\r\n        case ADD_COLUMN:\r\n            return {\r\n                ...state,\r\n                columns: [...state.columns, action.payload.column],\r\n                columnsOrder: [...state.columnsOrder, action.payload.column.id]\r\n            };\r\n        case UPDATE_COLUMN_ORDER:\r\n            return {\r\n                ...state,\r\n                columnsOrder: action.payload.columnsOrder\r\n            };\r\n        case EDIT_COLUMN:\r\n            state.columns.splice(\r\n                state.columns.findIndex((column) => column.id === action.payload.column.id),\r\n                1,\r\n                action.payload.column\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                columns: state.columns\r\n            };\r\n        case DELETE_COLUMN:\r\n            state.columns.splice(\r\n                state.columns.findIndex((column) => column.id === action.payload.columnId),\r\n                1\r\n            );\r\n\r\n            state.columnsOrder.splice(\r\n                state.columnsOrder.findIndex((columnId) => columnId === action.payload.columnId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                columns: state.columns,\r\n                columnsOrder: state.columnsOrder\r\n            };\r\n        case ADD_ITEM:\r\n            if (action.payload.columnId !== '0') {\r\n                newColumn = state.columns.map((column) => {\r\n                    if (column.id === action.payload.columnId) {\r\n                        return {\r\n                            ...column,\r\n                            itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                        };\r\n                    }\r\n                    return column;\r\n                });\r\n            } else {\r\n                newColumn = state.columns;\r\n            }\r\n\r\n            if (action.payload.storyId !== '0') {\r\n                newUserStory = state.userStory.map((story) => {\r\n                    if (story.id === action.payload.storyId) {\r\n                        return { ...story, itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id] };\r\n                    }\r\n                    return story;\r\n                });\r\n            } else {\r\n                newUserStory = state.userStory;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload.item],\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case EDIT_ITEM:\r\n            state.items.splice(\r\n                state.items.findIndex((item) => item.id === action.payload.item.id),\r\n                1,\r\n                action.payload.item\r\n            );\r\n\r\n            newUserStory = state.userStory;\r\n            if (action.payload.storyId) {\r\n                currentStory = state.userStory.filter((story) => story.itemIds.filter((itemId) => itemId === action.payload.item.id)[0])[0];\r\n\r\n                if (currentStory !== undefined && currentStory.id !== action.payload.storyId) {\r\n                    newUserStory = state.userStory.map((story) => {\r\n                        if (story.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds.filter((itemId) => itemId !== action.payload.item.id)\r\n                            };\r\n                        }\r\n                        if (story.id === action.payload.storyId) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return story;\r\n                    });\r\n                }\r\n\r\n                if (currentStory === undefined) {\r\n                    newUserStory = state.userStory.map((story) => {\r\n                        if (story.id === action.payload.storyId) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return story;\r\n                    });\r\n                }\r\n            }\r\n\r\n            newColumn = state.columns;\r\n            if (action.payload.columnId) {\r\n                currentColumn = state.columns.filter(\r\n                    (column) => column.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]\r\n                )[0];\r\n                if (currentColumn !== undefined && currentColumn.id !== action.payload.columnId) {\r\n                    newColumn = state.columns.map((column) => {\r\n                        if (column.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds.filter((itemId) => itemId !== action.payload.item.id)\r\n                            };\r\n                        }\r\n                        if (column.id === action.payload.columnId) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return column;\r\n                    });\r\n                }\r\n\r\n                if (currentColumn === undefined) {\r\n                    newColumn = state.columns.map((column) => {\r\n                        if (column.id === action.payload.columnId) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return column;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items,\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case UPDATE_COLUMN_ITEM_ORDER:\r\n            return {\r\n                ...state,\r\n                columns: action.payload.columns\r\n            };\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                selectedItem: action.payload.selectedItem\r\n            };\r\n        case ADD_ITEM_COMMENT:\r\n            newItems = state.items.map((item) => {\r\n                if (item.id === action.payload.itemId) {\r\n                    return {\r\n                        ...item,\r\n                        commentIds: item.commentIds ? [...item.commentIds, action.payload.comment.id] : [action.payload.comment.id]\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                comments: [...state.comments, action.payload.comment]\r\n            };\r\n        case DELETE_ITEM:\r\n            newColumn = state.columns.map((column) => {\r\n                itemIds = column.itemIds.filter((id) => id !== action.payload.itemId);\r\n                return {\r\n                    ...column,\r\n                    itemIds\r\n                };\r\n            });\r\n\r\n            newUserStory = state.userStory.map((story) => {\r\n                itemIds = story.itemIds.filter((id) => id !== action.payload.itemId);\r\n                return {\r\n                    ...story,\r\n                    itemIds\r\n                };\r\n            });\r\n\r\n            state.items.splice(\r\n                state.items.findIndex((item) => item.id === action.payload.itemId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items,\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case ADD_STORY:\r\n            return {\r\n                ...state,\r\n                userStory: [...state.userStory, action.payload.story],\r\n                userStoryOrder: [...state.userStoryOrder, action.payload.story.id]\r\n            };\r\n        case EDIT_STORY:\r\n            state.userStory.splice(\r\n                state.userStory.findIndex((story) => story.id === action.payload.story.id),\r\n                1,\r\n                action.payload.story\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                userStory: state.userStory\r\n            };\r\n        case UPDATE_STORY_ORDER:\r\n            return {\r\n                ...state,\r\n                userStoryOrder: action.payload.userStoryOrder\r\n            };\r\n        case UPDATE_STORY_ITEM_ORDER:\r\n            return {\r\n                ...state,\r\n                userStory: action.payload.userStory\r\n            };\r\n        case ADD_STORY_COMMENT:\r\n            newUserStory = state.userStory.map((story) => {\r\n                if (story.id === action.payload.storyId) {\r\n                    return {\r\n                        ...story,\r\n                        commentIds: story.commentIds ? [...story.commentIds, action.payload.comment.id] : [action.payload.comment.id]\r\n                    };\r\n                }\r\n                return story;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userStory: newUserStory,\r\n                comments: [...state.comments, action.payload.comment]\r\n            };\r\n        case DELETE_STORY:\r\n            state.userStory.splice(\r\n                state.userStory.findIndex((story) => story.id === action.payload.storyId),\r\n                1\r\n            );\r\n\r\n            state.userStoryOrder.splice(\r\n                state.userStoryOrder.findIndex((storyId) => storyId === action.payload.storyId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                userStory: state.userStory,\r\n                userStoryOrder: state.userStoryOrder\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default kanbanReducer;\r\n"]},"metadata":{},"sourceType":"module"}