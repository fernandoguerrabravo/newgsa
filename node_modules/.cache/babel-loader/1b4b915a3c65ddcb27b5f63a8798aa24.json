{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/plugins/Modal/SimpleModal.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef, useState } from 'react'; // material-ui\n\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard'; // assets\n\nimport CloseIcon from '@mui/icons-material/Close'; // generate random\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n} // modal position\n\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst Body = /*#__PURE__*/forwardRef(_c = ({\n  modalStyle,\n  handleClose\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  ref: ref,\n  tabIndex: -1,\n  children: /*#__PURE__*/_jsxDEV(MainCard, {\n    style: modalStyle,\n    sx: {\n      position: 'absolute',\n      width: {\n        xs: 280,\n        lg: 450\n      },\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    title: \"Title\",\n    content: false,\n    secondary: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClose,\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 2\n        },\n        children: \"Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in mollit irure enim tempor in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(SimpleModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this));\n_c2 = Body;\nBody.propTypes = {\n  modalStyle: PropTypes.object,\n  handleClose: PropTypes.func\n}; // ==============================|| SIMPLE MODAL ||============================== //\n\nexport default function SimpleModal() {\n  _s();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      type: \"button\",\n      onClick: handleOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Body, {\n        modalStyle: modalStyle,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleModal, \"xLyVWyPBb1xBltXuCQgwEygSs7M=\");\n\n_c3 = SimpleModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Body$forwardRef\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"SimpleModal\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/plugins/Modal/SimpleModal.js"],"names":["PropTypes","forwardRef","useState","Button","CardContent","CardActions","Divider","Grid","IconButton","Modal","Typography","MainCard","CloseIcon","rand","Math","round","random","getModalStyle","top","left","transform","Body","modalStyle","handleClose","ref","position","width","xs","lg","mt","propTypes","object","func","SimpleModal","open","setOpen","handleOpen"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoDC,IAApD,EAA0DC,UAA1D,EAAsEC,KAAtE,EAA6EC,UAA7E,QAA+F,eAA/F,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CAEA;;;;AACA,SAASC,IAAT,GAAgB;AACZ,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACH,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACrB,QAAMC,GAAG,GAAG,KAAKL,IAAI,EAArB;AACA,QAAMM,IAAI,GAAG,KAAKN,IAAI,EAAtB;AAEA,SAAO;AACHK,IAAAA,GAAG,EAAG,GAAEA,GAAI,GADT;AAEHC,IAAAA,IAAI,EAAG,GAAEA,IAAK,GAFX;AAGHC,IAAAA,SAAS,EAAG,cAAaF,GAAI,OAAMC,IAAK;AAHrC,GAAP;AAKH;;AAED,MAAME,IAAI,gBAAGpB,UAAU,MAAC,CAAC;AAAEqB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,EAA8BC,GAA9B,kBACpB;AAAK,EAAA,GAAG,EAAEA,GAAV;AAAe,EAAA,QAAQ,EAAE,CAAC,CAA1B;AAAA,yBAKI,QAAC,QAAD;AACI,IAAA,KAAK,EAAEF,UADX;AAEI,IAAA,EAAE,EAAE;AACAG,MAAAA,QAAQ,EAAE,UADV;AAEAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE;AAAf,OAFP;AAGAV,MAAAA,GAAG,EAAE,KAHL;AAIAC,MAAAA,IAAI,EAAE,KAJN;AAKAC,MAAAA,SAAS,EAAE;AALX,KAFR;AASI,IAAA,KAAK,EAAC,OATV;AAUI,IAAA,OAAO,EAAE,KAVb;AAWI,IAAA,SAAS,eACL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEG,WAArB;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,4BAiBI,QAAC,WAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,EAAE,EAAE;AAAEM,UAAAA,EAAE,EAAE;AAAN,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAwBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAyBI,QAAC,WAAD;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,QADmB,CAAvB;MAAMR,I;AAsCNA,IAAI,CAACS,SAAL,GAAiB;AACbR,EAAAA,UAAU,EAAEtB,SAAS,CAAC+B,MADT;AAEbR,EAAAA,WAAW,EAAEvB,SAAS,CAACgC;AAFV,CAAjB,C,CAKA;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC;AACA,QAAM,CAACX,UAAD,IAAepB,QAAQ,CAACe,aAAD,CAA7B;AAEA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMkC,UAAU,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMZ,WAAW,GAAG,MAAM;AACtBY,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,UAA/B;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAA0C,MAAA,OAAO,EAAEC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,OAAO,EAAEX,WAA5B;AAAyC,yBAAgB,oBAAzD;AAA8E,0BAAiB,0BAA/F;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,UAAU,EAAED,UAAlB;AAA8B,QAAA,WAAW,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAvBuBU,W;;MAAAA,W","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// generate random\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\n// modal position\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst Body = forwardRef(({ modalStyle, handleClose }, ref) => (\r\n    <div ref={ref} tabIndex={-1}>\r\n        {/**\r\n         * style={modalStyle}\r\n         * Property 'style' does not exist on type 'IntrinsicAttributes & MainCardProps & RefAttributes<HTMLDivElement>\r\n         */}\r\n        <MainCard\r\n            style={modalStyle}\r\n            sx={{\r\n                position: 'absolute',\r\n                width: { xs: 280, lg: 450 },\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            title=\"Title\"\r\n            content={false}\r\n            secondary={\r\n                <IconButton onClick={handleClose} size=\"large\">\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            <CardContent>\r\n                <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\r\n                    mollit irure enim tempor in.\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <SimpleModal />\r\n            </CardActions>\r\n        </MainCard>\r\n    </div>\r\n));\r\n\r\nBody.propTypes = {\r\n    modalStyle: PropTypes.object,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\n// ==============================|| SIMPLE MODAL ||============================== //\r\n\r\nexport default function SimpleModal() {\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"flex-end\">\r\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\r\n                Open Modal\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\r\n            </Modal>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}