{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/pages/authentication/auth-forms/AuthResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@mui/material'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n// import useAuth from 'hooks/useAuth';\n\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength'; // assets\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'; // ========================|| FIREBASE - RESET PASSWORD ||======================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthResetPassword = ({ ...others\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [strength, setStrength] = useState(0);\n  const [level, setLevel] = useState(); // const { firebaseEmailPasswordSignIn } = useAuth();\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const changePassword = value => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword('123456');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: 'info@codedthemes.com',\n      password: '123456',\n      confirmPassword: '123456',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      password: Yup.string().max(255).required('Password is required'),\n      confirmPassword: Yup.string().when('password', {\n        is: val => !!(val && val.length > 0),\n        then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\n      })\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // await firebaseEmailPasswordSignIn(values.email, values.password);\n        if (scriptedRef.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...others,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.password && errors.password),\n        sx: { ...theme.typography.customInput\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-password-reset\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-password-reset\",\n          type: showPassword ? 'text' : 'password',\n          value: values.password,\n          name: \"password\",\n          onBlur: handleBlur,\n          onChange: e => {\n            handleChange(e);\n            changePassword(e.target.value);\n          },\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              size: \"large\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 57\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this),\n          inputProps: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-reset\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this), strength !== 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                style: {\n                  backgroundColor: level === null || level === void 0 ? void 0 : level.color\n                },\n                sx: {\n                  width: 85,\n                  height: 8,\n                  borderRadius: '7px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                fontSize: \"0.75rem\",\n                children: level === null || level === void 0 ? void 0 : level.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.confirmPassword && errors.confirmPassword),\n        sx: { ...theme.typography.customInput\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-confirm-password\",\n          type: \"password\",\n          value: values.confirmPassword,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          inputProps: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), touched.confirmPassword && errors.confirmPassword && /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-confirm-password\",\n          children: [' ', errors.confirmPassword, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthResetPassword, \"Gt0MXZ1lTEMUns28Dbe1JAbdjhg=\", false, function () {\n  return [useTheme, useScriptRef];\n});\n\n_c = AuthResetPassword;\nexport default AuthResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthResetPassword\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/pages/authentication/auth-forms/AuthResetPassword.js"],"names":["useState","useEffect","useTheme","Box","Button","FormControl","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Typography","Yup","Formik","useScriptRef","AnimateButton","strengthColor","strengthIndicator","Visibility","VisibilityOff","AuthResetPassword","others","theme","scriptedRef","showPassword","setShowPassword","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","temp","email","password","confirmPassword","submit","object","shape","string","max","required","when","is","val","length","then","oneOf","ref","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","typography","customInput","e","target","mb","backgroundColor","color","width","height","borderRadius","label","mt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\n// import useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\r\n\r\nconst AuthResetPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    // const { firebaseEmailPasswordSignIn } = useAuth();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: 'info@codedthemes.com',\r\n                password: '123456',\r\n                confirmPassword: '123456',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                password: Yup.string().max(255).required('Password is required'),\r\n                confirmPassword: Yup.string().when('password', {\r\n                    is: (val) => !!(val && val.length > 0),\r\n                    then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\r\n                })\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    // await firebaseEmailPasswordSignIn(values.email, values.password);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-reset\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-reset\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                                handleChange(e);\r\n                                changePassword(e.target.value);\r\n                            }}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                        />\r\n                    </FormControl>\r\n                    {touched.password && errors.password && (\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText error id=\"standard-weight-helper-text-reset\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                    )}\r\n                    {strength !== 0 && (\r\n                        <FormControl fullWidth>\r\n                            <Box sx={{ mb: 2 }}>\r\n                                <Grid container spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Box\r\n                                            style={{ backgroundColor: level?.color }}\r\n                                            sx={{\r\n                                                width: 85,\r\n                                                height: 8,\r\n                                                borderRadius: '7px'\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                            {level?.label}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </FormControl>\r\n                    )}\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-confirm-password\"\r\n                            type=\"password\"\r\n                            value={values.confirmPassword}\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm Password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                    </FormControl>\r\n\r\n                    {touched.confirmPassword && errors.confirmPassword && (\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\r\n                                {' '}\r\n                                {errors.confirmPassword}{' '}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                    )}\r\n\r\n                    {errors.submit && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 3\r\n                            }}\r\n                        >\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box\r\n                        sx={{\r\n                            mt: 1\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n                            <Button\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Reset Password\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AuthResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}