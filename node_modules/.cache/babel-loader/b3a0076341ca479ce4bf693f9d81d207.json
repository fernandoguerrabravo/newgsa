{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/SimpleDialog.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, Fragment } from 'react'; // material-ui\n\nimport { Avatar, Button, Card, CardContent, Dialog, DialogTitle, Divider, List, ListItemButton, ListItemAvatar, ListItemText } from '@mui/material'; // assets\n\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true); // alert user data\n\n\nconst emails = [{\n  email: 'username@company.com',\n  avatar: 'user-1.png'\n}, {\n  email: 'user02@company.com',\n  avatar: 'user-2.png'\n}]; // ===============================|| DIALOG ||=============================== //\n\nfunction SimpleDialog({\n  onClose,\n  state,\n  open\n}) {\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        cursor: 'move'\n      },\n      id: \"draggable-dialog-title\",\n      children: \"User Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          pt: 0\n        },\n        children: \"state.rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n}; // ===============================|| UI DIALOG - SIMPLE ||=============================== //\n\nexport default function SimpleDialogDemo(codigo) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[0].email);\n  const [state, setstate] = useState({\n    rank: \"\",\n    title: \"\",\n    imagen: \"\",\n    cod: codigo.codigo,\n    loading: false,\n    dimensions: []\n  }); // Funcion aque va a rescatar la informacion de la API\n\n  const getDetails = async () => {\n    setstate({ ...state,\n      loading: true\n    });\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const raw = JSON.stringify({\n      asin: codigo.codigo\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw\n    };\n    const url = `https://kne6zd76af.execute-api.us-east-1.amazonaws.com/dev/getdetails`;\n    const resp = await fetch(url, requestOptions);\n    const detail = await resp.json();\n    setstate(detail); // console.log(\"perro:\", detail)\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    getDetails();\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: handleClickOpen,\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: state,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleDialogDemo, \"zNuebehl0t8HKWMjox37izhFvuU=\");\n\n_c2 = SimpleDialogDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"SimpleDialogDemo\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/SimpleDialog.js"],"names":["PropTypes","useState","Fragment","Avatar","Button","Card","CardContent","Dialog","DialogTitle","Divider","List","ListItemButton","ListItemAvatar","ListItemText","AddIcon","avatarImage","require","context","emails","email","avatar","SimpleDialog","onClose","state","open","handleClose","handleListItemClick","value","cursor","pt","propTypes","func","isRequired","bool","selectedValue","string","SimpleDialogDemo","codigo","setOpen","setSelectedValue","setstate","rank","title","imagen","cod","loading","dimensions","getDetails","myHeaders","Headers","append","raw","JSON","stringify","asin","requestOptions","method","headers","body","url","resp","fetch","detail","json","handleClickOpen"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItemButton,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\n// assets\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// alert user data\r\nconst emails = [\r\n    {\r\n        email: 'username@company.com',\r\n        avatar: 'user-1.png'\r\n    },\r\n    {\r\n        email: 'user02@company.com',\r\n        avatar: 'user-2.png'\r\n    }\r\n];\r\n\r\n// ===============================|| DIALOG ||=============================== //\r\n\r\nfunction SimpleDialog({ onClose, state, open }) {\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                User Account\r\n            </DialogTitle>\r\n            <Card>\r\n                <CardContent sx={{ pt: 0 }}>\r\n                  state.rank\r\n                </CardContent>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired\r\n};\r\n\r\n// ===============================|| UI DIALOG - SIMPLE ||=============================== //\r\n\r\nexport default function SimpleDialogDemo(codigo) {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(emails[0].email);\r\n    \r\n    const [state, setstate] = useState({\r\n        rank: \"\",\r\n        title: \"\",\r\n        imagen: \"\",\r\n        cod: codigo.codigo,\r\n        loading: false,\r\n        dimensions: [],\r\n      });\r\n\r\n     // Funcion aque va a rescatar la informacion de la API\r\n  const getDetails = async () => {\r\n    setstate({\r\n      ...state,\r\n      loading: true,\r\n    });\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify({\r\n      asin: codigo.codigo,\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n\r\n    const url = `https://kne6zd76af.execute-api.us-east-1.amazonaws.com/dev/getdetails`;\r\n    const resp = await fetch(url, requestOptions);\r\n    const detail = await resp.json();\r\n    setstate(detail);\r\n    // console.log(\"perro:\", detail)\r\n  };\r\n\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        getDetails();\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n                Details\r\n            </Button>\r\n            <SimpleDialog selectedValue={state} open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}