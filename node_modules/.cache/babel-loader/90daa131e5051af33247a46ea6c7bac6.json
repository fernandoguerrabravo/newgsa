{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/profile/components/SellerListTable.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unused-vars */\nimport useGetSeller from \"../hooks/UseGetSeller\";\nimport { React, useEffect, useState } from \"react\"; // import { useTheme } from \"@mui/material/styles\";\n\nimport { Button, Paper } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SellerListTable({\n  idcliente,\n  oculto,\n  setoculto\n}) {\n  _s();\n\n  const {\n    data\n  } = useGetSeller({\n    idcliente\n  });\n  const datafinal = data[0]; //console.log(\"pico del data\", datafinal)\n\n  const [botoncito, setbotoncito] = useState({\n    activo: true\n  });\n  useEffect(() => {\n    setbotoncito(datafinal);\n  }, [botoncito, datafinal]);\n  console.log(\"botonncito\", botoncito);\n  const columnas = [{\n    name: \"Seller Name\",\n    selector: row => row.legalname\n  }, {\n    name: \"Dirección\",\n    selector: row => row.legaladdress.numero + ' ' + row.legaladdress.calle + ' ' + row.legaladdress.barrio\n  }, {\n    name: \"Ciudad, Estado\",\n    selector: row => row.legaladdress.ciudad + ' , ' + row.legaladdress.estado\n  }, {\n    name: \"Zip Code\",\n    selector: row => row.legaladdress.zip\n  }, {\n    name: \"Pais\",\n    selector: row => row.legaladdress.pais\n  }, {\n    name: \"Telefono\",\n    selector: row => '+52' + row.telefono\n  }];\n\n  const nuevoseller = () => {\n    setoculto({ ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: true,\n      hiddenupdate: false\n    });\n  };\n\n  const volver = () => {\n    setoculto({ ...oculto,\n      hiddentable: true,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: false\n    });\n  };\n\n  const editar = () => {\n    setoculto({ ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [botoncito ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: editar,\n      children: \"Editar Perfil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this) : null, botoncito ? null : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: nuevoseller,\n      children: \"Configurar Perfil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }, this), oculto.hiddenboton ? /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(DataTable, {\n      striped: true,\n      columns: columnas,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SellerListTable, \"sVMWrm6IomB9Tb1XQnH2AMPPxxY=\", false, function () {\n  return [useGetSeller];\n});\n\n_c = SellerListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerListTable\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/profile/components/SellerListTable.jsx"],"names":["useGetSeller","React","useEffect","useState","Button","Paper","DataTable","SellerListTable","idcliente","oculto","setoculto","data","datafinal","botoncito","setbotoncito","activo","console","log","columnas","name","selector","row","legalname","legaladdress","numero","calle","barrio","ciudad","estado","zip","pais","telefono","nuevoseller","hiddentable","hiddenboton","hiddenperfilform","hiddenupdate","volver","editar"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\nimport  useGetSeller  from \"../hooks/UseGetSeller\";\nimport {React, useEffect, useState} from \"react\";\n// import { useTheme } from \"@mui/material/styles\";\nimport { Button, Paper } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\n\n\nexport default function SellerListTable({idcliente, oculto, setoculto}) {\n  \nconst { data } = useGetSeller({idcliente});\nconst datafinal = data[0]\n\n//console.log(\"pico del data\", datafinal)\n\nconst [botoncito, setbotoncito] =  useState(\n  {\n    activo: true\n  }\n);\n\n\n useEffect( () => {\n\n    setbotoncito(datafinal);\n\n  },[botoncito, datafinal])  \n  \n  console.log(\"botonncito\", botoncito)\n\n  const columnas = [\n    {\n      name: \"Seller Name\",\n      selector: (row) => row.legalname\n    },\n    {\n      name: \"Dirección\",\n      selector: (row) => row.legaladdress.numero + ' ' + row.legaladdress.calle + ' ' + row.legaladdress.barrio\n       \n    },\n    {\n      name: \"Ciudad, Estado\",\n      selector: (row) => row.legaladdress.ciudad + ' , ' + row.legaladdress.estado\n    },\n    {\n      name: \"Zip Code\",\n      selector: (row) => row.legaladdress.zip\n    },\n    {\n      name: \"Pais\",\n      selector: (row) => row.legaladdress.pais\n    },\n\n    {\n      name: \"Telefono\",\n      selector: (row) => '+52' + row.telefono,\n    },\n  ];\n\n  const nuevoseller = () => {\n    setoculto({\n      ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: true,\n      hiddenupdate: false,\n    });\n  };\n\n  const volver = () => {\n    setoculto({\n      ...oculto,\n      hiddentable: true,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: false,\n    });\n  };\n\n  const editar = () => {\n    setoculto({\n      ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: true,\n    });\n  };\n\n  return (\n    <>\n     { botoncito ? (<Button onClick={editar} >Editar Perfil</Button>) : null }\n     { botoncito ? null : (<Button onClick={nuevoseller}>Configurar Perfil</Button>)}\n     { oculto.hiddenboton ?  (<Button >Volver</Button>) : null}\n\n     <DataTable striped  columns={columnas} data={data} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}