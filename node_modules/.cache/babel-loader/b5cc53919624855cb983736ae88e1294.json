{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/forms-wizard/ValidationWizard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { Button, Step, Stepper, StepLabel, Stack, Typography } from '@mui/material'; // project imports\n\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // step options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\n\nfunction getStepContent(step, handleNext, handleBack, setErrorIndex, shippingData, setShippingData, paymentData, setPaymentData) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(AddressForm, {\n        handleNext: handleNext,\n        setErrorIndex: setErrorIndex,\n        shippingData: shippingData,\n        setShippingData: setShippingData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(PaymentForm, {\n        handleNext: handleNext,\n        handleBack: handleBack,\n        setErrorIndex: setErrorIndex,\n        paymentData: paymentData,\n        setPaymentData: setPaymentData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Review, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n\n    default:\n      throw new Error('Unknown step');\n  }\n} // ==============================|| FORMS WIZARD - BASIC ||============================== //\n\n\nconst ValidationWizard = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const [paymentData, setPaymentData] = useState({});\n  const [errorIndex, setErrorIndex] = useState(null);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    setErrorIndex(null);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Validation\",\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      sx: {\n        pt: 3,\n        pb: 5\n      },\n      children: steps.map((label, index) => {\n        const labelProps = {};\n\n        if (index === errorIndex) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this);\n          labelProps.error = true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Thank you for your order.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Your order number is #2001539. We have emailed your order confirmation, and will send you an update when your order has shipped.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => {\n                setShippingData({});\n                setPaymentData({});\n                setActiveStep(0);\n              },\n              sx: {\n                my: 3,\n                ml: 1\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [getStepContent(activeStep, handleNext, handleBack, setErrorIndex, shippingData, setShippingData, paymentData, setPaymentData), activeStep === steps.length - 1 && /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: activeStep !== 0 ? 'space-between' : 'flex-end',\n          children: [activeStep !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleBack,\n            sx: {\n              my: 3,\n              ml: 1\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleNext,\n              sx: {\n                my: 3,\n                ml: 1\n              },\n              children: activeStep === steps.length - 1 ? 'Place order' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ValidationWizard, \"5FWtbqc6pDms4SRq379aUcJIOzc=\");\n\n_c = ValidationWizard;\nexport default ValidationWizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationWizard\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/forms-wizard/ValidationWizard/index.js"],"names":["useState","Button","Step","Stepper","StepLabel","Stack","Typography","AddressForm","PaymentForm","Review","MainCard","AnimateButton","steps","getStepContent","step","handleNext","handleBack","setErrorIndex","shippingData","setShippingData","paymentData","setPaymentData","Error","ValidationWizard","activeStep","setActiveStep","errorIndex","pt","pb","map","label","index","labelProps","optional","error","length","my","ml"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Step, Stepper, StepLabel, Stack, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// step options\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step, handleNext, handleBack, setErrorIndex, shippingData, setShippingData, paymentData, setPaymentData) {\r\n    switch (step) {\r\n        case 0:\r\n            return (\r\n                <AddressForm\r\n                    handleNext={handleNext}\r\n                    setErrorIndex={setErrorIndex}\r\n                    shippingData={shippingData}\r\n                    setShippingData={setShippingData}\r\n                />\r\n            );\r\n        case 1:\r\n            return (\r\n                <PaymentForm\r\n                    handleNext={handleNext}\r\n                    handleBack={handleBack}\r\n                    setErrorIndex={setErrorIndex}\r\n                    paymentData={paymentData}\r\n                    setPaymentData={setPaymentData}\r\n                />\r\n            );\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\n// ==============================|| FORMS WIZARD - BASIC ||============================== //\r\n\r\nconst ValidationWizard = () => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [paymentData, setPaymentData] = useState({});\r\n    const [errorIndex, setErrorIndex] = useState(null);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n        setErrorIndex(null);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Validation\">\r\n            <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                {steps.map((label, index) => {\r\n                    const labelProps = {};\r\n\r\n                    if (index === errorIndex) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\" color=\"error\">\r\n                                Error\r\n                            </Typography>\r\n                        );\r\n\r\n                        labelProps.error = true;\r\n                    }\r\n\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                    <>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            Your order number is #2001539. We have emailed your order confirmation, and will send you an update when your\r\n                            order has shipped.\r\n                        </Typography>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"error\"\r\n                                    onClick={() => {\r\n                                        setShippingData({});\r\n                                        setPaymentData({});\r\n                                        setActiveStep(0);\r\n                                    }}\r\n                                    sx={{ my: 3, ml: 1 }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {getStepContent(\r\n                            activeStep,\r\n                            handleNext,\r\n                            handleBack,\r\n                            setErrorIndex,\r\n                            shippingData,\r\n                            setShippingData,\r\n                            paymentData,\r\n                            setPaymentData\r\n                        )}\r\n                        {activeStep === steps.length - 1 && (\r\n                            <Stack direction=\"row\" justifyContent={activeStep !== 0 ? 'space-between' : 'flex-end'}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <AnimateButton>\r\n                                    <Button variant=\"contained\" onClick={handleNext} sx={{ my: 3, ml: 1 }}>\r\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                    </Button>\r\n                                </AnimateButton>\r\n                            </Stack>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ValidationWizard;\r\n"]},"metadata":{},"sourceType":"module"}