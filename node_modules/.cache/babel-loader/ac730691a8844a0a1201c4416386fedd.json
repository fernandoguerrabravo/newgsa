{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/ui-elements/advance/UIToggleButton/ToggleButtonNotEmpty.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material'; // assets\n\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeftTwoTone';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenterTwoTone';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRightTwoTone';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustifyTwoTone';\nimport LaptopIcon from '@mui/icons-material/LaptopTwoTone';\nimport TvIcon from '@mui/icons-material/TvTwoTone';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroidTwoTone'; // ============================|| UI TOGGLE BUTTON - NO EMPTY ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtonNotEmpty() {\n  _s();\n\n  const theme = useTheme();\n  const [formats, setFormats] = useState(() => ['phone']);\n\n  const handleFormat = (event, newFormats) => {\n    if (newFormats.length) {\n      setFormats(newFormats);\n    }\n  };\n\n  const [alignment, setAlignment] = useState('left');\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: alignment,\n          exclusive: true,\n          onChange: handleAlignment,\n          \"aria-label\": \"text alignment\",\n          sx: {\n            color: theme.palette.success.dark,\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\n          },\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"left\",\n            \"aria-label\": \"left aligned\",\n            children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"center\",\n            \"aria-label\": \"centered\",\n            children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"right\",\n            \"aria-label\": \"right aligned\",\n            children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"justify\",\n            \"aria-label\": \"justified\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: formats,\n          onChange: handleFormat,\n          \"aria-label\": \"device\",\n          sx: {\n            color: theme.palette.warning.dark,\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\n          },\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"laptop\",\n            \"aria-label\": \"laptop\",\n            children: /*#__PURE__*/_jsxDEV(LaptopIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"tv\",\n            \"aria-label\": \"tv\",\n            children: /*#__PURE__*/_jsxDEV(TvIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"phone\",\n            \"aria-label\": \"phone\",\n            children: /*#__PURE__*/_jsxDEV(PhoneAndroidIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToggleButtonNotEmpty, \"7XOKgh8UV2pTO6n1V0Ol2NalzMw=\", false, function () {\n  return [useTheme];\n});\n\n_c = ToggleButtonNotEmpty;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtonNotEmpty\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/ui-elements/advance/UIToggleButton/ToggleButtonNotEmpty.js"],"names":["useState","useTheme","Grid","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","LaptopIcon","TvIcon","PhoneAndroidIcon","ToggleButtonNotEmpty","theme","formats","setFormats","handleFormat","event","newFormats","length","alignment","setAlignment","handleAlignment","newAlignment","color","palette","success","dark","bgcolor","mode","primary","light","warning"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeftTwoTone';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenterTwoTone';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRightTwoTone';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustifyTwoTone';\r\nimport LaptopIcon from '@mui/icons-material/LaptopTwoTone';\r\nimport TvIcon from '@mui/icons-material/TvTwoTone';\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroidTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - NO EMPTY ||============================ //\r\n\r\nexport default function ToggleButtonNotEmpty() {\r\n    const theme = useTheme();\r\n\r\n    const [formats, setFormats] = useState(() => ['phone']);\r\n    const handleFormat = (event, newFormats) => {\r\n        if (newFormats.length) {\r\n            setFormats(newFormats);\r\n        }\r\n    };\r\n\r\n    const [alignment, setAlignment] = useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n                <div>\r\n                    <ToggleButtonGroup\r\n                        value={alignment}\r\n                        exclusive\r\n                        onChange={handleAlignment}\r\n                        aria-label=\"text alignment\"\r\n                        sx={{\r\n                            color: theme.palette.success.dark,\r\n                            bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\r\n                        }}\r\n                    >\r\n                        <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                            <FormatAlignLeftIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                            <FormatAlignCenterIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                            <FormatAlignRightIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                            <FormatAlignJustifyIcon />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <div>\r\n                    <ToggleButtonGroup\r\n                        value={formats}\r\n                        onChange={handleFormat}\r\n                        aria-label=\"device\"\r\n                        sx={{\r\n                            color: theme.palette.warning.dark,\r\n                            bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light\r\n                        }}\r\n                    >\r\n                        <ToggleButton value=\"laptop\" aria-label=\"laptop\">\r\n                            <LaptopIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"tv\" aria-label=\"tv\">\r\n                            <TvIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"phone\" aria-label=\"phone\">\r\n                            <PhoneAndroidIcon />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}