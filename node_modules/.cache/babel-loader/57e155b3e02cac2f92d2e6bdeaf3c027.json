{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/htsTax/components/HtsGrid.js\";\nimport React, { useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { green, red, blue } from '@mui/material/colors';\nimport UseFetchHts from '../hooks/UseFetchHts'; //import { HtsResultList } from './HtsResultList';\n\nimport { UseFetchHtsCategory } from '../hooks/UseFetchHtsCategory';\nimport { HtsGetListCategories } from './HtsGetListCategories';\nimport HtsHeader from './HtsHeader'; //import HtsGetListHts from './HtsGetListHts';\n\nimport UseFetchChina from '../hooks/USeFetchChina';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HtsGrid = ({\n  encabezado,\n  setencabezado\n}) => {\n  const {\n    data,\n    loading,\n    finales\n  } = UseFetchHts(encabezado.hts);\n  const {\n    categorias\n  } = UseFetchHtsCategory(encabezado.hts);\n  const htschinos = UseFetchChina(encabezado.hts);\n  return (\n    /*#__PURE__*/\n    // Aqui tengo las dos columnas que vamos a renderizar //\n    // Primera Columna Resumen de la Solicitud y Muestra los TAXES\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(HtsHeader, {\n            event: encabezado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Product Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(HtsGetListCategories, {\n                event: categorias\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Suggested HTS Code\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 10\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_c = HtsGrid;\nexport default HtsGrid;\n/*\n{\n    data.map(img => (\n        <HtsResultList\n            key={img.htsno}\n            {...img}\n        />\n    ))\n} */\n\n/*\n   <TableBody>\n\n                        {\n                            data.map(img => (\n                                <HtsResultList\n                                    key={img.hts}\n                                    {...img}\n                                />\n                            ))\n                        }\n                    </TableBody> */\n\n/*              <TableBody>\n\n              {\n                  data.map(img => (\n                      <HtsResultList\n                          key={img.htsno}\n                          {...img}\n                      />\n                  ))\n              }\n          </TableBody> */\n\nvar _c;\n\n$RefreshReg$(_c, \"HtsGrid\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/htsTax/components/HtsGrid.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Grid","green","red","blue","UseFetchHts","UseFetchHtsCategory","HtsGetListCategories","HtsHeader","UseFetchChina","HtsGrid","encabezado","setencabezado","data","loading","finales","hts","categorias","htschinos"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { green, red, blue } from '@mui/material/colors';\nimport UseFetchHts from '../hooks/UseFetchHts';\n//import { HtsResultList } from './HtsResultList';\nimport { UseFetchHtsCategory } from '../hooks/UseFetchHtsCategory';\nimport { HtsGetListCategories } from './HtsGetListCategories';\nimport HtsHeader from './HtsHeader';\n//import HtsGetListHts from './HtsGetListHts';\nimport UseFetchChina from '../hooks/USeFetchChina';\n\n\n\nconst HtsGrid = ({ encabezado, setencabezado }) => {\n\tconst { data, loading, finales } = UseFetchHts(encabezado.hts);\n\tconst { categorias } = UseFetchHtsCategory(encabezado.hts);\n\tconst htschinos = UseFetchChina(encabezado.hts);\n\n\t\n\n\treturn (\n\t\t// Aqui tengo las dos columnas que vamos a renderizar //\n\t\t// Primera Columna Resumen de la Solicitud y Muestra los TAXES\n\t\t<>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<HtsHeader event={encabezado} />\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table  aria-label=\"simple table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<h3>Product Category</h3>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{  <HtsGetListCategories event={categorias} /> }\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<Paper>\n\t\t\t\t\t{ /* <HtsGetListHts\n\t\t\t\t\t\thtschino={htschinos}\n\t\t\t\t\t\teventos={finales}\n\t\t\t\t\t\tcategorias={categorias}\n\t\t\t\t\t\tencabezado={encabezado}\n\t\t\t\t\t/> */}\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t\t<Table  aria-label=\"simple table\">\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<h4>Suggested HTS Code</h4>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{ /* data.map(img => (\n\t\t\t\t\t\t\t\t\t<HtsResultList key={img.htsno} {...img} />\n\t\t\t\t\t\t\t\t)) */}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default HtsGrid;\n\n/*\n{\n    data.map(img => (\n        <HtsResultList\n            key={img.htsno}\n            {...img}\n        />\n    ))\n} */\n/*\n   <TableBody>\n\n                        {\n                            data.map(img => (\n                                <HtsResultList\n                                    key={img.hts}\n                                    {...img}\n                                />\n                            ))\n                        }\n                    </TableBody> */\n\n/*              <TableBody>\n\n              {\n                  data.map(img => (\n                      <HtsResultList\n                          key={img.htsno}\n                          {...img}\n                      />\n                  ))\n              }\n          </TableBody> */\n"]},"metadata":{},"sourceType":"module"}