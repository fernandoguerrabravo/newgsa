{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/application/kanban/Board/AddColumn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, Grid, TextField, Stack, useTheme } from '@mui/material'; // third-party\n\nimport { Chance } from 'chance'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport { SNACKBAR_OPEN, ADD_COLUMN } from 'store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chance = new Chance(); // ==============================|| KANBAN BOARD - ADD COLUMN ||============================== //\n\nconst AddColumn = () => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n  const [isAddColumn, setIsAddColumn] = useState(false);\n\n  const handleAddColumnChange = () => {\n    setIsAddColumn(prev => !prev);\n  };\n\n  const addColumn = () => {\n    if (title.length > 0) {\n      const newColumn = {\n        id: `${chance.integer({\n          min: 1000,\n          max: 9999\n        })}`,\n        title,\n        itemIds: []\n      };\n      dispatch({\n        type: ADD_COLUMN,\n        payload: {\n          column: newColumn\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Column Add successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n      setIsAddColumn(prev => !prev);\n      setTitle('');\n    } else {\n      setIsTitle(true);\n    }\n  };\n\n  const handleAddColumn = event => {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      addColumn();\n    }\n  };\n\n  const handleColumnTitle = event => {\n    const newTitle = event.target.value;\n    setTitle(newTitle);\n\n    if (newTitle.length <= 0) {\n      setIsTitle(true);\n    } else {\n      setIsTitle(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    sx: {\n      minWidth: 250,\n      backgroundColor: theme.palette.primary.light,\n      height: '100%'\n    },\n    contentSX: {\n      p: 1.5,\n      '&:last-child': {\n        pb: 1.5\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      children: [isAddColumn && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          contentSX: {\n            p: 2,\n            transition: 'background-color 0.25s ease-out'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 0.5,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Add Column\",\n                value: title,\n                onChange: handleColumnTitle,\n                sx: {\n                  mb: 2,\n                  '& input': {\n                    bgcolor: 'transparent',\n                    p: 0,\n                    borderRadius: '0px'\n                  },\n                  '& fieldset': {\n                    display: 'none'\n                  },\n                  '& .MuiFormHelperText-root': {\n                    ml: 0\n                  },\n                  '& .MuiOutlinedInput-root': {\n                    bgcolor: 'transparent'\n                  }\n                },\n                onKeyUp: handleAddColumn,\n                helperText: isTitle ? 'Column title is required.' : '',\n                error: isTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              zeroMinWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                alignItems: \"center\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  color: \"error\",\n                  sx: {\n                    width: '100%'\n                  },\n                  onClick: handleAddColumnChange,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: addColumn,\n                  size: \"small\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), !isAddColumn && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          sx: {\n            width: '100%'\n          },\n          onClick: handleAddColumnChange,\n          children: \"Add Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddColumn, \"g/nhlRSYusUd1RF3LZTuXaAUNcw=\", false, function () {\n  return [useTheme, useDispatch];\n});\n\n_c = AddColumn;\nexport default AddColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddColumn\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/application/kanban/Board/AddColumn.js"],"names":["useState","useDispatch","Button","Grid","TextField","Stack","useTheme","Chance","MainCard","SubCard","SNACKBAR_OPEN","ADD_COLUMN","chance","AddColumn","theme","dispatch","title","setTitle","isTitle","setIsTitle","isAddColumn","setIsAddColumn","handleAddColumnChange","prev","addColumn","length","newColumn","id","integer","min","max","itemIds","type","payload","column","open","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","handleAddColumn","event","key","keyCode","handleColumnTitle","newTitle","target","value","minWidth","backgroundColor","palette","primary","light","height","p","pb","transition","mb","bgcolor","borderRadius","display","ml","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, TextField, Stack, useTheme } from '@mui/material';\r\n\r\n// third-party\r\nimport { Chance } from 'chance';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { SNACKBAR_OPEN, ADD_COLUMN } from 'store/actions';\r\n\r\nconst chance = new Chance();\r\n\r\n// ==============================|| KANBAN BOARD - ADD COLUMN ||============================== //\r\n\r\nconst AddColumn = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [isTitle, setIsTitle] = useState(false);\r\n\r\n    const [isAddColumn, setIsAddColumn] = useState(false);\r\n    const handleAddColumnChange = () => {\r\n        setIsAddColumn((prev) => !prev);\r\n    };\r\n\r\n    const addColumn = () => {\r\n        if (title.length > 0) {\r\n            const newColumn = {\r\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\r\n                title,\r\n                itemIds: []\r\n            };\r\n\r\n            dispatch({\r\n                type: ADD_COLUMN,\r\n                payload: { column: newColumn }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Column Add successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n            setIsAddColumn((prev) => !prev);\r\n            setTitle('');\r\n        } else {\r\n            setIsTitle(true);\r\n        }\r\n    };\r\n\r\n    const handleAddColumn = (event) => {\r\n        if (event.key === 'Enter' || event.keyCode === 13) {\r\n            addColumn();\r\n        }\r\n    };\r\n\r\n    const handleColumnTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        setTitle(newTitle);\r\n        if (newTitle.length <= 0) {\r\n            setIsTitle(true);\r\n        } else {\r\n            setIsTitle(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            sx={{\r\n                minWidth: 250,\r\n                backgroundColor: theme.palette.primary.light,\r\n                height: '100%'\r\n            }}\r\n            contentSX={{ p: 1.5, '&:last-child': { pb: 1.5 } }}\r\n        >\r\n            <Grid container alignItems=\"center\" spacing={1}>\r\n                {isAddColumn && (\r\n                    <Grid item xs={12}>\r\n                        <SubCard contentSX={{ p: 2, transition: 'background-color 0.25s ease-out' }}>\r\n                            <Grid container alignItems=\"center\" spacing={0.5}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder=\"Add Column\"\r\n                                        value={title}\r\n                                        onChange={handleColumnTitle}\r\n                                        sx={{\r\n                                            mb: 2,\r\n                                            '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\r\n                                            '& fieldset': { display: 'none' },\r\n                                            '& .MuiFormHelperText-root': {\r\n                                                ml: 0\r\n                                            },\r\n                                            '& .MuiOutlinedInput-root': {\r\n                                                bgcolor: 'transparent'\r\n                                            }\r\n                                        }}\r\n                                        onKeyUp={handleAddColumn}\r\n                                        helperText={isTitle ? 'Column title is required.' : ''}\r\n                                        error={isTitle}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth />\r\n                                <Grid item>\r\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                        <Button variant=\"text\" color=\"error\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={addColumn} size=\"small\">\r\n                                            Add\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                )}\r\n                {!isAddColumn && (\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"text\" color=\"primary\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\r\n                            Add Column\r\n                        </Button>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AddColumn;\r\n"]},"metadata":{},"sourceType":"module"}