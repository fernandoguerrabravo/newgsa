{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/forms/chart/Apexchart/ApexAreaChart.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles'; // third-party\n\nimport ReactApexChart from 'react-apexcharts'; // project imports\n\nimport value from 'assets/scss/_themes-vars.module.scss'; // chart options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst areaChartOptions = {\n  chart: {\n    height: 350,\n    type: 'area'\n  },\n  colors: [value.secondaryMain, value.primaryMain],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth'\n  },\n  xaxis: {\n    type: 'datetime',\n    categories: ['2018-09-19T00:00:00.000Z', '2018-09-19T01:30:00.000Z', '2018-09-19T02:30:00.000Z', '2018-09-19T03:30:00.000Z', '2018-09-19T04:30:00.000Z', '2018-09-19T05:30:00.000Z', '2018-09-19T06:30:00.000Z']\n  },\n  tooltip: {\n    x: {\n      format: 'dd/MM/yy HH:mm'\n    }\n  },\n  legend: {\n    show: true,\n    fontSize: '0.875rem',\n    fontFamily: `'Roboto', sans-serif`,\n    position: 'bottom',\n    offsetX: 10,\n    offsetY: 10,\n    labels: {\n      useSeriesColors: false\n    },\n    markers: {\n      width: 16,\n      height: 16,\n      radius: 5\n    },\n    itemMargin: {\n      horizontal: 15,\n      vertical: 8\n    }\n  }\n}; // ==============================|| AREA CHART ||============================== //\n\nconst ApexAreaChart = () => {\n  _s();\n\n  const theme = useTheme();\n  const customization = useSelector(state => state.customization);\n  const {\n    navType\n  } = customization;\n  const {\n    primary\n  } = theme.palette.text;\n  const darkLight = theme.palette.dark.light;\n  const grey200 = theme.palette.grey[200];\n  const [series] = useState([{\n    name: 'Series 1',\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }, {\n    name: 'Series 2',\n    data: [11, 32, 45, 32, 34, 52, 41]\n  }]);\n  const [options, setOptions] = useState(areaChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({ ...prevState,\n      colors: [theme.palette.secondary.main, theme.palette.primary.main],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: navType === 'dark' ? darkLight + 20 : grey200\n      },\n      tooltip: {\n        theme: navType === 'dark' ? 'dark' : 'light'\n      },\n      legend: {\n        labels: {\n          colors: 'grey.500'\n        }\n      }\n    })); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navType, primary, darkLight, grey200, theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApexAreaChart, \"QxkQq7PPb6AsPf7AQdY70zomFi8=\", false, function () {\n  return [useTheme, useSelector];\n});\n\n_c = ApexAreaChart;\nexport default ApexAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApexAreaChart\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/forms/chart/Apexchart/ApexAreaChart.js"],"names":["useEffect","useState","useSelector","useTheme","ReactApexChart","value","areaChartOptions","chart","height","type","colors","secondaryMain","primaryMain","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","legend","show","fontSize","fontFamily","position","offsetX","offsetY","labels","useSeriesColors","markers","width","radius","itemMargin","horizontal","vertical","ApexAreaChart","theme","customization","state","navType","primary","palette","text","darkLight","dark","light","grey200","grey","series","name","data","options","setOptions","prevState","secondary","main","style","yaxis","grid","borderColor"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 350,\r\n        type: 'area'\r\n    },\r\n    colors: [value.secondaryMain, value.primaryMain],\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth'\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            '2018-09-19T00:00:00.000Z',\r\n            '2018-09-19T01:30:00.000Z',\r\n            '2018-09-19T02:30:00.000Z',\r\n            '2018-09-19T03:30:00.000Z',\r\n            '2018-09-19T04:30:00.000Z',\r\n            '2018-09-19T05:30:00.000Z',\r\n            '2018-09-19T06:30:00.000Z'\r\n        ]\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            format: 'dd/MM/yy HH:mm'\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: 'bottom',\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 8\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| AREA CHART ||============================== //\r\n\r\nconst ApexAreaChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Series 1',\r\n            data: [31, 40, 28, 51, 42, 109, 100]\r\n        },\r\n        {\r\n            name: 'Series 2',\r\n            data: [11, 32, 45, 32, 34, 52, 41]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.secondary.main, theme.palette.primary.main],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [navType, primary, darkLight, grey200, theme]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"area\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexAreaChart;\r\n"]},"metadata":{},"sourceType":"module"}