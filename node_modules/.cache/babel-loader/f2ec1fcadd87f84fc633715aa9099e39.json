{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/ui-component/cards/SalesLineChartCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Card, Grid, Typography } from '@mui/material'; // third party\n\nimport Chart from 'react-apexcharts'; // ============================|| SALES LINE CARD ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SalesLineChartCard = ({\n  bgColor,\n  chartData,\n  footerData,\n  icon,\n  title,\n  percentage\n}) => {\n  _s();\n\n  const theme = useTheme();\n  let footerHtml;\n\n  if (footerData) {\n    footerHtml = footerData.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          mb: 3,\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            sx: {\n              mb: 1\n            },\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        color: '#fff',\n        bgcolor: bgColor || theme.palette.primary.dark,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [title && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"inherit\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: [icon && /*#__PURE__*/_jsxDEV(Box, {\n                component: \"span\",\n                sx: {\n                  mr: 2\n                },\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), percentage && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"inherit\",\n                children: percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), chartData && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chart, { ...chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), footerData && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n      children: footerHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SalesLineChartCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = SalesLineChartCard;\nSalesLineChartCard.propTypes = {\n  title: PropTypes.string,\n  chartData: PropTypes.object,\n  footerData: PropTypes.array,\n  dropData: PropTypes.object,\n  listData: PropTypes.object,\n  bgColor: PropTypes.string,\n  icon: PropTypes.element,\n  percentage: PropTypes.string\n};\nexport default SalesLineChartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesLineChartCard\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/ui-component/cards/SalesLineChartCard.js"],"names":["PropTypes","useTheme","Box","Card","Grid","Typography","Chart","SalesLineChartCard","bgColor","chartData","footerData","icon","title","percentage","theme","footerHtml","map","item","index","mt","mb","p","value","label","color","bgcolor","palette","primary","dark","mr","propTypes","string","object","array","dropData","listData","element"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Card, Grid, Typography } from '@mui/material';\r\n\r\n// third party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// ============================|| SALES LINE CARD ||============================ //\r\n\r\nconst SalesLineChartCard = ({ bgColor, chartData, footerData, icon, title, percentage }) => {\r\n    const theme = useTheme();\r\n\r\n    let footerHtml;\r\n    if (footerData) {\r\n        footerHtml = footerData.map((item, index) => (\r\n            <Grid item key={index}>\r\n                <Box\r\n                    sx={{\r\n                        mt: 3,\r\n                        mb: 3,\r\n                        p: 1\r\n                    }}\r\n                >\r\n                    <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\r\n                        <Typography variant=\"h3\" sx={{ mb: 1 }}>\r\n                            {item.value}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">{item.label}</Typography>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Box\r\n                sx={{\r\n                    color: '#fff',\r\n                    bgcolor: bgColor || theme.palette.primary.dark,\r\n                    p: 3\r\n                }}\r\n            >\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        {title && (\r\n                            <Grid item>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    {title}\r\n                                </Typography>\r\n                            </Grid>\r\n                        )}\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                {icon && (\r\n                                    <Box\r\n                                        component=\"span\"\r\n                                        sx={{\r\n                                            mr: 2\r\n                                        }}\r\n                                    >\r\n                                        {icon}\r\n                                    </Box>\r\n                                )}\r\n                                {percentage && (\r\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                        {percentage}\r\n                                    </Typography>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {chartData && (\r\n                        <Grid item>\r\n                            <Chart {...chartData} />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n            {footerData && (\r\n                <Grid container justifyContent=\"space-around\" alignItems=\"center\">\r\n                    {footerHtml}\r\n                </Grid>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nSalesLineChartCard.propTypes = {\r\n    title: PropTypes.string,\r\n    chartData: PropTypes.object,\r\n    footerData: PropTypes.array,\r\n    dropData: PropTypes.object,\r\n    listData: PropTypes.object,\r\n    bgColor: PropTypes.string,\r\n    icon: PropTypes.element,\r\n    percentage: PropTypes.string\r\n};\r\n\r\nexport default SalesLineChartCard;\r\n"]},"metadata":{},"sourceType":"module"}