{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/forms/plugins/Clipboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, CardContent, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@mui/material'; // third-party\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport SubCard from 'ui-component/cards/SubCard';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport ContentCopyTwoToneIcon from '@mui/icons-material/ContentCopyTwoTone';\nimport ContentCutTwoToneIcon from '@mui/icons-material/ContentCutTwoTone';\nimport LinkIcon from '@mui/icons-material/Link'; // ==============================|| PLUGIN - COPY TO CLIPBOARD ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClipboardPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [text1, setText1] = useState('https://berrydashboard.io/');\n  const [text2, setText2] = useState('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.');\n  const [text3] = useState('Lorem ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra lá , depois divoltis porris, paradis. Paisis, filhis, espiritis santis. Mé faiz elementum girarzis, nisi eros vermeio, in elementis mé pra quem é amistosis quis leo. Manduma pindureta quium dia nois paga.');\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Clipboard\",\n    secondary: /*#__PURE__*/_jsxDEV(SecondaryAction, {\n      icon: /*#__PURE__*/_jsxDEV(LinkIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this),\n      link: \"https://www.npmjs.com/package/react-copy-to-clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Copy from TextField\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Website\",\n            type: \"text\",\n            value: text1,\n            onChange: e => {\n              setText1(e.target.value);\n            },\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                  text: text1,\n                  onCopy: () => dispatch({\n                    type: SNACKBAR_OPEN,\n                    anchorOrigin: {\n                      vertical: 'top',\n                      horizontal: 'right'\n                    },\n                    transition: 'SlideLeft',\n                    open: true,\n                    message: 'Text Copied',\n                    variant: 'alert',\n                    alertSeverity: 'success',\n                    close: false\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Copy\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"Copy from another element\",\n                      edge: \"end\",\n                      size: \"large\",\n                      children: /*#__PURE__*/_jsxDEV(ContentCopyTwoToneIcon, {\n                        sx: {\n                          fontSize: '1.1rem'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Copy from TextArea\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            rows: 4,\n            fullWidth: true,\n            label: \"Copy text\",\n            onChange: e => setText2(e.target.value),\n            value: text2,\n            sx: {\n              mb: gridSpacing\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: text2,\n            onCopy: () => dispatch({\n              type: SNACKBAR_OPEN,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              transition: 'SlideLeft',\n              open: true,\n              message: 'Text Copied',\n              variant: 'alert',\n              alertSeverity: 'success',\n              close: false\n            }),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              sx: {\n                mr: 1.5\n              },\n              children: [/*#__PURE__*/_jsxDEV(ContentCopyTwoToneIcon, {\n                sx: {\n                  fontSize: '1rem',\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), \" Copy\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: text2,\n            onCopy: () => {\n              setText2('');\n              dispatch({\n                type: SNACKBAR_OPEN,\n                anchorOrigin: {\n                  vertical: 'top',\n                  horizontal: 'right'\n                },\n                transition: 'SlideLeft',\n                open: true,\n                message: 'Text Cut',\n                variant: 'alert',\n                alertSeverity: 'success',\n                close: false\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              color: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(ContentCutTwoToneIcon, {\n                sx: {\n                  fontSize: '1rem',\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), \" Cut\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Copy from Container\",\n          secondary: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: text3,\n            onCopy: () => dispatch({\n              type: SNACKBAR_OPEN,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              transition: 'SlideLeft',\n              open: true,\n              message: 'Text Copied',\n              variant: 'alert',\n              alertSeverity: 'success',\n              close: false\n            }),\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Copy\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  mr: 1.5,\n                  px: 1,\n                  minWidth: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(ContentCopyTwoToneIcon, {\n                  sx: {\n                    fontSize: '1rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 0,\n              pb: 2.5\n            },\n            children: text3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClipboardPage, \"2+FiAfdQCmh7l/wmR+UkU2lzlCE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ClipboardPage;\nexport default ClipboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClipboardPage\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/forms/plugins/Clipboard.js"],"names":["useState","useDispatch","Button","CardContent","Grid","IconButton","InputAdornment","TextField","Tooltip","CopyToClipboard","MainCard","SecondaryAction","SubCard","SNACKBAR_OPEN","gridSpacing","ContentCopyTwoToneIcon","ContentCutTwoToneIcon","LinkIcon","ClipboardPage","dispatch","text1","setText1","text2","setText2","text3","e","target","value","endAdornment","type","anchorOrigin","vertical","horizontal","transition","open","message","variant","alertSeverity","close","fontSize","mb","mr","px","minWidth","p","pb"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, CardContent, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@mui/material';\r\n\r\n// third-party\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ContentCopyTwoToneIcon from '@mui/icons-material/ContentCopyTwoTone';\r\nimport ContentCutTwoToneIcon from '@mui/icons-material/ContentCutTwoTone';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\n// ==============================|| PLUGIN - COPY TO CLIPBOARD ||============================== //\r\n\r\nconst ClipboardPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [text1, setText1] = useState('https://berrydashboard.io/');\r\n    const [text2, setText2] = useState(\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n    );\r\n    const [text3] = useState(\r\n        'Lorem ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra lá , depois divoltis porris, paradis. Paisis, filhis, espiritis santis. Mé faiz elementum girarzis, nisi eros vermeio, in elementis mé pra quem é amistosis quis leo. Manduma pindureta quium dia nois paga.'\r\n    );\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Clipboard\"\r\n            secondary={\r\n                <SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://www.npmjs.com/package/react-copy-to-clipboard\" />\r\n            }\r\n        >\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Copy from TextField\">\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Website\"\r\n                            type=\"text\"\r\n                            value={text1}\r\n                            onChange={(e) => {\r\n                                setText1(e.target.value);\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <CopyToClipboard\r\n                                            text={text1}\r\n                                            onCopy={() =>\r\n                                                dispatch({\r\n                                                    type: SNACKBAR_OPEN,\r\n                                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                                    transition: 'SlideLeft',\r\n                                                    open: true,\r\n                                                    message: 'Text Copied',\r\n                                                    variant: 'alert',\r\n                                                    alertSeverity: 'success',\r\n                                                    close: false\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Tooltip title=\"Copy\">\r\n                                                <IconButton aria-label=\"Copy from another element\" edge=\"end\" size=\"large\">\r\n                                                    <ContentCopyTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </CopyToClipboard>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Copy from TextArea\">\r\n                        <TextField\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                            label=\"Copy text\"\r\n                            onChange={(e) => setText2(e.target.value)}\r\n                            value={text2}\r\n                            sx={{ mb: gridSpacing }}\r\n                        />\r\n                        <CopyToClipboard\r\n                            text={text2}\r\n                            onCopy={() =>\r\n                                dispatch({\r\n                                    type: SNACKBAR_OPEN,\r\n                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                    transition: 'SlideLeft',\r\n                                    open: true,\r\n                                    message: 'Text Copied',\r\n                                    variant: 'alert',\r\n                                    alertSeverity: 'success',\r\n                                    close: false\r\n                                })\r\n                            }\r\n                        >\r\n                            <Button variant=\"contained\" size=\"small\" sx={{ mr: 1.5 }}>\r\n                                <ContentCopyTwoToneIcon sx={{ fontSize: '1rem', mr: 1 }} /> Copy\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                        <CopyToClipboard\r\n                            text={text2}\r\n                            onCopy={() => {\r\n                                setText2('');\r\n                                dispatch({\r\n                                    type: SNACKBAR_OPEN,\r\n                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                    transition: 'SlideLeft',\r\n                                    open: true,\r\n                                    message: 'Text Cut',\r\n                                    variant: 'alert',\r\n                                    alertSeverity: 'success',\r\n                                    close: false\r\n                                });\r\n                            }}\r\n                        >\r\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\">\r\n                                <ContentCutTwoToneIcon sx={{ fontSize: '1rem', mr: 1 }} /> Cut\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard\r\n                        title=\"Copy from Container\"\r\n                        secondary={\r\n                            <CopyToClipboard\r\n                                text={text3}\r\n                                onCopy={() =>\r\n                                    dispatch({\r\n                                        type: SNACKBAR_OPEN,\r\n                                        anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                        transition: 'SlideLeft',\r\n                                        open: true,\r\n                                        message: 'Text Copied',\r\n                                        variant: 'alert',\r\n                                        alertSeverity: 'success',\r\n                                        close: false\r\n                                    })\r\n                                }\r\n                            >\r\n                                <Tooltip title=\"Copy\">\r\n                                    <Button variant=\"contained\" sx={{ mr: 1.5, px: 1, minWidth: 'auto' }}>\r\n                                        <ContentCopyTwoToneIcon sx={{ fontSize: '1rem' }} />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </CopyToClipboard>\r\n                        }\r\n                    >\r\n                        <CardContent sx={{ p: 0, pb: 2.5 }}>{text3}</CardContent>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ClipboardPage;\r\n"]},"metadata":{},"sourceType":"module"}