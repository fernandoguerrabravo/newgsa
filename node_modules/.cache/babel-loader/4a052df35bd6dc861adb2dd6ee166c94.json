{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/ui-elements/advance/UIDialog/FormDialog.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@mui/material'; // ===============================|| UI DIALOG - FORMS ||=============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialog() {\n  _s();\n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            component: \"span\",\n            children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          size: \"small\",\n          id: \"name\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          pr: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            color: theme.palette.error.dark\n          },\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialog, \"wGmR9/hunq3L23vhfiuhNflRfmI=\", false, function () {\n  return [useTheme];\n});\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/ui-elements/advance/UIDialog/FormDialog.js"],"names":["useState","useTheme","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Typography","FormDialog","theme","open","setOpen","handleClickOpen","handleClose","pr","color","palette","error","dark"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,WAA1E,EAAuFC,SAAvF,EAAkGC,UAAlG,QAAoH,eAApH,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMc,eAAe,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,IAAd;AAAoB,MAAA,OAAO,EAAEG,WAA7B;AAA0C,yBAAgB,mBAA1D;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,gCACI,QAAC,iBAAD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,IAAI,EAAC,OAA1B;AAAkC,UAAA,EAAE,EAAC,MAArC;AAA4C,UAAA,KAAK,EAAC,eAAlD;AAAkE,UAAA,IAAI,EAAC,OAAvE;AAA+E,UAAA,SAAS;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,aAAD;AAAe,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAnB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE;AAAEC,YAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBC;AAA7B,WAAZ;AAAiD,UAAA,OAAO,EAAEL,WAA1D;AAAuE,UAAA,KAAK,EAAC,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,IAAI,EAAC,OAAjC;AAAyC,UAAA,OAAO,EAAEA,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAtCuBL,U;UACNT,Q;;;KADMS,U","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - FORMS ||=============================== //\r\n\r\nexport default function FormDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <TextField autoFocus size=\"small\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button sx={{ color: theme.palette.error.dark }} onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}