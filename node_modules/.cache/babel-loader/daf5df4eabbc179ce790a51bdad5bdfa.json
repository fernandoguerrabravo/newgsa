{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/ui-component/cards/Post/Comment/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, ButtonBase, Card, Collapse, FormHelperText, Grid, InputAdornment, Menu, MenuItem, Stack, TextField, Typography, useMediaQuery } from '@mui/material'; // third-party\n\nimport * as yup from 'yup';\nimport uniqueId from 'lodash/uniqueId';\nimport { Controller, FormProvider, useForm, useFormContext } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // project imports\n\nimport Reply from './Reply';\nimport Avatar from 'ui-component/extended/Avatar';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // assets\n\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\nimport ReplyTwoToneIcon from '@mui/icons-material/ReplyTwoTone';\nimport AttachmentRoundedIcon from '@mui/icons-material/AttachmentRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true);\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().required('Reply Field is Required')\n}); // ==============================|| COMMENT TEXTFIELD ||============================== //\n\nconst FormInput = ({\n  bug,\n  label,\n  name,\n  required,\n  ...others\n}) => {\n  _s();\n\n  const {\n    control\n  } = useFormContext();\n  let isError = false;\n  let errorMessage = '';\n\n  if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\n    isError = true;\n    errorMessage = bug[name].message;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      as: TextField,\n      name: name,\n      control: control,\n      defaultValue: \"\",\n      label: label,\n      fullWidth: true,\n      InputLabelProps: {\n        className: required ? 'required-label' : '',\n        required: required || false\n      },\n      error: isError,\n      ...others\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormInput, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n\n_c = FormInput;\nFormInput.propTypes = {\n  bug: PropTypes.object,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool\n}; // ==============================|| SOCIAL PROFILE - COMMENT ||============================== //\n\nconst Comment = ({\n  comment,\n  handleCommentLikes,\n  handleReplayLikes,\n  postId,\n  replyAdd,\n  user\n}) => {\n  _s2();\n\n  var _comment$data, _comment$data2, _comment$data4, _comment$data5, _comment$data6, _comment$data7, _comment$data8, _comment$data9, _comment$data10, _comment$data11;\n\n  const theme = useTheme();\n  const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [openReply, setOpenReply] = useState(false);\n\n  const handleChangeReply = () => {\n    setOpenReply(prev => !prev);\n  };\n\n  let repliesResult = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (Object.keys(comment).length > 0 && ((_comment$data = comment.data) === null || _comment$data === void 0 ? void 0 : _comment$data.replies) && ((_comment$data2 = comment.data) === null || _comment$data2 === void 0 ? void 0 : _comment$data2.replies.length)) {\n    var _comment$data3;\n\n    repliesResult = (_comment$data3 = comment.data) === null || _comment$data3 === void 0 ? void 0 : _comment$data3.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(Reply, {\n      postId: postId,\n      commentId: comment.id,\n      onReply: handleChangeReply,\n      reply: reply,\n      handleReplayLikes: handleReplayLikes\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this));\n  }\n\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors,\n    reset\n  } = methods;\n\n  const onSubmit = async reply => {\n    handleChangeReply();\n    const replyId = uniqueId('#REPLY_');\n    const newReply = {\n      id: replyId,\n      profile: user,\n      data: {\n        comment: reply.name,\n        likes: {\n          like: false,\n          value: 0\n        },\n        replies: []\n      }\n    };\n    replyAdd(postId, comment.id, newReply);\n    reset({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Object.keys(comment).length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n          padding: '16px 16px 8px',\n          mt: 1.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              wrap: \"nowrap\",\n              alignItems: \"center\",\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    width: 24,\n                    height: 24\n                  },\n                  size: \"sm\",\n                  alt: \"User 1\",\n                  src: comment.profile && comment.profile.avatar && avatarImage(`./${comment.profile.avatar}`).default\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      align: \"left\",\n                      variant: \"h5\",\n                      component: \"div\",\n                      children: comment.profile.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      align: \"left\",\n                      variant: \"caption\",\n                      children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                        sx: {\n                          width: '10px',\n                          height: '10px',\n                          opacity: 0.5,\n                          m: '0 5px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 53\n                      }, this), ' ', comment.profile.time]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n                  sx: {\n                    borderRadius: '12px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    variant: \"rounded\",\n                    sx: { ...theme.typography.commonAvatar,\n                      ...theme.typography.smallAvatar,\n                      background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary.light,\n                      color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.secondary.dark,\n                      zIndex: 1,\n                      transition: 'all .2s ease-in-out',\n                      '&[aria-controls=\"menu-list-grow\"],&:hover': {\n                        background: theme.palette.secondary.main,\n                        color: theme.palette.secondary.light\n                      }\n                    },\n                    \"aria-controls\": \"menu-comment\",\n                    \"aria-haspopup\": \"true\",\n                    onClick: handleClick,\n                    children: /*#__PURE__*/_jsxDEV(MoreVertTwoToneIcon, {\n                      fontSize: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                  id: \"menu-comment\",\n                  anchorEl: anchorEl,\n                  keepMounted: true,\n                  open: Boolean(anchorEl),\n                  onClose: handleClose,\n                  variant: \"selectedMenu\",\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  transformOrigin: {\n                    vertical: 'top',\n                    horizontal: 'right'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleClose,\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleClose,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              '&.MuiGrid-root': {\n                pt: 1.5\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"body2\",\n              children: (_comment$data4 = comment.data) === null || _comment$data4 === void 0 ? void 0 : _comment$data4.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              sx: {\n                color: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.800'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleCommentLikes(postId, comment.id),\n                variant: \"text\",\n                color: \"inherit\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(ThumbUpAltTwoToneIcon, {\n                  color: ((_comment$data5 = comment.data) === null || _comment$data5 === void 0 ? void 0 : _comment$data5.likes) && ((_comment$data6 = comment.data) === null || _comment$data6 === void 0 ? void 0 : _comment$data6.likes.like) ? 'secondary' : 'inherit'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this),\n                children: [((_comment$data7 = comment.data) === null || _comment$data7 === void 0 ? void 0 : _comment$data7.likes) && ((_comment$data8 = comment.data) === null || _comment$data8 === void 0 ? void 0 : _comment$data8.likes.value) ? (_comment$data9 = comment.data) === null || _comment$data9 === void 0 ? void 0 : _comment$data9.likes.value : 0, \" likes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                onClick: handleChangeReply,\n                color: \"inherit\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(ReplyTwoToneIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 52\n                }, this),\n                children: [((_comment$data10 = comment.data) === null || _comment$data10 === void 0 ? void 0 : _comment$data10.replies) ? (_comment$data11 = comment.data) === null || _comment$data11 === void 0 ? void 0 : _comment$data11.replies.length : 0, \" reply\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), repliesResult, /*#__PURE__*/_jsxDEV(Collapse, {\n      in: openReply,\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          pl: {\n            xs: 1,\n            sm: 3\n          },\n          pt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            ml: 4.25,\n            [theme.breakpoints.down('md')]: {\n              ml: 0\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  display: {\n                    xs: 'none',\n                    sm: 'block'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    mt: 1.5\n                  },\n                  alt: \"User 1\",\n                  src: comment.profile && comment.profile.avatar && avatarImage(`./${comment.profile.avatar}`).default\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                sx: {\n                  mt: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n                  children: /*#__PURE__*/_jsxDEV(FormInput, {\n                    fullWidth: true,\n                    name: \"name\",\n                    label: \"Write a reply...\",\n                    size: matchesXS ? 'small' : 'medium',\n                    bug: errors,\n                    InputProps: {\n                      label: 'Write a reply...',\n                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"start\",\n                        children: /*#__PURE__*/_jsxDEV(AttachmentRoundedIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 53\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    size: matchesXS ? 'small' : 'large',\n                    sx: {\n                      mt: 1.5\n                    },\n                    children: \"Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Comment, \"aE8YnSvV4r2wQRPMF8PwdnkbTzc=\", false, function () {\n  return [useTheme, useMediaQuery, useForm];\n});\n\n_c2 = Comment;\nComment.propTypes = {\n  comment: PropTypes.object,\n  postId: PropTypes.string,\n  user: PropTypes.object,\n  commentAdd: PropTypes.func,\n  handleCommentLikes: PropTypes.func,\n  handlePostLikes: PropTypes.func,\n  handleReplayLikes: PropTypes.func,\n  post: PropTypes.object,\n  replyAdd: PropTypes.func\n};\nexport default Comment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormInput\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/ui-component/cards/Post/Comment/index.js"],"names":["PropTypes","useState","useTheme","Box","Button","ButtonBase","Card","Collapse","FormHelperText","Grid","InputAdornment","Menu","MenuItem","Stack","TextField","Typography","useMediaQuery","yup","uniqueId","Controller","FormProvider","useForm","useFormContext","yupResolver","Reply","Avatar","AnimateButton","FiberManualRecordIcon","MoreVertTwoToneIcon","ThumbUpAltTwoToneIcon","ReplyTwoToneIcon","AttachmentRoundedIcon","avatarImage","require","context","validationSchema","object","shape","name","string","required","FormInput","bug","label","others","control","isError","errorMessage","Object","prototype","hasOwnProperty","call","message","className","propTypes","bool","Comment","comment","handleCommentLikes","handleReplayLikes","postId","replyAdd","user","theme","matchesXS","breakpoints","down","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","openReply","setOpenReply","handleChangeReply","prev","repliesResult","keys","length","data","replies","map","reply","index","id","methods","resolver","handleSubmit","errors","reset","onSubmit","replyId","newReply","profile","likes","like","value","background","palette","mode","dark","main","grey","padding","mt","width","height","avatar","default","opacity","m","time","borderRadius","typography","commonAvatar","smallAvatar","secondary","light","color","zIndex","transition","Boolean","vertical","horizontal","pt","pl","xs","sm","ml","display","startAdornment","commentAdd","func","handlePostLikes","post"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    ButtonBase,\r\n    Card,\r\n    Collapse,\r\n    FormHelperText,\r\n    Grid,\r\n    InputAdornment,\r\n    Menu,\r\n    MenuItem,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport { Controller, FormProvider, useForm, useFormContext } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// project imports\r\nimport Reply from './Reply';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\r\nimport ReplyTwoToneIcon from '@mui/icons-material/ReplyTwoTone';\r\nimport AttachmentRoundedIcon from '@mui/icons-material/AttachmentRounded';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string().required('Reply Field is Required')\r\n});\r\n\r\n// ==============================|| COMMENT TEXTFIELD ||============================== //\r\n\r\nconst FormInput = ({ bug, label, name, required, ...others }) => {\r\n    const { control } = useFormContext();\r\n\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                as={TextField}\r\n                name={name}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                label={label}\r\n                fullWidth\r\n                InputLabelProps={{\r\n                    className: required ? 'required-label' : '',\r\n                    required: required || false\r\n                }}\r\n                error={isError}\r\n                {...others}\r\n            />\r\n            {errorMessage && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{errorMessage}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nFormInput.propTypes = {\r\n    bug: PropTypes.object,\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool\r\n};\r\n\r\n// ==============================|| SOCIAL PROFILE - COMMENT ||============================== //\r\n\r\nconst Comment = ({ comment, handleCommentLikes, handleReplayLikes, postId, replyAdd, user }) => {\r\n    const theme = useTheme();\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [openReply, setOpenReply] = useState(false);\r\n    const handleChangeReply = () => {\r\n        setOpenReply((prev) => !prev);\r\n    };\r\n\r\n    let repliesResult = <></>;\r\n    if (Object.keys(comment).length > 0 && comment.data?.replies && comment.data?.replies.length) {\r\n        repliesResult = comment.data?.replies.map((reply, index) => (\r\n            <Reply\r\n                postId={postId}\r\n                commentId={comment.id}\r\n                key={index}\r\n                onReply={handleChangeReply}\r\n                reply={reply}\r\n                handleReplayLikes={handleReplayLikes}\r\n            />\r\n        ));\r\n    }\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const { handleSubmit, errors, reset } = methods;\r\n    const onSubmit = async (reply) => {\r\n        handleChangeReply();\r\n        const replyId = uniqueId('#REPLY_');\r\n        const newReply = {\r\n            id: replyId,\r\n            profile: user,\r\n            data: {\r\n                comment: reply.name,\r\n                likes: {\r\n                    like: false,\r\n                    value: 0\r\n                },\r\n                replies: []\r\n            }\r\n        };\r\n\r\n        replyAdd(postId, comment.id, newReply);\r\n        reset({ name: '' });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(comment).length > 0 && (\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        sx={{\r\n                            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                            padding: '16px 16px 8px',\r\n                            mt: 1.25\r\n                        }}\r\n                    >\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{ width: 24, height: 24 }}\r\n                                            size=\"sm\"\r\n                                            alt=\"User 1\"\r\n                                            src={\r\n                                                comment.profile &&\r\n                                                comment.profile.avatar &&\r\n                                                avatarImage(`./${comment.profile.avatar}`).default\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs zeroMinWidth>\r\n                                        <Grid container alignItems=\"center\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Typography align=\"left\" variant=\"h5\" component=\"div\">\r\n                                                    {comment.profile.name}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography align=\"left\" variant=\"caption\">\r\n                                                    <FiberManualRecordIcon\r\n                                                        sx={{ width: '10px', height: '10px', opacity: 0.5, m: '0 5px' }}\r\n                                                    />{' '}\r\n                                                    {comment.profile.time}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <ButtonBase sx={{ borderRadius: '12px' }}>\r\n                                            <Avatar\r\n                                                variant=\"rounded\"\r\n                                                sx={{\r\n                                                    ...theme.typography.commonAvatar,\r\n                                                    ...theme.typography.smallAvatar,\r\n                                                    background:\r\n                                                        theme.palette.mode === 'dark'\r\n                                                            ? theme.palette.dark.main\r\n                                                            : theme.palette.secondary.light,\r\n                                                    color:\r\n                                                        theme.palette.mode === 'dark'\r\n                                                            ? theme.palette.dark.light\r\n                                                            : theme.palette.secondary.dark,\r\n                                                    zIndex: 1,\r\n                                                    transition: 'all .2s ease-in-out',\r\n                                                    '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                                        background: theme.palette.secondary.main,\r\n                                                        color: theme.palette.secondary.light\r\n                                                    }\r\n                                                }}\r\n                                                aria-controls=\"menu-comment\"\r\n                                                aria-haspopup=\"true\"\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                            </Avatar>\r\n                                        </ButtonBase>\r\n                                        <Menu\r\n                                            id=\"menu-comment\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n                                            <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ '&.MuiGrid-root': { pt: 1.5 } }}>\r\n                                <Typography align=\"left\" variant=\"body2\">\r\n                                    {comment.data?.comment}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Stack direction=\"row\" spacing={2} sx={{ color: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.800' }}>\r\n                                    <Button\r\n                                        onClick={() => handleCommentLikes(postId, comment.id)}\r\n                                        variant=\"text\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        startIcon={\r\n                                            <ThumbUpAltTwoToneIcon\r\n                                                color={comment.data?.likes && comment.data?.likes.like ? 'secondary' : 'inherit'}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        {comment.data?.likes && comment.data?.likes.value ? comment.data?.likes.value : 0} likes\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"text\"\r\n                                        onClick={handleChangeReply}\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        startIcon={<ReplyTwoToneIcon color=\"primary\" />}\r\n                                    >\r\n                                        {comment.data?.replies ? comment.data?.replies.length : 0} reply\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            )}\r\n            {repliesResult}\r\n            {/* comment - add new replay */}\r\n            <Collapse in={openReply} sx={{ width: '100%' }}>\r\n                <Grid item xs={12} sx={{ pl: { xs: 1, sm: 3 }, pt: 3 }}>\r\n                    <Box\r\n                        sx={{\r\n                            ml: 4.25,\r\n                            [theme.breakpoints.down('md')]: {\r\n                                ml: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Grid container spacing={2} alignItems=\"flex-start\">\r\n                                <Grid item sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n                                    <Avatar\r\n                                        sx={{ mt: 1.5 }}\r\n                                        alt=\"User 1\"\r\n                                        src={\r\n                                            comment.profile && comment.profile.avatar && avatarImage(`./${comment.profile.avatar}`).default\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth sx={{ mt: 1 }}>\r\n                                    <FormProvider {...methods}>\r\n                                        <FormInput\r\n                                            fullWidth\r\n                                            name=\"name\"\r\n                                            label=\"Write a reply...\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                            InputProps={{\r\n                                                label: 'Write a reply...',\r\n                                                startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <AttachmentRoundedIcon fontSize=\"small\" />\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <AnimateButton>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            size={matchesXS ? 'small' : 'large'}\r\n                                            sx={{ mt: 1.5 }}\r\n                                        >\r\n                                            Reply\r\n                                        </Button>\r\n                                    </AnimateButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Box>\r\n                </Grid>\r\n            </Collapse>\r\n        </>\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.object,\r\n    postId: PropTypes.string,\r\n    user: PropTypes.object,\r\n    commentAdd: PropTypes.func,\r\n    handleCommentLikes: PropTypes.func,\r\n    handlePostLikes: PropTypes.func,\r\n    handleReplayLikes: PropTypes.func,\r\n    post: PropTypes.object,\r\n    replyAdd: PropTypes.func\r\n};\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}