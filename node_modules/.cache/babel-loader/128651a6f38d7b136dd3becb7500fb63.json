{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/GiftGrid2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { CircularProgress, Grid, Button } from '@mui/material';\nimport DataTable from \"react-data-table-component\";\nimport { blue, red } from '@mui/material/colors';\nimport { star } from '../hooks/star'; //import CustomizedDialogs from '../hooks/dialogo';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport Center from 'react-center';\nimport SimpleDialogDemo from './SimpleDialog';\nimport differenceBy from 'lodash/differenceBy';\n/* const useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\n\ttable: {\n\t\tminWidth: 750,\n\t\tpadding: '2px 4px'\n\t},\n\n\tcentrar: {]]\n\t\ttextAlign: 'center',\n\t\tdirection: 'row',\n\t\tjustify: 'center',\n\t\talignItems: 'center',\n\t\tpadding: theme.spacing(6)\n\t}\n}));\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst reviews = (info, info2) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [\"Total Reviews: \", info2, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: star(info)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nconst link = asin => {\n  const link = `https://www.amazon.com/dp/${asin}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport const GiftGrid2 = ({\n  setCategories,\n  category\n}) => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useFetchGifs(category); // {loading && <p>Loading Results...</p>}\n  // console.log(category)\n\n  const columnas = [{\n    name: 'Imagen',\n    selector: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: rowData.url,\n      style: {\n        width: 60\n      },\n      alt: \"imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this)\n  }, {\n    name: 'ASIN',\n    selector: rowData => link(rowData.id)\n  }, {\n    name: 'Description',\n    selector: rowData => rowData.title\n  }, {\n    name: 'Price',\n    selector: rowData => rowData.price\n  }, {\n    name: 'Details',\n    selector: rowData => /*#__PURE__*/_jsxDEV(SimpleDialogDemo, {\n      codigo: rowData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this)\n  }, {\n    name: 'Rank',\n    selector: rowData => reviews(rowData.reviews, rowData.total_reviews)\n  }];\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const [toggleCleared, setToggleCleared] = React.useState(false);\n  const [datos, setDatos] = React.useState(data);\n  const handleRowSelected = React.useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n  const contextActions = React.useMemo(() => {\n    const handleDelete = () => {\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.title)}?`)) {\n        setToggleCleared(!toggleCleared);\n        setDatos(differenceBy(datos, selectedRows, 'title'));\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDelete,\n      style: {\n        backgroundColor: 'red'\n      },\n      icon: true,\n      children: \"Delete\"\n    }, \"delete\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this);\n  }, [data, selectedRows, toggleCleared]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\",\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          striped: true,\n          pagination: true,\n          columns: columnas,\n          data: datos,\n          selectableRows: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(GiftGrid2, \"0YqzucUJxGRXJF8gxr4gAZ+OsqM=\", false, function () {\n  return [useFetchGifs];\n});\n\n_c = GiftGrid2;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiftGrid2\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/research/components/GiftGrid2.jsx"],"names":["React","useState","useMemo","CircularProgress","Grid","Button","DataTable","blue","red","star","useFetchGifs","Center","SimpleDialogDemo","differenceBy","reviews","info","info2","display","justifyContent","alignItems","link","asin","GiftGrid2","setCategories","category","data","loading","columnas","name","selector","rowData","url","width","id","title","price","total_reviews","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","datos","setDatos","handleRowSelected","useCallback","state","contextActions","handleDelete","window","confirm","map","r","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { CircularProgress, Grid, Button } from '@mui/material';\nimport DataTable from \"react-data-table-component\";\nimport { blue, red } from '@mui/material/colors';\nimport { star } from '../hooks/star';\n//import CustomizedDialogs from '../hooks/dialogo';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport Center from 'react-center';\nimport SimpleDialogDemo from './SimpleDialog';\nimport differenceBy from 'lodash/differenceBy';\n/* const useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\n\ttable: {\n\t\tminWidth: 750,\n\t\tpadding: '2px 4px'\n\t},\n\n\tcentrar: {]]\n\t\ttextAlign: 'center',\n\t\tdirection: 'row',\n\t\tjustify: 'center',\n\t\talignItems: 'center',\n\t\tpadding: theme.spacing(6)\n\t}\n}));\n*/ \nconst reviews = (info, info2) => {\n\treturn (\n\t\t<>\n\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\tTotal Reviews: {info2} <br />\n\t\t\t</div>\n\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{info}</div>\n\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>{star(info)}</div>\n\t\t</>\n\t);\n};\n\nconst link = asin => {\n\tconst link = `https://www.amazon.com/dp/${asin}`;\n\treturn (\n\t\t<>\n\t\t\t<a href={link} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t{asin}\n\t\t\t</a>\n\t\t</>\n\t);\n};\n\nexport const GiftGrid2 = ({ setCategories, category }) => {\n\t\n\tconst { data, loading } = useFetchGifs(category);\n\t// {loading && <p>Loading Results...</p>}\n\t\n\t// console.log(category)\n\n\tconst columnas = [\n\t\t{\n\t\t\tname: 'Imagen',\n\t\t\tselector: rowData => <img src={rowData.url} style={{ width: 60 }} alt=\"imagen\"/>\n\t\t},\n\n\t\t{\n\t\t\tname: 'ASIN',\n\t\t\tselector: rowData => link(rowData.id)\n\t\t},\n\n\t\t{\n\t\t\tname: 'Description',\n\t\t\tselector: rowData => rowData.title\n\t\t},\n\t\t{\n\t\t\tname: 'Price',\n\t\t\tselector: rowData => rowData.price\n\t\t},\n\n\t\t{\n\t\t\tname: 'Details',\n\t\t\t \n\t\t\tselector: rowData =>  <SimpleDialogDemo codigo={rowData.id} /> \n\t\t},\n\t\t{\n\t\t\tname: 'Rank',\n\t\t\t\n\t\t\tselector: rowData => reviews(rowData.reviews, rowData.total_reviews)\n\t\t}\n\t];\n\n\t\n\t\tconst [selectedRows, setSelectedRows] = React.useState([]);\n\t\tconst [toggleCleared, setToggleCleared] = React.useState(false);\n\t\tconst [datos, setDatos] = React.useState(data);\n\t\n\t\tconst handleRowSelected = React.useCallback(state => {\n\t\t\tsetSelectedRows(state.selectedRows);\n\t\t}, []);\n\t\n\t\tconst contextActions = React.useMemo(() => {\n\t\t\tconst handleDelete = () => {\n\t\t\t\t\n\t\t\t\tif (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.title)}?`)) {\n\t\t\t\t\tsetToggleCleared(!toggleCleared);\n\t\t\t\t\tsetDatos(differenceBy(datos, selectedRows, 'title'));\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn (\n\t\t\t\t<Button key=\"delete\" onClick={handleDelete} style={{ backgroundColor: 'red' }} icon>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}, [data, selectedRows, toggleCleared]);\n\n\treturn (\n\t\t<>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t{loading ? (\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Center>\n\t\t\t\t\t<CircularProgress color=\"primary\" size={60} />\n\t\t\t\t\t</Center>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Grid  item xs={12}>\n\t\t\t\t\t\t<DataTable\n\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\tpagination\n\t\t\t\t\t\t\tcolumns={columnas}\n\t\t\t\t\t\t\tdata={datos}\n\t\t\t\t\t\t\tselectableRows\n\t\t\t\t\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};"]},"metadata":{},"sourceType":"module"}