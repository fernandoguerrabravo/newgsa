{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/forms/tables/GridTable.js\",\n    _s = $RefreshSig$();\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid'; // table columns\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 160,\n  valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n}, {\n  field: 'firstName',\n  headerName: 'First name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 130\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 90\n}]; // table data\n\nconst rows = [{\n  id: 1,\n  lastName: 'Snow',\n  firstName: 'Jon',\n  age: 35\n}, {\n  id: 2,\n  lastName: 'Lancaster',\n  firstName: 'Cersei',\n  age: 42\n}, {\n  id: 3,\n  lastName: 'Lancaster',\n  firstName: 'Jaime',\n  age: 45\n}, {\n  id: 4,\n  lastName: 'Stark',\n  firstName: 'Arya',\n  age: 16\n}, {\n  id: 5,\n  lastName: 'Targaryen',\n  firstName: 'Daenerys',\n  age: null\n}, {\n  id: 6,\n  lastName: 'Melisandre',\n  firstName: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: 'Clifford',\n  firstName: 'Ferrara',\n  age: 44\n}, {\n  id: 8,\n  lastName: 'Frances',\n  firstName: 'Rossini',\n  age: 36\n}, {\n  id: 9,\n  lastName: 'Roxie',\n  firstName: 'Harvey',\n  age: 65\n}]; // ==============================|| TABLE - BASIC DATA GRID ||============================== //\n\nexport default function TableDataGrid() {\n  _s();\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: '100%',\n      '& .MuiDataGrid-root': {\n        border: 'none',\n        '& .MuiDataGrid-cell': {\n          borderColor: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\n        },\n        '& .MuiDataGrid-columnsContainer': {\n          color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900',\n          borderColor: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\n        },\n        '& .MuiDataGrid-columnSeparator': {\n          color: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableDataGrid, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TableDataGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableDataGrid\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/forms/tables/GridTable.js"],"names":["useTheme","Box","DataGrid","columns","field","headerName","width","description","sortable","valueGetter","params","getValue","id","type","rows","lastName","firstName","age","TableDataGrid","theme","height","border","borderColor","palette","mode","text","primary","color"],"mappings":"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","sourcesContent":["// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// table columns\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        description: 'This column has a value getter and is not sortable.',\r\n        sortable: false,\r\n        width: 160,\r\n        valueGetter: (params) => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\r\n    },\r\n    { field: 'firstName', headerName: 'First name', width: 130 },\r\n    { field: 'lastName', headerName: 'Last name', width: 130 },\r\n    {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 90\r\n    }\r\n];\r\n\r\n// table data\r\nconst rows = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n    { id: 2, lastName: 'Lancaster', firstName: 'Cersei', age: 42 },\r\n    { id: 3, lastName: 'Lancaster', firstName: 'Jaime', age: 45 },\r\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 }\r\n];\r\n\r\n// ==============================|| TABLE - BASIC DATA GRID ||============================== //\r\n\r\nexport default function TableDataGrid() {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: 400,\r\n                width: '100%',\r\n                '& .MuiDataGrid-root': {\r\n                    border: 'none',\r\n                    '& .MuiDataGrid-cell': {\r\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\r\n                    },\r\n                    '& .MuiDataGrid-columnsContainer': {\r\n                        color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900',\r\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\r\n                    },\r\n                    '& .MuiDataGrid-columnSeparator': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.text.primary + 15 : 'grey.200'\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}