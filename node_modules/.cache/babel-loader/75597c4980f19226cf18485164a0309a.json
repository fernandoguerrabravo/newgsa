{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/contexts/Auth0Context.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { createContext, useEffect, useReducer } from 'react'; // third-party\n\nimport { Auth0Client, User } from '@auth0/auth0-spa-js'; // reducer - state management\n\nimport { LOGIN, LOGOUT } from 'store/actions';\nimport accountReducer from 'store/accountReducer'; // project imports\n\nimport Loader from 'ui-component/Loader';\nimport config from 'config'; // constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet auth0Client;\nlet sapo;\nconst initialState = {\n  isLoggedIn: false,\n  isInitialized: false,\n  user: null\n}; // ==============================|| AUTH0 CONTEXT & PROVIDER ||============================== //\n\nconst Auth0Context = /*#__PURE__*/createContext(null);\nexport const Auth0Provider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(accountReducer, initialState);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        auth0Client = new Auth0Client({\n          redirect_uri: window.location.origin,\n          ...config.auth0\n        });\n        sapo = new User();\n        await auth0Client.checkSession();\n        const isLoggedIn = await auth0Client.isAuthenticated();\n\n        if (isLoggedIn) {\n          const user = await auth0Client.getUser();\n          dispatch({\n            type: LOGIN,\n            payload: {\n              isLoggedIn: true,\n              user: {\n                id: user === null || user === void 0 ? void 0 : user.sub,\n                email: user === null || user === void 0 ? void 0 : user.email\n              }\n            }\n          });\n        } else {\n          dispatch({\n            type: LOGOUT\n          });\n        }\n      } catch (err) {\n        dispatch({\n          type: LOGOUT\n        });\n      }\n    };\n\n    init();\n  }, []);\n\n  const login = async options => {\n    await auth0Client.loginWithPopup(options);\n    const isLoggedIn = await auth0Client.isAuthenticated();\n\n    if (isLoggedIn) {\n      const user = await auth0Client.getUser();\n      const pico = await sapo.zoneinfo();\n      console.log(\"PICOPIC\", pico);\n      dispatch({\n        type: LOGIN,\n        payload: {\n          isLoggedIn: true,\n          user: {\n            id: user === null || user === void 0 ? void 0 : user.sub,\n            avatar: user === null || user === void 0 ? void 0 : user.picture,\n            email: user === null || user === void 0 ? void 0 : user.email,\n            name: user === null || user === void 0 ? void 0 : user.name,\n            tier: 'Premium'\n          }\n        }\n      });\n    }\n  };\n\n  const logout = () => {\n    auth0Client.logout();\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  const resetPassword = email => console.log(email);\n\n  const updateProfile = () => {};\n\n  if (state.isInitialized !== undefined && !state.isInitialized) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Auth0Context.Provider, {\n    value: { ...state,\n      login,\n      logout,\n      resetPassword,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Auth0Provider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = Auth0Provider;\nAuth0Provider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Auth0Context;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth0Provider\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/contexts/Auth0Context.js"],"names":["PropTypes","createContext","useEffect","useReducer","Auth0Client","User","LOGIN","LOGOUT","accountReducer","Loader","config","auth0Client","sapo","initialState","isLoggedIn","isInitialized","user","Auth0Context","Auth0Provider","children","state","dispatch","init","redirect_uri","window","location","origin","auth0","checkSession","isAuthenticated","getUser","type","payload","id","sub","email","err","login","options","loginWithPopup","pico","zoneinfo","console","log","avatar","picture","name","tier","logout","resetPassword","updateProfile","undefined","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createContext, useEffect, useReducer } from 'react';\r\n\r\n// third-party\r\nimport { Auth0Client, User } from '@auth0/auth0-spa-js';\r\n\r\n// reducer - state management\r\nimport { LOGIN, LOGOUT } from 'store/actions';\r\nimport accountReducer from 'store/accountReducer';\r\n\r\n// project imports\r\nimport Loader from 'ui-component/Loader';\r\nimport config from 'config';\r\n\r\n// constant\r\nlet auth0Client;\r\nlet sapo;\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    user: null\r\n};\r\n\r\n// ==============================|| AUTH0 CONTEXT & PROVIDER ||============================== //\r\n\r\nconst Auth0Context = createContext(null);\r\n\r\nexport const Auth0Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(accountReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                auth0Client = new Auth0Client({\r\n                    redirect_uri: window.location.origin,\r\n                    ...config.auth0\r\n                });\r\n                sapo = new User()\r\n\r\n                await auth0Client.checkSession();\r\n                const isLoggedIn = await auth0Client.isAuthenticated();\r\n\r\n                if (isLoggedIn) {\r\n                    const user = await auth0Client.getUser()\r\n                   \r\n                    dispatch({\r\n                        type: LOGIN,\r\n                        payload: {\r\n                            isLoggedIn: true,\r\n                            user: {\r\n                                id: user?.sub,\r\n                                email: user?.email\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: LOGOUT\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                dispatch({\r\n                    type: LOGOUT\r\n                });\r\n            }\r\n        };\r\n\r\n        init();\r\n    }, []);\r\n\r\n    const login = async (options) => {\r\n        await auth0Client.loginWithPopup(options);\r\n        const isLoggedIn = await auth0Client.isAuthenticated();\r\n\r\n        if (isLoggedIn) {\r\n            const user = await auth0Client.getUser();\r\n            const pico = await sapo.zoneinfo()\r\n            console.log(\"PICOPIC\", pico)\r\n            dispatch({\r\n                type: LOGIN,\r\n                payload: {\r\n                    isLoggedIn: true,\r\n                    user: {\r\n                        id: user?.sub,\r\n                        avatar: user?.picture,\r\n                        email: user?.email,\r\n                        name: user?.name,\r\n                        tier: 'Premium'\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        auth0Client.logout();\r\n\r\n        dispatch({\r\n            type: LOGOUT\r\n        });\r\n    };\r\n\r\n    const resetPassword = (email) => console.log(email);\r\n\r\n    const updateProfile = () => {};\r\n\r\n    if (state.isInitialized !== undefined && !state.isInitialized) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return <Auth0Context.Provider value={{ ...state, login, logout, resetPassword, updateProfile }}>{children}</Auth0Context.Provider>;\r\n};\r\n\r\nAuth0Provider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Auth0Context;\r\n"]},"metadata":{},"sourceType":"module"}