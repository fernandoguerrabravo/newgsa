{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/forms/plugins/AutoComplete.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { Autocomplete, Grid, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: 'it&apos;s a Wonderful Life',\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}]; // country options\n\nconst countries = [{\n  code: 'AD',\n  label: 'Andorra',\n  phone: '376'\n}, {\n  code: 'AE',\n  label: 'United Arab Emirates',\n  phone: '971'\n}, {\n  code: 'AF',\n  label: 'Afghanistan',\n  phone: '93'\n}, {\n  code: 'AG',\n  label: 'Antigua and Barbuda',\n  phone: '1-268'\n}, {\n  code: 'AI',\n  label: 'Anguilla',\n  phone: '1-264'\n}, {\n  code: 'AL',\n  label: 'Albania',\n  phone: '355'\n}, {\n  code: 'AM',\n  label: 'Armenia',\n  phone: '374'\n}, {\n  code: 'AO',\n  label: 'Angola',\n  phone: '244'\n}, {\n  code: 'AQ',\n  label: 'Antarctica',\n  phone: '672'\n}, {\n  code: 'AR',\n  label: 'Argentina',\n  phone: '54'\n}, {\n  code: 'AS',\n  label: 'American Samoa',\n  phone: '1-684'\n}, {\n  code: 'AT',\n  label: 'Austria',\n  phone: '43'\n}, {\n  code: 'AU',\n  label: 'Australia',\n  phone: '61',\n  suggested: true\n}, {\n  code: 'AW',\n  label: 'Aruba',\n  phone: '297'\n}, {\n  code: 'AX',\n  label: 'Alland Islands',\n  phone: '358'\n}, {\n  code: 'AZ',\n  label: 'Azerbaijan',\n  phone: '994'\n}, {\n  code: 'BA',\n  label: 'Bosnia and Herzegovina',\n  phone: '387'\n}, {\n  code: 'BB',\n  label: 'Barbados',\n  phone: '1-246'\n}, {\n  code: 'BD',\n  label: 'Bangladesh',\n  phone: '880'\n}, {\n  code: 'BE',\n  label: 'Belgium',\n  phone: '32'\n}, {\n  code: 'BF',\n  label: 'Burkina Faso',\n  phone: '226'\n}, {\n  code: 'BG',\n  label: 'Bulgaria',\n  phone: '359'\n}, {\n  code: 'BH',\n  label: 'Bahrain',\n  phone: '973'\n}, {\n  code: 'BI',\n  label: 'Burundi',\n  phone: '257'\n}, {\n  code: 'BJ',\n  label: 'Benin',\n  phone: '229'\n}, {\n  code: 'BL',\n  label: 'Saint Barthelemy',\n  phone: '590'\n}, {\n  code: 'BM',\n  label: 'Bermuda',\n  phone: '1-441'\n}, {\n  code: 'BN',\n  label: 'Brunei Darussalam',\n  phone: '673'\n}, {\n  code: 'BO',\n  label: 'Bolivia',\n  phone: '591'\n}, {\n  code: 'BR',\n  label: 'Brazil',\n  phone: '55'\n}, {\n  code: 'BS',\n  label: 'Bahamas',\n  phone: '1-242'\n}, {\n  code: 'BT',\n  label: 'Bhutan',\n  phone: '975'\n}, {\n  code: 'BV',\n  label: 'Bouvet Island',\n  phone: '47'\n}, {\n  code: 'BW',\n  label: 'Botswana',\n  phone: '267'\n}, {\n  code: 'BY',\n  label: 'Belarus',\n  phone: '375'\n}, {\n  code: 'BZ',\n  label: 'Belize',\n  phone: '501'\n}, {\n  code: 'CA',\n  label: 'Canada',\n  phone: '1',\n  suggested: true\n}, {\n  code: 'CC',\n  label: 'Cocos (Keeling) Islands',\n  phone: '61'\n}, {\n  code: 'CD',\n  label: 'Congo, Democratic Republic of the',\n  phone: '243'\n}, {\n  code: 'CF',\n  label: 'Central African Republic',\n  phone: '236'\n}, {\n  code: 'CG',\n  label: 'Congo, Republic of the',\n  phone: '242'\n}, {\n  code: 'CH',\n  label: 'Switzerland',\n  phone: '41'\n}, {\n  code: 'CI',\n  label: \"Cote d'Ivoire\",\n  phone: '225'\n}, {\n  code: 'CK',\n  label: 'Cook Islands',\n  phone: '682'\n}, {\n  code: 'CL',\n  label: 'Chile',\n  phone: '56'\n}, {\n  code: 'CM',\n  label: 'Cameroon',\n  phone: '237'\n}, {\n  code: 'CN',\n  label: 'China',\n  phone: '86'\n}, {\n  code: 'CO',\n  label: 'Colombia',\n  phone: '57'\n}, {\n  code: 'CR',\n  label: 'Costa Rica',\n  phone: '506'\n}, {\n  code: 'CU',\n  label: 'Cuba',\n  phone: '53'\n}, {\n  code: 'CV',\n  label: 'Cape Verde',\n  phone: '238'\n}, {\n  code: 'CW',\n  label: 'Curacao',\n  phone: '599'\n}, {\n  code: 'CX',\n  label: 'Christmas Island',\n  phone: '61'\n}, {\n  code: 'CY',\n  label: 'Cyprus',\n  phone: '357'\n}, {\n  code: 'CZ',\n  label: 'Czech Republic',\n  phone: '420'\n}, {\n  code: 'DE',\n  label: 'Germany',\n  phone: '49',\n  suggested: true\n}, {\n  code: 'DJ',\n  label: 'Djibouti',\n  phone: '253'\n}, {\n  code: 'DK',\n  label: 'Denmark',\n  phone: '45'\n}, {\n  code: 'DM',\n  label: 'Dominica',\n  phone: '1-767'\n}, {\n  code: 'DO',\n  label: 'Dominican Republic',\n  phone: '1-809'\n}, {\n  code: 'DZ',\n  label: 'Algeria',\n  phone: '213'\n}, {\n  code: 'EC',\n  label: 'Ecuador',\n  phone: '593'\n}, {\n  code: 'EE',\n  label: 'Estonia',\n  phone: '372'\n}, {\n  code: 'EG',\n  label: 'Egypt',\n  phone: '20'\n}, {\n  code: 'EH',\n  label: 'Western Sahara',\n  phone: '212'\n}, {\n  code: 'ER',\n  label: 'Eritrea',\n  phone: '291'\n}, {\n  code: 'ES',\n  label: 'Spain',\n  phone: '34'\n}, {\n  code: 'ET',\n  label: 'Ethiopia',\n  phone: '251'\n}, {\n  code: 'FI',\n  label: 'Finland',\n  phone: '358'\n}, {\n  code: 'FJ',\n  label: 'Fiji',\n  phone: '679'\n}, {\n  code: 'FK',\n  label: 'Falkland Islands (Malvinas)',\n  phone: '500'\n}, {\n  code: 'FM',\n  label: 'Micronesia, Federated States of',\n  phone: '691'\n}, {\n  code: 'FO',\n  label: 'Faroe Islands',\n  phone: '298'\n}, {\n  code: 'FR',\n  label: 'France',\n  phone: '33',\n  suggested: true\n}, {\n  code: 'GA',\n  label: 'Gabon',\n  phone: '241'\n}, {\n  code: 'GB',\n  label: 'United Kingdom',\n  phone: '44'\n}, {\n  code: 'GD',\n  label: 'Grenada',\n  phone: '1-473'\n}, {\n  code: 'GE',\n  label: 'Georgia',\n  phone: '995'\n}, {\n  code: 'GF',\n  label: 'French Guiana',\n  phone: '594'\n}, {\n  code: 'GG',\n  label: 'Guernsey',\n  phone: '44'\n}, {\n  code: 'GH',\n  label: 'Ghana',\n  phone: '233'\n}, {\n  code: 'GI',\n  label: 'Gibraltar',\n  phone: '350'\n}, {\n  code: 'GL',\n  label: 'Greenland',\n  phone: '299'\n}, {\n  code: 'GM',\n  label: 'Gambia',\n  phone: '220'\n}, {\n  code: 'GN',\n  label: 'Guinea',\n  phone: '224'\n}, {\n  code: 'GP',\n  label: 'Guadeloupe',\n  phone: '590'\n}, {\n  code: 'GQ',\n  label: 'Equatorial Guinea',\n  phone: '240'\n}, {\n  code: 'GR',\n  label: 'Greece',\n  phone: '30'\n}, {\n  code: 'GS',\n  label: 'South Georgia and the South Sandwich Islands',\n  phone: '500'\n}, {\n  code: 'GT',\n  label: 'Guatemala',\n  phone: '502'\n}, {\n  code: 'GU',\n  label: 'Guam',\n  phone: '1-671'\n}, {\n  code: 'GW',\n  label: 'Guinea-Bissau',\n  phone: '245'\n}, {\n  code: 'GY',\n  label: 'Guyana',\n  phone: '592'\n}, {\n  code: 'HK',\n  label: 'Hong Kong',\n  phone: '852'\n}, {\n  code: 'HM',\n  label: 'Heard Island and McDonald Islands',\n  phone: '672'\n}, {\n  code: 'HN',\n  label: 'Honduras',\n  phone: '504'\n}, {\n  code: 'HR',\n  label: 'Croatia',\n  phone: '385'\n}, {\n  code: 'HT',\n  label: 'Haiti',\n  phone: '509'\n}, {\n  code: 'HU',\n  label: 'Hungary',\n  phone: '36'\n}, {\n  code: 'ID',\n  label: 'Indonesia',\n  phone: '62'\n}, {\n  code: 'IE',\n  label: 'Ireland',\n  phone: '353'\n}, {\n  code: 'IL',\n  label: 'Israel',\n  phone: '972'\n}, {\n  code: 'IM',\n  label: 'Isle of Man',\n  phone: '44'\n}, {\n  code: 'IN',\n  label: 'India',\n  phone: '91'\n}, {\n  code: 'IO',\n  label: 'British Indian Ocean Territory',\n  phone: '246'\n}, {\n  code: 'IQ',\n  label: 'Iraq',\n  phone: '964'\n}, {\n  code: 'IR',\n  label: 'Iran, Islamic Republic of',\n  phone: '98'\n}, {\n  code: 'IS',\n  label: 'Iceland',\n  phone: '354'\n}, {\n  code: 'IT',\n  label: 'Italy',\n  phone: '39'\n}, {\n  code: 'JE',\n  label: 'Jersey',\n  phone: '44'\n}, {\n  code: 'JM',\n  label: 'Jamaica',\n  phone: '1-876'\n}, {\n  code: 'JO',\n  label: 'Jordan',\n  phone: '962'\n}, {\n  code: 'JP',\n  label: 'Japan',\n  phone: '81',\n  suggested: true\n}, {\n  code: 'KE',\n  label: 'Kenya',\n  phone: '254'\n}, {\n  code: 'KG',\n  label: 'Kyrgyzstan',\n  phone: '996'\n}, {\n  code: 'KH',\n  label: 'Cambodia',\n  phone: '855'\n}, {\n  code: 'KI',\n  label: 'Kiribati',\n  phone: '686'\n}, {\n  code: 'KM',\n  label: 'Comoros',\n  phone: '269'\n}, {\n  code: 'KN',\n  label: 'Saint Kitts and Nevis',\n  phone: '1-869'\n}, {\n  code: 'KP',\n  label: \"Korea, Democratic People's Republic of\",\n  phone: '850'\n}, {\n  code: 'KR',\n  label: 'Korea, Republic of',\n  phone: '82'\n}, {\n  code: 'KW',\n  label: 'Kuwait',\n  phone: '965'\n}, {\n  code: 'KY',\n  label: 'Cayman Islands',\n  phone: '1-345'\n}, {\n  code: 'KZ',\n  label: 'Kazakhstan',\n  phone: '7'\n}, {\n  code: 'LA',\n  label: \"Lao People's Democratic Republic\",\n  phone: '856'\n}, {\n  code: 'LB',\n  label: 'Lebanon',\n  phone: '961'\n}, {\n  code: 'LC',\n  label: 'Saint Lucia',\n  phone: '1-758'\n}, {\n  code: 'LI',\n  label: 'Liechtenstein',\n  phone: '423'\n}, {\n  code: 'LK',\n  label: 'Sri Lanka',\n  phone: '94'\n}, {\n  code: 'LR',\n  label: 'Liberia',\n  phone: '231'\n}, {\n  code: 'LS',\n  label: 'Lesotho',\n  phone: '266'\n}, {\n  code: 'LT',\n  label: 'Lithuania',\n  phone: '370'\n}, {\n  code: 'LU',\n  label: 'Luxembourg',\n  phone: '352'\n}, {\n  code: 'LV',\n  label: 'Latvia',\n  phone: '371'\n}, {\n  code: 'LY',\n  label: 'Libya',\n  phone: '218'\n}, {\n  code: 'MA',\n  label: 'Morocco',\n  phone: '212'\n}, {\n  code: 'MC',\n  label: 'Monaco',\n  phone: '377'\n}, {\n  code: 'MD',\n  label: 'Moldova, Republic of',\n  phone: '373'\n}, {\n  code: 'ME',\n  label: 'Montenegro',\n  phone: '382'\n}, {\n  code: 'MF',\n  label: 'Saint Martin (French part)',\n  phone: '590'\n}, {\n  code: 'MG',\n  label: 'Madagascar',\n  phone: '261'\n}, {\n  code: 'MH',\n  label: 'Marshall Islands',\n  phone: '692'\n}, {\n  code: 'MK',\n  label: 'Macedonia, the Former Yugoslav Republic of',\n  phone: '389'\n}, {\n  code: 'ML',\n  label: 'Mali',\n  phone: '223'\n}, {\n  code: 'MM',\n  label: 'Myanmar',\n  phone: '95'\n}, {\n  code: 'MN',\n  label: 'Mongolia',\n  phone: '976'\n}, {\n  code: 'MO',\n  label: 'Macao',\n  phone: '853'\n}, {\n  code: 'MP',\n  label: 'Northern Mariana Islands',\n  phone: '1-670'\n}, {\n  code: 'MQ',\n  label: 'Martinique',\n  phone: '596'\n}, {\n  code: 'MR',\n  label: 'Mauritania',\n  phone: '222'\n}, {\n  code: 'MS',\n  label: 'Montserrat',\n  phone: '1-664'\n}, {\n  code: 'MT',\n  label: 'Malta',\n  phone: '356'\n}, {\n  code: 'MU',\n  label: 'Mauritius',\n  phone: '230'\n}, {\n  code: 'MV',\n  label: 'Maldives',\n  phone: '960'\n}, {\n  code: 'MW',\n  label: 'Malawi',\n  phone: '265'\n}, {\n  code: 'MX',\n  label: 'Mexico',\n  phone: '52'\n}, {\n  code: 'MY',\n  label: 'Malaysia',\n  phone: '60'\n}, {\n  code: 'MZ',\n  label: 'Mozambique',\n  phone: '258'\n}, {\n  code: 'NA',\n  label: 'Namibia',\n  phone: '264'\n}, {\n  code: 'NC',\n  label: 'New Caledonia',\n  phone: '687'\n}, {\n  code: 'NE',\n  label: 'Niger',\n  phone: '227'\n}, {\n  code: 'NF',\n  label: 'Norfolk Island',\n  phone: '672'\n}, {\n  code: 'NG',\n  label: 'Nigeria',\n  phone: '234'\n}, {\n  code: 'NI',\n  label: 'Nicaragua',\n  phone: '505'\n}, {\n  code: 'NL',\n  label: 'Netherlands',\n  phone: '31'\n}, {\n  code: 'NO',\n  label: 'Norway',\n  phone: '47'\n}, {\n  code: 'NP',\n  label: 'Nepal',\n  phone: '977'\n}, {\n  code: 'NR',\n  label: 'Nauru',\n  phone: '674'\n}, {\n  code: 'NU',\n  label: 'Niue',\n  phone: '683'\n}, {\n  code: 'NZ',\n  label: 'New Zealand',\n  phone: '64'\n}, {\n  code: 'OM',\n  label: 'Oman',\n  phone: '968'\n}, {\n  code: 'PA',\n  label: 'Panama',\n  phone: '507'\n}, {\n  code: 'PE',\n  label: 'Peru',\n  phone: '51'\n}, {\n  code: 'PF',\n  label: 'French Polynesia',\n  phone: '689'\n}, {\n  code: 'PG',\n  label: 'Papua New Guinea',\n  phone: '675'\n}, {\n  code: 'PH',\n  label: 'Philippines',\n  phone: '63'\n}, {\n  code: 'PK',\n  label: 'Pakistan',\n  phone: '92'\n}, {\n  code: 'PL',\n  label: 'Poland',\n  phone: '48'\n}, {\n  code: 'PM',\n  label: 'Saint Pierre and Miquelon',\n  phone: '508'\n}, {\n  code: 'PN',\n  label: 'Pitcairn',\n  phone: '870'\n}, {\n  code: 'PR',\n  label: 'Puerto Rico',\n  phone: '1'\n}, {\n  code: 'PS',\n  label: 'Palestine, State of',\n  phone: '970'\n}, {\n  code: 'PT',\n  label: 'Portugal',\n  phone: '351'\n}, {\n  code: 'PW',\n  label: 'Palau',\n  phone: '680'\n}, {\n  code: 'PY',\n  label: 'Paraguay',\n  phone: '595'\n}, {\n  code: 'QA',\n  label: 'Qatar',\n  phone: '974'\n}, {\n  code: 'RE',\n  label: 'Reunion',\n  phone: '262'\n}, {\n  code: 'RO',\n  label: 'Romania',\n  phone: '40'\n}, {\n  code: 'RS',\n  label: 'Serbia',\n  phone: '381'\n}, {\n  code: 'RU',\n  label: 'Russian Federation',\n  phone: '7'\n}, {\n  code: 'RW',\n  label: 'Rwanda',\n  phone: '250'\n}, {\n  code: 'SA',\n  label: 'Saudi Arabia',\n  phone: '966'\n}, {\n  code: 'SB',\n  label: 'Solomon Islands',\n  phone: '677'\n}, {\n  code: 'SC',\n  label: 'Seychelles',\n  phone: '248'\n}, {\n  code: 'SD',\n  label: 'Sudan',\n  phone: '249'\n}, {\n  code: 'SE',\n  label: 'Sweden',\n  phone: '46'\n}, {\n  code: 'SG',\n  label: 'Singapore',\n  phone: '65'\n}, {\n  code: 'SH',\n  label: 'Saint Helena',\n  phone: '290'\n}, {\n  code: 'SI',\n  label: 'Slovenia',\n  phone: '386'\n}, {\n  code: 'SJ',\n  label: 'Svalbard and Jan Mayen',\n  phone: '47'\n}, {\n  code: 'SK',\n  label: 'Slovakia',\n  phone: '421'\n}, {\n  code: 'SL',\n  label: 'Sierra Leone',\n  phone: '232'\n}, {\n  code: 'SM',\n  label: 'San Marino',\n  phone: '378'\n}, {\n  code: 'SN',\n  label: 'Senegal',\n  phone: '221'\n}, {\n  code: 'SO',\n  label: 'Somalia',\n  phone: '252'\n}, {\n  code: 'SR',\n  label: 'Suriname',\n  phone: '597'\n}, {\n  code: 'SS',\n  label: 'South Sudan',\n  phone: '211'\n}, {\n  code: 'ST',\n  label: 'Sao Tome and Principe',\n  phone: '239'\n}, {\n  code: 'SV',\n  label: 'El Salvador',\n  phone: '503'\n}, {\n  code: 'SX',\n  label: 'Sint Maarten (Dutch part)',\n  phone: '1-721'\n}, {\n  code: 'SY',\n  label: 'Syrian Arab Republic',\n  phone: '963'\n}, {\n  code: 'SZ',\n  label: 'Swaziland',\n  phone: '268'\n}, {\n  code: 'TC',\n  label: 'Turks and Caicos Islands',\n  phone: '1-649'\n}, {\n  code: 'TD',\n  label: 'Chad',\n  phone: '235'\n}, {\n  code: 'TF',\n  label: 'French Southern Territories',\n  phone: '262'\n}, {\n  code: 'TG',\n  label: 'Togo',\n  phone: '228'\n}, {\n  code: 'TH',\n  label: 'Thailand',\n  phone: '66'\n}, {\n  code: 'TJ',\n  label: 'Tajikistan',\n  phone: '992'\n}, {\n  code: 'TK',\n  label: 'Tokelau',\n  phone: '690'\n}, {\n  code: 'TL',\n  label: 'Timor-Leste',\n  phone: '670'\n}, {\n  code: 'TM',\n  label: 'Turkmenistan',\n  phone: '993'\n}, {\n  code: 'TN',\n  label: 'Tunisia',\n  phone: '216'\n}, {\n  code: 'TO',\n  label: 'Tonga',\n  phone: '676'\n}, {\n  code: 'TR',\n  label: 'Turkey',\n  phone: '90'\n}, {\n  code: 'TT',\n  label: 'Trinidad and Tobago',\n  phone: '1-868'\n}, {\n  code: 'TV',\n  label: 'Tuvalu',\n  phone: '688'\n}, {\n  code: 'TW',\n  label: 'Taiwan, Province of China',\n  phone: '886'\n}, {\n  code: 'TZ',\n  label: 'United Republic of Tanzania',\n  phone: '255'\n}, {\n  code: 'UA',\n  label: 'Ukraine',\n  phone: '380'\n}, {\n  code: 'UG',\n  label: 'Uganda',\n  phone: '256'\n}, {\n  code: 'US',\n  label: 'United States',\n  phone: '1',\n  suggested: true\n}, {\n  code: 'UY',\n  label: 'Uruguay',\n  phone: '598'\n}, {\n  code: 'UZ',\n  label: 'Uzbekistan',\n  phone: '998'\n}, {\n  code: 'VA',\n  label: 'Holy See (Vatican City State)',\n  phone: '379'\n}, {\n  code: 'VC',\n  label: 'Saint Vincent and the Grenadines',\n  phone: '1-784'\n}, {\n  code: 'VE',\n  label: 'Venezuela',\n  phone: '58'\n}, {\n  code: 'VG',\n  label: 'British Virgin Islands',\n  phone: '1-284'\n}, {\n  code: 'VI',\n  label: 'US Virgin Islands',\n  phone: '1-340'\n}, {\n  code: 'VN',\n  label: 'Vietnam',\n  phone: '84'\n}, {\n  code: 'VU',\n  label: 'Vanuatu',\n  phone: '678'\n}, {\n  code: 'WF',\n  label: 'Wallis and Futuna',\n  phone: '681'\n}, {\n  code: 'WS',\n  label: 'Samoa',\n  phone: '685'\n}, {\n  code: 'XK',\n  label: 'Kosovo',\n  phone: '383'\n}, {\n  code: 'YE',\n  label: 'Yemen',\n  phone: '967'\n}, {\n  code: 'YT',\n  label: 'Mayotte',\n  phone: '262'\n}, {\n  code: 'ZA',\n  label: 'South Africa',\n  phone: '27'\n}, {\n  code: 'ZM',\n  label: 'Zambia',\n  phone: '260'\n}, {\n  code: 'ZW',\n  label: 'Zimbabwe',\n  phone: '263'\n}];\nconst timeSlots = Array.from(new Array(24 * 2)).map((_, index) => `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${index % 2 === 0 ? '00' : '30'}`);\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst options = ['Option 1', 'Option 2']; // ==============================|| PLUGIN - AUTOCOMPLETE ||============================== //\n\nconst FrmAutocomplete = () => {\n  _s();\n\n  const [valueControl, setValueControl] = useState(null);\n  const [value, setValue] = useState(options[0]);\n  const [inputValue, setInputValue] = useState('');\n  const [value2, setValue2] = useState(options[0]);\n  const defaultProps = {\n    options: top100Films,\n    getOptionLabel: option => option.title\n  };\n  const flatProps = {\n    options: top100Films.map(option => option.title)\n  };\n  const optionsGroup = top100Films.map(option => {\n    const firstLetter = option.title[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Autocomplete\",\n    secondary: /*#__PURE__*/_jsxDEV(SecondaryAction, {\n      link: \"https://next.material-ui.com/components/autocomplete/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 51\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Combo Box\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"combo-box-demo\",\n                options: top100Films,\n                getOptionLabel: option => option.title,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Combo box\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Country Select\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"country-select-demo\",\n                options: countries,\n                autoHighlight: true,\n                getOptionLabel: option => option.label,\n                renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n                  style: {\n                    fontSize: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: 10,\n                      fontSize: 18\n                    },\n                    children: countryToFlag(option.code)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 45\n                  }, this), option.label, \" (\", option.code, \") +\", option.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 41\n                }, this),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Choose a country\",\n                  inputProps: { ...params.inputProps,\n                    autoComplete: 'new-password' // disable autocomplete and autofill\n\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Controllable states\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: `value: ${value !== null ? `'${value}'` : 'null'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: `inputValue: '${inputValue}'`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                value: value,\n                onChange: (event, newValue) => {\n                  setValue(newValue);\n                },\n                inputValue: inputValue,\n                onInputChange: (event, newInputValue) => {\n                  setInputValue(newInputValue);\n                },\n                id: \"controllable-states-demo\",\n                options: options,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Controllable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Free Solo\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"free-solo-demo\",\n                freeSolo: true,\n                options: top100Films.map(option => option.title),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Free Solo\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Search Input\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                freeSolo: true,\n                id: \"free-solo-2-demo\",\n                disableClearable: true,\n                options: top100Films.map(option => option.title),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Search input\",\n                  margin: \"normal\",\n                  InputProps: { ...params.InputProps,\n                    type: 'search'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Creatable\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                value: value2,\n                onChange: (event, newValue) => {\n                  if (typeof newValue === 'string') {\n                    setValue2({\n                      title: newValue\n                    });\n                  } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue2({\n                      title: newValue.inputValue\n                    });\n                  } else {\n                    setValue2(newValue);\n                  }\n                },\n                filterOptions: (data, params) => {\n                  const filtered = filter(data, params); // Suggest the creation of a new value\n\n                  const isExisting = data.some(option => params.inputValue === option.title);\n\n                  if (params.inputValue !== '' && !isExisting) {\n                    filtered.push({\n                      // inputValue,\n                      title: `Add \"${params.inputValue}\"`\n                    });\n                  }\n\n                  return filtered;\n                },\n                selectOnFocus: true,\n                clearOnBlur: true,\n                handleHomeEndKeys: true,\n                id: \"free-solo-with-text-demo\",\n                options: top100Films,\n                getOptionLabel: option => {\n                  // Value selected with enter, right from the input\n                  if (typeof option === 'string') {\n                    return option;\n                  } // Add \"xxx\" option created dynamically\n\n\n                  if (option.inputValue) {\n                    return option.inputValue;\n                  } // Regular option\n\n\n                  return option.title;\n                },\n                renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n                  children: option.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 70\n                }, this),\n                freeSolo: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Free solo with text demo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Grouped\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"grouped-demo\",\n                options: optionsGroup.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter)),\n                groupBy: option => option.firstLetter,\n                getOptionLabel: option => option.title,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"With categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SubCard, {\n              title: \"Disabled Options\",\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"disabled-options-demo\",\n                options: timeSlots,\n                getOptionDisabled: option => option === timeSlots[0] || option === timeSlots[2],\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disabled options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SubCard, {\n          title: \"Playground\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"disable-close-on-select\",\n                disableCloseOnSelect: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disable Close On Select\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"clear-on-escape\",\n                clearOnEscape: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Clear On Escape\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"disable-clearable\",\n                disableClearable: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disable Clearable\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"include-input-in-list\",\n                includeInputInList: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Include Input In List\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...flatProps,\n                id: \"flat-demo\",\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Flat\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"controlled-demo\",\n                value: valueControl,\n                onChange: (event, newValue) => {\n                  setValueControl(newValue);\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Controlled\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"auto-complete\",\n                autoComplete: true,\n                includeInputInList: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Auto Complete\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"disable-list-wrap\",\n                disableListWrap: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disable List Wrap\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"open-on-focus\",\n                openOnFocus: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Open On Focus\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"auto-highlight\",\n                autoHighlight: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Auto Highlight\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"auto-select\",\n                autoSelect: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Auto Select\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"disabled\",\n                disabled: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disabled\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"disable-portal\",\n                disablePortal: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Disable Portal\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"blur-on-select\",\n                blurOnSelect: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Blur On Select\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"clear-on-blur\",\n                clearOnBlur: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Clear On Blur\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, { ...defaultProps,\n                id: \"select-on-focus\",\n                selectOnFocus: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Select On Focus\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FrmAutocomplete, \"ucFnQTYFmnA7fEeXJ9kJ7IimoVU=\");\n\n_c = FrmAutocomplete;\nexport default FrmAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"FrmAutocomplete\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/forms/plugins/AutoComplete.js"],"names":["useState","Autocomplete","Grid","TextField","createFilterOptions","SubCard","MainCard","SecondaryAction","gridSpacing","filter","top100Films","title","year","countries","code","label","phone","suggested","timeSlots","Array","from","map","_","index","Math","floor","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","options","FrmAutocomplete","valueControl","setValueControl","value","setValue","inputValue","setInputValue","value2","setValue2","defaultProps","getOptionLabel","option","flatProps","optionsGroup","firstLetter","test","params","props","fontSize","marginRight","inputProps","autoComplete","event","newValue","newInputValue","InputProps","type","data","filtered","isExisting","some","push","sort","a","b","localeCompare"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Autocomplete, Grid, TextField } from '@mui/material';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 },\r\n    { title: '12 Angry Men', year: 1957 },\r\n    { title: \"Schindler's List\", year: 1993 },\r\n    { title: 'Pulp Fiction', year: 1994 },\r\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n    { title: 'Fight Club', year: 1999 },\r\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n    { title: 'Forrest Gump', year: 1994 },\r\n    { title: 'Inception', year: 2010 },\r\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n    { title: 'Goodfellas', year: 1990 },\r\n    { title: 'The Matrix', year: 1999 },\r\n    { title: 'Seven Samurai', year: 1954 },\r\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n    { title: 'City of God', year: 2002 },\r\n    { title: 'Se7en', year: 1995 },\r\n    { title: 'The Silence of the Lambs', year: 1991 },\r\n    { title: 'it&apos;s a Wonderful Life', year: 1946 },\r\n    { title: 'Life Is Beautiful', year: 1997 },\r\n    { title: 'The Usual Suspects', year: 1995 },\r\n    { title: 'Léon: The Professional', year: 1994 },\r\n    { title: 'Spirited Away', year: 2001 },\r\n    { title: 'Saving Private Ryan', year: 1998 },\r\n    { title: 'Once Upon a Time in the West', year: 1968 },\r\n    { title: 'American History X', year: 1998 },\r\n    { title: 'Interstellar', year: 2014 },\r\n    { title: 'Casablanca', year: 1942 },\r\n    { title: 'City Lights', year: 1931 },\r\n    { title: 'Psycho', year: 1960 },\r\n    { title: 'The Green Mile', year: 1999 },\r\n    { title: 'The Intouchables', year: 2011 },\r\n    { title: 'Modern Times', year: 1936 },\r\n    { title: 'Raiders of the Lost Ark', year: 1981 },\r\n    { title: 'Rear Window', year: 1954 },\r\n    { title: 'The Pianist', year: 2002 },\r\n    { title: 'The Departed', year: 2006 },\r\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n    { title: 'Back to the Future', year: 1985 },\r\n    { title: 'Whiplash', year: 2014 },\r\n    { title: 'Gladiator', year: 2000 },\r\n    { title: 'Memento', year: 2000 },\r\n    { title: 'The Prestige', year: 2006 },\r\n    { title: 'The Lion King', year: 1994 },\r\n    { title: 'Apocalypse Now', year: 1979 },\r\n    { title: 'Alien', year: 1979 },\r\n    { title: 'Sunset Boulevard', year: 1950 },\r\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n    { title: 'The Great Dictator', year: 1940 },\r\n    { title: 'Cinema Paradiso', year: 1988 },\r\n    { title: 'The Lives of Others', year: 2006 },\r\n    { title: 'Grave of the Fireflies', year: 1988 },\r\n    { title: 'Paths of Glory', year: 1957 },\r\n    { title: 'Django Unchained', year: 2012 },\r\n    { title: 'The Shining', year: 1980 },\r\n    { title: 'WALL·E', year: 2008 },\r\n    { title: 'American Beauty', year: 1999 },\r\n    { title: 'The Dark Knight Rises', year: 2012 },\r\n    { title: 'Princess Mononoke', year: 1997 },\r\n    { title: 'Aliens', year: 1986 },\r\n    { title: 'Oldboy', year: 2003 },\r\n    { title: 'Once Upon a Time in America', year: 1984 },\r\n    { title: 'Witness for the Prosecution', year: 1957 },\r\n    { title: 'Das Boot', year: 1981 },\r\n    { title: 'Citizen Kane', year: 1941 },\r\n    { title: 'North by Northwest', year: 1959 },\r\n    { title: 'Vertigo', year: 1958 },\r\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n    { title: 'Reservoir Dogs', year: 1992 },\r\n    { title: 'Braveheart', year: 1995 },\r\n    { title: 'M', year: 1931 },\r\n    { title: 'Requiem for a Dream', year: 2000 },\r\n    { title: 'Amélie', year: 2001 },\r\n    { title: 'A Clockwork Orange', year: 1971 },\r\n    { title: 'Like Stars on Earth', year: 2007 },\r\n    { title: 'Taxi Driver', year: 1976 },\r\n    { title: 'Lawrence of Arabia', year: 1962 },\r\n    { title: 'Double Indemnity', year: 1944 },\r\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n    { title: 'Amadeus', year: 1984 },\r\n    { title: 'To Kill a Mockingbird', year: 1962 },\r\n    { title: 'Toy Story 3', year: 2010 },\r\n    { title: 'Logan', year: 2017 },\r\n    { title: 'Full Metal Jacket', year: 1987 },\r\n    { title: 'Dangal', year: 2016 },\r\n    { title: 'The Sting', year: 1973 },\r\n    { title: '2001: A Space Odyssey', year: 1968 },\r\n    { title: \"Singin' in the Rain\", year: 1952 },\r\n    { title: 'Toy Story', year: 1995 },\r\n    { title: 'Bicycle Thieves', year: 1948 },\r\n    { title: 'The Kid', year: 1921 },\r\n    { title: 'Inglourious Basterds', year: 2009 },\r\n    { title: 'Snatch', year: 2000 },\r\n    { title: '3 Idiots', year: 2009 },\r\n    { title: 'Monty Python and the Holy Grail', year: 1975 }\r\n];\r\n\r\n// country options\r\nconst countries = [\r\n    { code: 'AD', label: 'Andorra', phone: '376' },\r\n    { code: 'AE', label: 'United Arab Emirates', phone: '971' },\r\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n    { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\r\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n    { code: 'AL', label: 'Albania', phone: '355' },\r\n    { code: 'AM', label: 'Armenia', phone: '374' },\r\n    { code: 'AO', label: 'Angola', phone: '244' },\r\n    { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n    { code: 'AR', label: 'Argentina', phone: '54' },\r\n    { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n    { code: 'AT', label: 'Austria', phone: '43' },\r\n    { code: 'AU', label: 'Australia', phone: '61', suggested: true },\r\n    { code: 'AW', label: 'Aruba', phone: '297' },\r\n    { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n    { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n    { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\r\n    { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n    { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n    { code: 'BE', label: 'Belgium', phone: '32' },\r\n    { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n    { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n    { code: 'BH', label: 'Bahrain', phone: '973' },\r\n    { code: 'BI', label: 'Burundi', phone: '257' },\r\n    { code: 'BJ', label: 'Benin', phone: '229' },\r\n    { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n    { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n    { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n    { code: 'BO', label: 'Bolivia', phone: '591' },\r\n    { code: 'BR', label: 'Brazil', phone: '55' },\r\n    { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n    { code: 'BT', label: 'Bhutan', phone: '975' },\r\n    { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n    { code: 'BW', label: 'Botswana', phone: '267' },\r\n    { code: 'BY', label: 'Belarus', phone: '375' },\r\n    { code: 'BZ', label: 'Belize', phone: '501' },\r\n    { code: 'CA', label: 'Canada', phone: '1', suggested: true },\r\n    { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\r\n    { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\r\n    { code: 'CF', label: 'Central African Republic', phone: '236' },\r\n    { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\r\n    { code: 'CH', label: 'Switzerland', phone: '41' },\r\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n    { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n    { code: 'CL', label: 'Chile', phone: '56' },\r\n    { code: 'CM', label: 'Cameroon', phone: '237' },\r\n    { code: 'CN', label: 'China', phone: '86' },\r\n    { code: 'CO', label: 'Colombia', phone: '57' },\r\n    { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n    { code: 'CU', label: 'Cuba', phone: '53' },\r\n    { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n    { code: 'CW', label: 'Curacao', phone: '599' },\r\n    { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n    { code: 'CY', label: 'Cyprus', phone: '357' },\r\n    { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n    { code: 'DE', label: 'Germany', phone: '49', suggested: true },\r\n    { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n    { code: 'DK', label: 'Denmark', phone: '45' },\r\n    { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n    { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\r\n    { code: 'DZ', label: 'Algeria', phone: '213' },\r\n    { code: 'EC', label: 'Ecuador', phone: '593' },\r\n    { code: 'EE', label: 'Estonia', phone: '372' },\r\n    { code: 'EG', label: 'Egypt', phone: '20' },\r\n    { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n    { code: 'ER', label: 'Eritrea', phone: '291' },\r\n    { code: 'ES', label: 'Spain', phone: '34' },\r\n    { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n    { code: 'FI', label: 'Finland', phone: '358' },\r\n    { code: 'FJ', label: 'Fiji', phone: '679' },\r\n    { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\r\n    { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\r\n    { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n    { code: 'FR', label: 'France', phone: '33', suggested: true },\r\n    { code: 'GA', label: 'Gabon', phone: '241' },\r\n    { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n    { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n    { code: 'GE', label: 'Georgia', phone: '995' },\r\n    { code: 'GF', label: 'French Guiana', phone: '594' },\r\n    { code: 'GG', label: 'Guernsey', phone: '44' },\r\n    { code: 'GH', label: 'Ghana', phone: '233' },\r\n    { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n    { code: 'GL', label: 'Greenland', phone: '299' },\r\n    { code: 'GM', label: 'Gambia', phone: '220' },\r\n    { code: 'GN', label: 'Guinea', phone: '224' },\r\n    { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n    { code: 'GR', label: 'Greece', phone: '30' },\r\n    { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\r\n    { code: 'GT', label: 'Guatemala', phone: '502' },\r\n    { code: 'GU', label: 'Guam', phone: '1-671' },\r\n    { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n    { code: 'GY', label: 'Guyana', phone: '592' },\r\n    { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n    { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\r\n    { code: 'HN', label: 'Honduras', phone: '504' },\r\n    { code: 'HR', label: 'Croatia', phone: '385' },\r\n    { code: 'HT', label: 'Haiti', phone: '509' },\r\n    { code: 'HU', label: 'Hungary', phone: '36' },\r\n    { code: 'ID', label: 'Indonesia', phone: '62' },\r\n    { code: 'IE', label: 'Ireland', phone: '353' },\r\n    { code: 'IL', label: 'Israel', phone: '972' },\r\n    { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n    { code: 'IN', label: 'India', phone: '91' },\r\n    { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\r\n    { code: 'IQ', label: 'Iraq', phone: '964' },\r\n    { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\r\n    { code: 'IS', label: 'Iceland', phone: '354' },\r\n    { code: 'IT', label: 'Italy', phone: '39' },\r\n    { code: 'JE', label: 'Jersey', phone: '44' },\r\n    { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n    { code: 'JO', label: 'Jordan', phone: '962' },\r\n    { code: 'JP', label: 'Japan', phone: '81', suggested: true },\r\n    { code: 'KE', label: 'Kenya', phone: '254' },\r\n    { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n    { code: 'KH', label: 'Cambodia', phone: '855' },\r\n    { code: 'KI', label: 'Kiribati', phone: '686' },\r\n    { code: 'KM', label: 'Comoros', phone: '269' },\r\n    { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\r\n    { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\r\n    { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n    { code: 'KW', label: 'Kuwait', phone: '965' },\r\n    { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n    { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n    { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\r\n    { code: 'LB', label: 'Lebanon', phone: '961' },\r\n    { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n    { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n    { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n    { code: 'LR', label: 'Liberia', phone: '231' },\r\n    { code: 'LS', label: 'Lesotho', phone: '266' },\r\n    { code: 'LT', label: 'Lithuania', phone: '370' },\r\n    { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n    { code: 'LV', label: 'Latvia', phone: '371' },\r\n    { code: 'LY', label: 'Libya', phone: '218' },\r\n    { code: 'MA', label: 'Morocco', phone: '212' },\r\n    { code: 'MC', label: 'Monaco', phone: '377' },\r\n    { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\r\n    { code: 'ME', label: 'Montenegro', phone: '382' },\r\n    { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\r\n    { code: 'MG', label: 'Madagascar', phone: '261' },\r\n    { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n    { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\r\n    { code: 'ML', label: 'Mali', phone: '223' },\r\n    { code: 'MM', label: 'Myanmar', phone: '95' },\r\n    { code: 'MN', label: 'Mongolia', phone: '976' },\r\n    { code: 'MO', label: 'Macao', phone: '853' },\r\n    { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\r\n    { code: 'MQ', label: 'Martinique', phone: '596' },\r\n    { code: 'MR', label: 'Mauritania', phone: '222' },\r\n    { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n    { code: 'MT', label: 'Malta', phone: '356' },\r\n    { code: 'MU', label: 'Mauritius', phone: '230' },\r\n    { code: 'MV', label: 'Maldives', phone: '960' },\r\n    { code: 'MW', label: 'Malawi', phone: '265' },\r\n    { code: 'MX', label: 'Mexico', phone: '52' },\r\n    { code: 'MY', label: 'Malaysia', phone: '60' },\r\n    { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n    { code: 'NA', label: 'Namibia', phone: '264' },\r\n    { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n    { code: 'NE', label: 'Niger', phone: '227' },\r\n    { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n    { code: 'NG', label: 'Nigeria', phone: '234' },\r\n    { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n    { code: 'NL', label: 'Netherlands', phone: '31' },\r\n    { code: 'NO', label: 'Norway', phone: '47' },\r\n    { code: 'NP', label: 'Nepal', phone: '977' },\r\n    { code: 'NR', label: 'Nauru', phone: '674' },\r\n    { code: 'NU', label: 'Niue', phone: '683' },\r\n    { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n    { code: 'OM', label: 'Oman', phone: '968' },\r\n    { code: 'PA', label: 'Panama', phone: '507' },\r\n    { code: 'PE', label: 'Peru', phone: '51' },\r\n    { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n    { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n    { code: 'PH', label: 'Philippines', phone: '63' },\r\n    { code: 'PK', label: 'Pakistan', phone: '92' },\r\n    { code: 'PL', label: 'Poland', phone: '48' },\r\n    { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\r\n    { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n    { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n    { code: 'PS', label: 'Palestine, State of', phone: '970' },\r\n    { code: 'PT', label: 'Portugal', phone: '351' },\r\n    { code: 'PW', label: 'Palau', phone: '680' },\r\n    { code: 'PY', label: 'Paraguay', phone: '595' },\r\n    { code: 'QA', label: 'Qatar', phone: '974' },\r\n    { code: 'RE', label: 'Reunion', phone: '262' },\r\n    { code: 'RO', label: 'Romania', phone: '40' },\r\n    { code: 'RS', label: 'Serbia', phone: '381' },\r\n    { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n    { code: 'RW', label: 'Rwanda', phone: '250' },\r\n    { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n    { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n    { code: 'SC', label: 'Seychelles', phone: '248' },\r\n    { code: 'SD', label: 'Sudan', phone: '249' },\r\n    { code: 'SE', label: 'Sweden', phone: '46' },\r\n    { code: 'SG', label: 'Singapore', phone: '65' },\r\n    { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n    { code: 'SI', label: 'Slovenia', phone: '386' },\r\n    { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\r\n    { code: 'SK', label: 'Slovakia', phone: '421' },\r\n    { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n    { code: 'SM', label: 'San Marino', phone: '378' },\r\n    { code: 'SN', label: 'Senegal', phone: '221' },\r\n    { code: 'SO', label: 'Somalia', phone: '252' },\r\n    { code: 'SR', label: 'Suriname', phone: '597' },\r\n    { code: 'SS', label: 'South Sudan', phone: '211' },\r\n    { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\r\n    { code: 'SV', label: 'El Salvador', phone: '503' },\r\n    { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\r\n    { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\r\n    { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n    { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\r\n    { code: 'TD', label: 'Chad', phone: '235' },\r\n    { code: 'TF', label: 'French Southern Territories', phone: '262' },\r\n    { code: 'TG', label: 'Togo', phone: '228' },\r\n    { code: 'TH', label: 'Thailand', phone: '66' },\r\n    { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n    { code: 'TK', label: 'Tokelau', phone: '690' },\r\n    { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n    { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n    { code: 'TN', label: 'Tunisia', phone: '216' },\r\n    { code: 'TO', label: 'Tonga', phone: '676' },\r\n    { code: 'TR', label: 'Turkey', phone: '90' },\r\n    { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\r\n    { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n    { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\r\n    { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\r\n    { code: 'UA', label: 'Ukraine', phone: '380' },\r\n    { code: 'UG', label: 'Uganda', phone: '256' },\r\n    { code: 'US', label: 'United States', phone: '1', suggested: true },\r\n    { code: 'UY', label: 'Uruguay', phone: '598' },\r\n    { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n    { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\r\n    { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\r\n    { code: 'VE', label: 'Venezuela', phone: '58' },\r\n    { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\r\n    { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\r\n    { code: 'VN', label: 'Vietnam', phone: '84' },\r\n    { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n    { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n    { code: 'WS', label: 'Samoa', phone: '685' },\r\n    { code: 'XK', label: 'Kosovo', phone: '383' },\r\n    { code: 'YE', label: 'Yemen', phone: '967' },\r\n    { code: 'YT', label: 'Mayotte', phone: '262' },\r\n    { code: 'ZA', label: 'South Africa', phone: '27' },\r\n    { code: 'ZM', label: 'Zambia', phone: '260' },\r\n    { code: 'ZW', label: 'Zimbabwe', phone: '263' }\r\n];\r\n\r\nconst timeSlots = Array.from(new Array(24 * 2)).map(\r\n    (_, index) => `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${index % 2 === 0 ? '00' : '30'}`\r\n);\r\n\r\nfunction countryToFlag(isoCode) {\r\n    return typeof String.fromCodePoint !== 'undefined'\r\n        ? isoCode.toUpperCase().replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n        : isoCode;\r\n}\r\n\r\nconst options = ['Option 1', 'Option 2'];\r\n\r\n// ==============================|| PLUGIN - AUTOCOMPLETE ||============================== //\r\n\r\nconst FrmAutocomplete = () => {\r\n    const [valueControl, setValueControl] = useState(null);\r\n    const [value, setValue] = useState(options[0]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [value2, setValue2] = useState(options[0]);\r\n\r\n    const defaultProps = {\r\n        options: top100Films,\r\n        getOptionLabel: (option) => option.title\r\n    };\r\n\r\n    const flatProps = {\r\n        options: top100Films.map((option) => option.title)\r\n    };\r\n\r\n    const optionsGroup = top100Films.map((option) => {\r\n        const firstLetter = option.title[0].toUpperCase();\r\n        return {\r\n            firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n            ...option\r\n        };\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"Autocomplete\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/autocomplete/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Combo Box\">\r\n                                <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    options={top100Films}\r\n                                    getOptionLabel={(option) => option.title}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Combo box\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Country Select\">\r\n                                <Autocomplete\r\n                                    id=\"country-select-demo\"\r\n                                    options={countries}\r\n                                    autoHighlight\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props} style={{ fontSize: 15 }}>\r\n                                            <span style={{ marginRight: 10, fontSize: 18 }}>{countryToFlag(option.code)}</span>\r\n                                            {option.label} ({option.code}) +{option.phone}\r\n                                        </li>\r\n                                    )}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label=\"Choose a country\"\r\n                                            inputProps={{\r\n                                                ...params.inputProps,\r\n                                                autoComplete: 'new-password' // disable autocomplete and autofill\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Controllable states\">\r\n                                <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\r\n                                <div>{`inputValue: '${inputValue}'`}</div>\r\n                                <br />\r\n                                <Autocomplete\r\n                                    value={value}\r\n                                    onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                    }}\r\n                                    inputValue={inputValue}\r\n                                    onInputChange={(event, newInputValue) => {\r\n                                        setInputValue(newInputValue);\r\n                                    }}\r\n                                    id=\"controllable-states-demo\"\r\n                                    options={options}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Free Solo\">\r\n                                <Autocomplete\r\n                                    id=\"free-solo-demo\"\r\n                                    freeSolo\r\n                                    options={top100Films.map((option) => option.title)}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Free Solo\" margin=\"normal\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Search Input\">\r\n                                <Autocomplete\r\n                                    freeSolo\r\n                                    id=\"free-solo-2-demo\"\r\n                                    disableClearable\r\n                                    options={top100Films.map((option) => option.title)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label=\"Search input\"\r\n                                            margin=\"normal\"\r\n                                            InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Creatable\">\r\n                                <Autocomplete\r\n                                    value={value2}\r\n                                    onChange={(event, newValue) => {\r\n                                        if (typeof newValue === 'string') {\r\n                                            setValue2({\r\n                                                title: newValue\r\n                                            });\r\n                                        } else if (newValue && newValue.inputValue) {\r\n                                            // Create a new value from the user input\r\n                                            setValue2({\r\n                                                title: newValue.inputValue\r\n                                            });\r\n                                        } else {\r\n                                            setValue2(newValue);\r\n                                        }\r\n                                    }}\r\n                                    filterOptions={(data, params) => {\r\n                                        const filtered = filter(data, params);\r\n\r\n                                        // Suggest the creation of a new value\r\n                                        const isExisting = data.some((option) => params.inputValue === option.title);\r\n                                        if (params.inputValue !== '' && !isExisting) {\r\n                                            filtered.push({\r\n                                                // inputValue,\r\n                                                title: `Add \"${params.inputValue}\"`\r\n                                            });\r\n                                        }\r\n\r\n                                        return filtered;\r\n                                    }}\r\n                                    selectOnFocus\r\n                                    clearOnBlur\r\n                                    handleHomeEndKeys\r\n                                    id=\"free-solo-with-text-demo\"\r\n                                    options={top100Films}\r\n                                    getOptionLabel={(option) => {\r\n                                        // Value selected with enter, right from the input\r\n                                        if (typeof option === 'string') {\r\n                                            return option;\r\n                                        }\r\n                                        // Add \"xxx\" option created dynamically\r\n                                        if (option.inputValue) {\r\n                                            return option.inputValue;\r\n                                        }\r\n                                        // Regular option\r\n                                        return option.title;\r\n                                    }}\r\n                                    renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                                    freeSolo\r\n                                    renderInput={(params) => <TextField {...params} label=\"Free solo with text demo\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Grouped\">\r\n                                <Autocomplete\r\n                                    id=\"grouped-demo\"\r\n                                    options={optionsGroup.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\r\n                                    groupBy={(option) => option.firstLetter}\r\n                                    getOptionLabel={(option) => option.title}\r\n                                    renderInput={(params) => <TextField {...params} label=\"With categories\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <SubCard title=\"Disabled Options\">\r\n                                <Autocomplete\r\n                                    id=\"disabled-options-demo\"\r\n                                    options={timeSlots}\r\n                                    getOptionDisabled={(option) => option === timeSlots[0] || option === timeSlots[2]}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disabled options\" />}\r\n                                />\r\n                            </SubCard>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Playground\">\r\n                        <Grid container direction=\"column\" spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"disable-close-on-select\"\r\n                                    disableCloseOnSelect\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disable Close On Select\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"clear-on-escape\"\r\n                                    clearOnEscape\r\n                                    renderInput={(params) => <TextField {...params} label=\"Clear On Escape\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"disable-clearable\"\r\n                                    disableClearable\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disable Clearable\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"include-input-in-list\"\r\n                                    includeInputInList\r\n                                    renderInput={(params) => <TextField {...params} label=\"Include Input In List\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...flatProps}\r\n                                    id=\"flat-demo\"\r\n                                    renderInput={(params) => <TextField {...params} label=\"Flat\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"controlled-demo\"\r\n                                    value={valueControl}\r\n                                    onChange={(event, newValue) => {\r\n                                        setValueControl(newValue);\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Controlled\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"auto-complete\"\r\n                                    autoComplete\r\n                                    includeInputInList\r\n                                    renderInput={(params) => <TextField {...params} label=\"Auto Complete\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"disable-list-wrap\"\r\n                                    disableListWrap\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disable List Wrap\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"open-on-focus\"\r\n                                    openOnFocus\r\n                                    renderInput={(params) => <TextField {...params} label=\"Open On Focus\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"auto-highlight\"\r\n                                    autoHighlight\r\n                                    renderInput={(params) => <TextField {...params} label=\"Auto Highlight\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"auto-select\"\r\n                                    autoSelect\r\n                                    renderInput={(params) => <TextField {...params} label=\"Auto Select\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"disabled\"\r\n                                    disabled\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disabled\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"disable-portal\"\r\n                                    disablePortal\r\n                                    renderInput={(params) => <TextField {...params} label=\"Disable Portal\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"blur-on-select\"\r\n                                    blurOnSelect\r\n                                    renderInput={(params) => <TextField {...params} label=\"Blur On Select\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"clear-on-blur\"\r\n                                    clearOnBlur\r\n                                    renderInput={(params) => <TextField {...params} label=\"Clear On Blur\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    {...defaultProps}\r\n                                    id=\"select-on-focus\"\r\n                                    selectOnFocus\r\n                                    renderInput={(params) => <TextField {...params} label=\"Select On Focus\" margin=\"normal\" />}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} />\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default FrmAutocomplete;\r\n"]},"metadata":{},"sourceType":"module"}