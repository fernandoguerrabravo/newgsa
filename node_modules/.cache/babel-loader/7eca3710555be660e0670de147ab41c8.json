{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/sistema_gsa/newgsa/src/views/forms/forms-validation/CheckboxForms.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Grid, Checkbox, FormHelperText, Stack } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SNACKBAR_OPEN } from 'store/actions'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  color: yup.array().min(1, 'At least one color is required')\n}); // ==============================|| FORM VALIDATION - CHECKBOX FORMIK  ||============================== //\n\nconst CheckboxForms = () => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      color: []\n    },\n    validationSchema,\n    onSubmit: () => {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Checkbox - Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Checkbox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"primary\",\n            name: \"color\",\n            color: \"primary\",\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"secondary\",\n            name: \"color\",\n            color: \"secondary\",\n            sx: {\n              color: theme.palette.secondary.main\n            },\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"error\",\n            name: \"color\",\n            sx: {\n              color: theme.palette.error.main,\n              '&.Mui-checked': {\n                color: theme.palette.error.main\n              }\n            },\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            pt: '0 !important'\n          },\n          children: formik.errors.color && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: [' ', formik.errors.color, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckboxForms, \"2qXa3/El/O4OOPNNHANoo4C32jc=\", false, function () {\n  return [useTheme, useDispatch, useFormik];\n});\n\n_c = CheckboxForms;\nexport default CheckboxForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxForms\");","map":{"version":3,"sources":["/Users/admin/Documents/sistema_gsa/newgsa/src/views/forms/forms-validation/CheckboxForms.js"],"names":["useDispatch","useTheme","Button","Grid","Checkbox","FormHelperText","Stack","MainCard","AnimateButton","SNACKBAR_OPEN","useFormik","yup","validationSchema","object","color","array","min","CheckboxForms","theme","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","handleChange","palette","secondary","main","error","pt","errors"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Grid, Checkbox, FormHelperText, Stack } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    color: yup.array().min(1, 'At least one color is required')\r\n});\r\n\r\n// ==============================|| FORM VALIDATION - CHECKBOX FORMIK  ||============================== //\r\n\r\nconst CheckboxForms = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            color: []\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Checkbox - Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"Checkbox\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <Checkbox value=\"primary\" name=\"color\" color=\"primary\" onChange={formik.handleChange} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Checkbox\r\n                            value=\"secondary\"\r\n                            name=\"color\"\r\n                            color=\"secondary\"\r\n                            sx={{ color: theme.palette.secondary.main }}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Checkbox\r\n                            value=\"error\"\r\n                            name=\"color\"\r\n                            sx={{\r\n                                color: theme.palette.error.main,\r\n                                '&.Mui-checked': {\r\n                                    color: theme.palette.error.main\r\n                                }\r\n                            }}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{ pt: '0 !important' }}>\r\n                        {formik.errors.color && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {' '}\r\n                                {formik.errors.color}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default CheckboxForms;\r\n"]},"metadata":{},"sourceType":"module"}