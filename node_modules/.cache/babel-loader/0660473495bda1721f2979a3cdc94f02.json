{"ast":null,"code":"import services from 'utils/mockAdapter'; // friends list\n\nconst friends = [{\n  id: '#1Friends_Barney',\n  avatar: 'user-1.png',\n  name: 'Barney',\n  mutual: 10\n}, {\n  id: '#2Friends_Thea',\n  avatar: 'user-2.png',\n  name: 'Thea',\n  mutual: 89\n}, {\n  id: '#3Friends_Guiseppe',\n  avatar: 'user-3.png',\n  name: 'Guiseppe',\n  mutual: 65\n}, {\n  id: '#4Friends_Henderson',\n  avatar: 'user-4.png',\n  name: 'Henderson',\n  mutual: 1\n}, {\n  id: '#5Friends_Maddison',\n  avatar: 'user-5.png',\n  name: 'Maddison',\n  mutual: 14\n}, {\n  id: '#6Friends_Wilber',\n  avatar: 'user-6.png',\n  name: 'Wilber',\n  mutual: 36\n}, {\n  id: '#7Friends_Hayden',\n  avatar: 'user-7.png',\n  name: 'Hayden',\n  mutual: 106\n}, {\n  id: '#8Friends_Lloyd',\n  avatar: 'user-8.png',\n  name: 'Lloyd',\n  mutual: 10\n}, {\n  id: '#9Friends_Kris',\n  avatar: 'user-9.png',\n  name: 'Kris',\n  mutual: 0\n}, {\n  id: '#10Friends_Kyler',\n  avatar: 'user-10.png',\n  name: 'Kyler',\n  mutual: 48\n}, {\n  id: '#11Friends_Pamela',\n  avatar: 'user-11.png',\n  name: 'Pamela',\n  mutual: 72\n}, {\n  id: '#12Friends_Betty',\n  avatar: 'user-12.png',\n  name: 'Betty',\n  mutual: 99\n}, {\n  id: '#13Friends_Anthony',\n  avatar: 'user-1.png',\n  name: 'Anthony',\n  mutual: 78\n}, {\n  id: '#14Friends_Reggie',\n  avatar: 'user-3.png',\n  name: 'Reggie',\n  mutual: 1\n}, {\n  id: '#15Friends_Francesca',\n  avatar: 'user-4.png',\n  name: 'Francesca',\n  mutual: 68\n}, {\n  id: '#16Friends_Carmel',\n  avatar: 'user-5.png',\n  name: 'Carmel',\n  mutual: 15\n}, {\n  id: '#17Friends_Darwin',\n  avatar: 'user-6.png',\n  name: 'Darwin',\n  mutual: 10\n}, {\n  id: '#18Friends_Kaylin',\n  avatar: 'user-7.png',\n  name: 'Kaylin',\n  mutual: 36\n}, {\n  id: '#19Friends_Kamryn',\n  avatar: 'user-8.png',\n  name: 'Kamryn',\n  mutual: 55\n}, {\n  id: '#20Friends_Madelyn',\n  avatar: 'user-9.png',\n  name: 'Madelyn',\n  mutual: 78\n}]; // ==============================|| MOCK SERVICES ||============================== //\n\nservices.onGet('/api/friend-request/list').reply(200, {\n  friends\n});\nservices.onPost('/api/friend-request/filter').reply(config => {\n  try {\n    const {\n      key\n    } = JSON.parse(config.data);\n    const results = friends.filter(row => {\n      let matches = true;\n      const properties = ['name', 'mutual'];\n      let containsQuery = false;\n      properties.forEach(property => {\n        if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n\n      return matches;\n    });\n    return [200, {\n      results\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/_mockApis/user-profile/friend-request.js"],"names":["services","friends","id","avatar","name","mutual","onGet","reply","onPost","config","key","JSON","parse","data","results","filter","row","matches","properties","containsQuery","forEach","property","toString","toLowerCase","includes","err","console","error","message"],"mappings":"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","sourcesContent":["import services from 'utils/mockAdapter';\r\n\r\n// friends list\r\n\r\nconst friends = [\r\n    {\r\n        id: '#1Friends_Barney',\r\n        avatar: 'user-1.png',\r\n        name: 'Barney',\r\n        mutual: 10\r\n    },\r\n    {\r\n        id: '#2Friends_Thea',\r\n        avatar: 'user-2.png',\r\n        name: 'Thea',\r\n        mutual: 89\r\n    },\r\n    {\r\n        id: '#3Friends_Guiseppe',\r\n        avatar: 'user-3.png',\r\n        name: 'Guiseppe',\r\n        mutual: 65\r\n    },\r\n    {\r\n        id: '#4Friends_Henderson',\r\n        avatar: 'user-4.png',\r\n        name: 'Henderson',\r\n        mutual: 1\r\n    },\r\n    {\r\n        id: '#5Friends_Maddison',\r\n        avatar: 'user-5.png',\r\n        name: 'Maddison',\r\n        mutual: 14\r\n    },\r\n    {\r\n        id: '#6Friends_Wilber',\r\n        avatar: 'user-6.png',\r\n        name: 'Wilber',\r\n        mutual: 36\r\n    },\r\n    {\r\n        id: '#7Friends_Hayden',\r\n        avatar: 'user-7.png',\r\n        name: 'Hayden',\r\n        mutual: 106\r\n    },\r\n    {\r\n        id: '#8Friends_Lloyd',\r\n        avatar: 'user-8.png',\r\n        name: 'Lloyd',\r\n        mutual: 10\r\n    },\r\n    {\r\n        id: '#9Friends_Kris',\r\n        avatar: 'user-9.png',\r\n        name: 'Kris',\r\n        mutual: 0\r\n    },\r\n    {\r\n        id: '#10Friends_Kyler',\r\n        avatar: 'user-10.png',\r\n        name: 'Kyler',\r\n        mutual: 48\r\n    },\r\n    {\r\n        id: '#11Friends_Pamela',\r\n        avatar: 'user-11.png',\r\n        name: 'Pamela',\r\n        mutual: 72\r\n    },\r\n    {\r\n        id: '#12Friends_Betty',\r\n        avatar: 'user-12.png',\r\n        name: 'Betty',\r\n        mutual: 99\r\n    },\r\n    {\r\n        id: '#13Friends_Anthony',\r\n        avatar: 'user-1.png',\r\n        name: 'Anthony',\r\n        mutual: 78\r\n    },\r\n    {\r\n        id: '#14Friends_Reggie',\r\n        avatar: 'user-3.png',\r\n        name: 'Reggie',\r\n        mutual: 1\r\n    },\r\n    {\r\n        id: '#15Friends_Francesca',\r\n        avatar: 'user-4.png',\r\n        name: 'Francesca',\r\n        mutual: 68\r\n    },\r\n    {\r\n        id: '#16Friends_Carmel',\r\n        avatar: 'user-5.png',\r\n        name: 'Carmel',\r\n        mutual: 15\r\n    },\r\n    {\r\n        id: '#17Friends_Darwin',\r\n        avatar: 'user-6.png',\r\n        name: 'Darwin',\r\n        mutual: 10\r\n    },\r\n    {\r\n        id: '#18Friends_Kaylin',\r\n        avatar: 'user-7.png',\r\n        name: 'Kaylin',\r\n        mutual: 36\r\n    },\r\n    {\r\n        id: '#19Friends_Kamryn',\r\n        avatar: 'user-8.png',\r\n        name: 'Kamryn',\r\n        mutual: 55\r\n    },\r\n    {\r\n        id: '#20Friends_Madelyn',\r\n        avatar: 'user-9.png',\r\n        name: 'Madelyn',\r\n        mutual: 78\r\n    }\r\n];\r\n\r\n// ==============================|| MOCK SERVICES ||============================== //\r\n\r\nservices.onGet('/api/friend-request/list').reply(200, { friends });\r\n\r\nservices.onPost('/api/friend-request/filter').reply((config) => {\r\n    try {\r\n        const { key } = JSON.parse(config.data);\r\n\r\n        const results = friends.filter((row) => {\r\n            let matches = true;\r\n\r\n            const properties = ['name', 'mutual'];\r\n            let containsQuery = false;\r\n\r\n            properties.forEach((property) => {\r\n                if (row[property].toString().toLowerCase().includes(key.toString().toLowerCase())) {\r\n                    containsQuery = true;\r\n                }\r\n            });\r\n\r\n            if (!containsQuery) {\r\n                matches = false;\r\n            }\r\n            return matches;\r\n        });\r\n\r\n        return [200, { results }];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Internal server error' }];\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}