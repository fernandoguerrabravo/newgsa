{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/application/customer/CustomerList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, CardContent, Checkbox, Grid, IconButton, InputAdornment, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, TextField, Toolbar, Tooltip, Typography } from '@mui/material';\nimport { visuallyHidden } from '@mui/utils'; // project imports\n\nimport Chip from 'ui-component/extended/Chip';\nimport MainCard from 'ui-component/cards/MainCard'; // assets\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterListTwoTone';\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\nimport FileCopyIcon from '@mui/icons-material/FileCopyTwoTone';\nimport SearchIcon from '@mui/icons-material/Search';\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone'; // table data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, email, location, orders, date, status) {\n  return {\n    name,\n    email,\n    location,\n    orders,\n    date,\n    status\n  };\n}\n\nconst rowsInitial = [createData('Joseph William 1', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1), createData('Ashy Handgun 2', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2), createData('Larry Doe 3', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2), createData('Sara Soudan 4', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3), createData('Joseph William 5', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1), createData('Aisha Handgun 6', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 3), createData('Larky Doe 7', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2), createData('Sara Soupier 8', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 1), createData('Joseph William 9', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 3), createData('Anshan Handgun 10', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 1), createData('Lardy Doe 11', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1), createData('Sara Soudan 12', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3), createData('Joseph William 13', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 2), createData('Ashy Handgun 14', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2), createData('Lars Doe 15', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1), createData('Sara Souvenir 16', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 2)]; // table sort\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nconst getComparator = (order, orderBy) => order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n} // table header options\n\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  label: 'Customer Name',\n  align: 'left'\n}, {\n  id: 'location',\n  numeric: true,\n  label: 'Location',\n  align: 'left'\n}, {\n  id: 'orders',\n  numeric: true,\n  label: 'Orders',\n  align: 'right'\n}, {\n  id: 'date',\n  numeric: true,\n  label: 'Registered',\n  align: 'center'\n}, {\n  id: 'status',\n  numeric: false,\n  label: 'Status',\n  align: 'center'\n}]; // ==============================|| TABLE HEADER ||============================== //\n\nfunction EnhancedTableHead({\n  onSelectAllClick,\n  order,\n  orderBy,\n  numSelected,\n  rowCount,\n  onRequestSort,\n  selected\n}) {\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        sx: {\n          pl: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), numSelected > 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"none\",\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), numSelected <= 0 && headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.align,\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this)), numSelected <= 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n        sortDirection: false,\n        align: \"center\",\n        sx: {\n          pr: 3\n        },\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  selected: PropTypes.array,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; // ==============================|| TABLE HEADER TOOLBAR ||============================== //\n\nconst EnhancedTableToolbar = ({\n  numSelected\n}) => /*#__PURE__*/_jsxDEV(Toolbar, {\n  sx: {\n    p: 0,\n    pl: 1,\n    pr: 1,\n    ...(numSelected > 0 && {\n      color: theme => theme.palette.secondary.main\n    })\n  },\n  children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"inherit\",\n    variant: \"h4\",\n    children: [numSelected, \" Selected\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    children: \"Nutrition\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this), numSelected > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Delete\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 194,\n  columnNumber: 5\n}, this);\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; // ==============================|| CUSTOMER LIST ||============================== //\n\nconst CustomerList = () => {\n  _s();\n\n  const theme = useTheme();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [search, setSearch] = useState('');\n  const [rows, setRows] = useState(rowsInitial);\n\n  const handleSearch = event => {\n    const newString = event === null || event === void 0 ? void 0 : event.target.value;\n    setSearch(newString || '');\n\n    if (newString) {\n      const newRows = rows.filter(row => {\n        let matches = true;\n        const properties = ['name', 'email', 'location', 'orders'];\n        let containsQuery = false;\n        properties.forEach(property => {\n          if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\n            containsQuery = true;\n          }\n        });\n\n        if (!containsQuery) {\n          matches = false;\n        }\n\n        return matches;\n      });\n      setRows(newRows);\n    } else {\n      setRows(rowsInitial);\n    }\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelectedId = rows.map(n => n.name);\n      setSelected(newSelectedId);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    if (event === null || event === void 0 ? void 0 : event.target.value) setRowsPerPage(parseInt(event === null || event === void 0 ? void 0 : event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Customer List\",\n    content: false,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this)\n            },\n            onChange: handleSearch,\n            placeholder: \"Search Customer\",\n            value: search,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          sx: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Copy\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Print\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              children: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Filter\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 750\n        },\n        \"aria-labelledby\": \"tableTitle\",\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n          theme: theme,\n          numSelected: selected.length,\n          order: order,\n          orderBy: orderBy,\n          onSelectAllClick: handleSelectAllClick,\n          onRequestSort: handleRequestSort,\n          rowCount: rows.length,\n          selected: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            /** Make sure no display bugs if row isn't an OrderData object */\n            if (typeof row === 'number') return null;\n            const isItemSelected = isSelected(row.name);\n            const labelId = `enhanced-table-checkbox-${index}`;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isItemSelected,\n              tabIndex: -1,\n              selected: isItemSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                sx: {\n                  pl: 3\n                },\n                onClick: event => handleClick(event, row.name),\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  checked: isItemSelected,\n                  inputProps: {\n                    'aria-labelledby': labelId\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                id: labelId,\n                scope: \"row\",\n                onClick: event => handleClick(event, row.name),\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900'\n                  },\n                  children: [' ', row.name, ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: [\" \", row.email, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.orders\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [row.status === 1 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Complete\",\n                  size: \"small\",\n                  chipcolor: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 66\n                }, this), row.status === 2 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Processing\",\n                  size: \"small\",\n                  chipcolor: \"orange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 66\n                }, this), row.status === 3 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Confirm\",\n                  size: \"small\",\n                  chipcolor: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                sx: {\n                  pr: 3\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  size: \"large\",\n                  children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                    sx: {\n                      fontSize: '1.3rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"secondary\",\n                  size: \"large\",\n                  children: /*#__PURE__*/_jsxDEV(EditTwoToneIcon, {\n                    sx: {\n                      fontSize: '1.3rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 37\n            }, this);\n          }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerList, \"rPzNvpWgtjkEOvl1la2IZLSKsWA=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = CustomerList;\nexport default CustomerList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"CustomerList\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/application/customer/CustomerList.js"],"names":["PropTypes","useState","useTheme","Box","CardContent","Checkbox","Grid","IconButton","InputAdornment","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","TextField","Toolbar","Tooltip","Typography","visuallyHidden","Chip","MainCard","DeleteIcon","FilterListIcon","PrintIcon","FileCopyIcon","SearchIcon","VisibilityTwoToneIcon","EditTwoToneIcon","createData","name","email","location","orders","date","status","rowsInitial","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","align","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","selected","createSortHandler","property","event","pl","length","headCell","disablePadding","pr","propTypes","number","isRequired","func","oneOf","string","EnhancedTableToolbar","p","color","theme","palette","secondary","main","flexGrow","CustomerList","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","rows","setRows","handleSearch","newString","target","value","newRows","filter","row","matches","properties","containsQuery","forEach","toString","toLowerCase","includes","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelectedId","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","isSelected","emptyRows","Math","max","startAdornment","textAlign","minWidth","isItemSelected","labelId","cursor","mode","fontSize","height"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    CardContent,\r\n    Checkbox,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n// project imports\r\nimport Chip from 'ui-component/extended/Chip';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterListTwoTone';\r\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyTwoTone';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\n\r\n// table data\r\nfunction createData(name, email, location, orders, date, status) {\r\n    return { name, email, location, orders, date, status };\r\n}\r\n\r\nconst rowsInitial = [\r\n    createData('Joseph William 1', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1),\r\n    createData('Ashy Handgun 2', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2),\r\n    createData('Larry Doe 3', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2),\r\n    createData('Sara Soudan 4', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3),\r\n    createData('Joseph William 5', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1),\r\n    createData('Aisha Handgun 6', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 3),\r\n    createData('Larky Doe 7', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2),\r\n    createData('Sara Soupier 8', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 1),\r\n    createData('Joseph William 9', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 3),\r\n    createData('Anshan Handgun 10', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 1),\r\n    createData('Lardy Doe 11', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1),\r\n    createData('Sara Soudan 12', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3),\r\n    createData('Joseph William 13', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 2),\r\n    createData('Ashy Handgun 14', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2),\r\n    createData('Lars Doe 15', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1),\r\n    createData('Sara Souvenir 16', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 2)\r\n];\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\nconst headCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Customer Name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'location',\r\n        numeric: true,\r\n        label: 'Location',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'orders',\r\n        numeric: true,\r\n        label: 'Orders',\r\n        align: 'right'\r\n    },\r\n    {\r\n        id: 'date',\r\n        numeric: true,\r\n        label: 'Registered',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        label: 'Status',\r\n        align: 'center'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE HEADER ||============================== //\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={6}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <Box component=\"span\" sx={visuallyHidden}>\r\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </Box>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        Action\r\n                    </TableCell>\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    selected: PropTypes.array,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| TABLE HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"h4\">\r\n                {numSelected} Selected\r\n            </Typography>\r\n        ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n                Nutrition\r\n            </Typography>\r\n        )}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| CUSTOMER LIST ||============================== //\r\n\r\nconst CustomerList = () => {\r\n    const theme = useTheme();\r\n\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [search, setSearch] = useState('');\r\n    const [rows, setRows] = useState(rowsInitial);\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString || '');\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['name', 'email', 'location', 'orders'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setRows(newRows);\r\n        } else {\r\n            setRows(rowsInitial);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        if (event?.target.value) setRowsPerPage(parseInt(event?.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Customer List\" content={false}>\r\n            <CardContent>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Search Customer\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton size=\"large\">\r\n                                <FileCopyIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Print\">\r\n                            <IconButton size=\"large\">\r\n                                <PrintIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filter\">\r\n                            <IconButton size=\"large\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        theme={theme}\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                        selected={selected}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                /** Make sure no display bugs if row isn't an OrderData object */\r\n                                if (typeof row === 'number') return null;\r\n                                const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event) => handleClick(event, row.name)}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                {row.name}{' '}\r\n                                            </Typography>\r\n                                            <Typography variant=\"caption\"> {row.email} </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>{row.location}</TableCell>\r\n                                        <TableCell align=\"right\">{row.orders}</TableCell>\r\n                                        <TableCell align=\"center\">{row.date}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.status === 1 && <Chip label=\"Complete\" size=\"small\" chipcolor=\"success\" />}\r\n                                            {row.status === 2 && <Chip label=\"Processing\" size=\"small\" chipcolor=\"orange\" />}\r\n                                            {row.status === 3 && <Chip label=\"Confirm\" size=\"small\" chipcolor=\"primary\" />}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <IconButton color=\"primary\" size=\"large\">\r\n                                                <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                            <IconButton color=\"secondary\" size=\"large\">\r\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default CustomerList;\r\n"]},"metadata":{},"sourceType":"module"}