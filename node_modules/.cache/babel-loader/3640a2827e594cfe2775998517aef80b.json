{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SellerListFiles.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport FileProvider from '../providers/file.provider';\nimport { getFormattedSize } from '../helpers/files.helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lister = ({\n  idcliente,\n  codigo\n}) => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [refId, setRefId] = useState(idcliente);\n  const [sku, setSku] = useState(codigo);\n  const [submitting, setSubmitting] = useState(false);\n  /*const handleRefIdChange = event => {\n  \tif (event.isTrusted) {\n  \t\tsetRefId(event.target.value);\n  \t}\n  };\n  \tconst handleSkuChange = event => {\n  \tif (event.isTrusted) {\n  \t\tsetSku(event.target.value);\n  \t}\n  }; */\n\n  const getFiles = async event => {\n    event.preventDefault();\n    setSubmitting(true);\n\n    try {\n      const files = (await new FileProvider().getFiles(refId, sku)).data.value;\n      setFiles(files);\n    } catch (reason) {\n      console.warn(reason);\n    }\n\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        padding: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: getFiles,\n        children: submitting ? 'Searching...' : 'Update and Show Files'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: files.length > 0 ? 'Retrieved files' : 'No files to show'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 800\n        },\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"File Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: files.map((file, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.name + file.extension\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getFormattedSize(file.size, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  href: file.file,\n                  download: true,\n                  variant: \"outlined\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lister, \"RHML0JZgttNayMyC9VXuKhBFqxo=\");\n\n_c = Lister;\nexport default Lister;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lister\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/profile/components/SellerListFiles.jsx"],"names":["useEffect","useState","Table","TableHead","TableRow","TableCell","TableBody","Paper","Button","Typography","FileProvider","getFormattedSize","Lister","idcliente","codigo","files","setFiles","refId","setRefId","sku","setSku","submitting","setSubmitting","getFiles","event","preventDefault","data","value","reason","console","warn","padding","length","minWidth","map","file","index","name","extension","size"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport FileProvider from '../providers/file.provider';\nimport { getFormattedSize } from '../helpers/files.helper';\n\n\n\nconst Lister = ({ idcliente, codigo }) => {\n\t\n\tconst [files, setFiles] = useState([]);\n\tconst [refId, setRefId] = useState(idcliente);\n\tconst [sku, setSku] = useState(codigo);\n\tconst [submitting, setSubmitting] = useState(false);\n\n\t/*const handleRefIdChange = event => {\n\t\tif (event.isTrusted) {\n\t\t\tsetRefId(event.target.value);\n\t\t}\n\t};\n\n\tconst handleSkuChange = event => {\n\t\tif (event.isTrusted) {\n\t\t\tsetSku(event.target.value);\n\t\t}\n\t}; */\n\n\tconst getFiles = async event => {\n\t\tevent.preventDefault();\n\t\tsetSubmitting(true);\n\t\ttry {\n\t\t\tconst files = (await new FileProvider().getFiles(refId, sku)).data.value;\n\t\t\tsetFiles(files);\n\t\t} catch (reason) {\n\t\t\tconsole.warn(reason);\n\t\t}\n\t\tsetSubmitting(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Paper sx={{padding: 3}}>\n\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={getFiles}>\n\t\t\t\t\t{submitting ? 'Searching...' : 'Update and Show Files'}\n\t\t\t\t</Button>\n\t\t\t\t<p />\n\t\t\t\t<Typography>{files.length > 0 ? 'Retrieved files' : 'No files to show'}</Typography>\n\t\t\t\t{files.length > 0 ? (\n\t\t\t\t\t<Table sx={{ minWidth: 800 }} size=\"small\" aria-label=\"a dense table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>File Name</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>File Size</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>Actions</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{files.map((file, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{file.name + file.extension}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{getFormattedSize(file.size, 2)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Button href={file.file} download variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t) : null}\n\t\t\t</Paper>\n\t\t\t<br />\n\t\t</>\n\t);\n};\n\nexport default Lister;\n"]},"metadata":{},"sourceType":"module"}