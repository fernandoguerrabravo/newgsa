{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsa_16/newgsa/src/views/application/chat/UserList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect, Fragment } from 'react'; // material-ui\n\nimport { Chip, Divider, Grid, List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material'; // project imports\n\nimport UserAvatar from './UserAvatar';\nimport axios from 'utils/axios'; // ==============================|| CHAT USER LIST ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  setUser\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    const response = await axios.get('/api/chat/users');\n    setData(response.data.users);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    children: data.map(user => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        onClick: () => {\n          setUser(user);\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 1,\n            component: \"span\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              zeroMinWidth: true,\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                color: \"inherit\",\n                component: \"span\",\n                sx: {\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  display: 'block'\n                },\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"subtitle2\",\n                children: user.lastMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 1,\n            component: \"span\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              zeroMinWidth: true,\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                component: \"span\",\n                sx: {\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  display: 'block'\n                },\n                children: user.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              component: \"span\",\n              children: user.unReadChatCount !== 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                label: user.unReadChatCount,\n                component: \"span\",\n                color: \"secondary\",\n                sx: {\n                  width: 20,\n                  height: 20,\n                  '& .MuiChip-label': {\n                    px: 0.5\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = UserList;\nUserList.propTypes = {\n  setUser: PropTypes.func\n};\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/admin/Documents/gsa_16/newgsa/src/views/application/chat/UserList.js"],"names":["PropTypes","useState","useEffect","Fragment","Chip","Divider","Grid","List","ListItemButton","ListItemAvatar","ListItemText","Typography","UserAvatar","axios","UserList","setUser","data","setData","getData","response","get","users","map","user","overflow","textOverflow","whiteSpace","display","name","lastMessage","status","unReadChatCount","width","height","px","id","propTypes","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { Chip, Divider, Grid, List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserAvatar from './UserAvatar';\r\nimport axios from 'utils/axios';\r\n\r\n// ==============================|| CHAT USER LIST ||============================== //\r\n\r\nconst UserList = ({ setUser }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/chat/users');\r\n        setData(response.data.users);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <List component=\"nav\">\r\n            {data.map((user) => (\r\n                <Fragment key={user.id}>\r\n                    <ListItemButton\r\n                        onClick={() => {\r\n                            setUser(user);\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <UserAvatar user={user} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Grid container alignItems=\"center\" spacing={1} component=\"span\">\r\n                                    <Grid item xs zeroMinWidth component=\"span\">\r\n                                        <Typography\r\n                                            variant=\"h5\"\r\n                                            color=\"inherit\"\r\n                                            component=\"span\"\r\n                                            sx={{\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                                display: 'block'\r\n                                            }}\r\n                                        >\r\n                                            {user.name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item component=\"span\">\r\n                                        <Typography component=\"span\" variant=\"subtitle2\">\r\n                                            {user.lastMessage}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                            secondary={\r\n                                <Grid container alignItems=\"center\" spacing={1} component=\"span\">\r\n                                    <Grid item xs zeroMinWidth component=\"span\">\r\n                                        <Typography\r\n                                            variant=\"caption\"\r\n                                            component=\"span\"\r\n                                            sx={{\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                                display: 'block'\r\n                                            }}\r\n                                        >\r\n                                            {user.status}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item component=\"span\">\r\n                                        {user.unReadChatCount !== 0 && (\r\n                                            <Chip\r\n                                                label={user.unReadChatCount}\r\n                                                component=\"span\"\r\n                                                color=\"secondary\"\r\n                                                sx={{\r\n                                                    width: 20,\r\n                                                    height: 20,\r\n                                                    '& .MuiChip-label': {\r\n                                                        px: 0.5\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                        />\r\n                    </ListItemButton>\r\n                    <Divider />\r\n                </Fragment>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nUserList.propTypes = {\r\n    setUser: PropTypes.func\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}