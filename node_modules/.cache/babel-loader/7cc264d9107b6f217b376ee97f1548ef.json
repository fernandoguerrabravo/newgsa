{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/sistema_gsa/newgsa/src/views/profile/components/SellerListTable.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unused-vars */\nimport useGetSeller from \"../hooks/UseGetSeller\";\nimport { React, useEffect, useState } from \"react\"; // import { useTheme } from \"@mui/material/styles\";\n\nimport { Button, Paper, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { gridSpacing } from \"store/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SellerListTable({\n  idcliente,\n  oculto,\n  setoculto\n}) {\n  _s();\n\n  const {\n    data\n  } = useGetSeller({\n    idcliente\n  });\n  const datafinal = data[0]; //console.log(\"pico del data\", datafinal)\n\n  const [botoncito, setbotoncito] = useState({\n    activo: true\n  });\n  useEffect(() => {\n    setbotoncito(datafinal);\n  }, [botoncito, datafinal]); //  console.log(\"botonncito\", botoncito);\n\n  const columnas = [{\n    name: \"Seller Name\",\n    selector: row => row.legalname\n  }, {\n    name: \"Dirección\",\n    selector: row => row.legaladdress.numero + \" \" + row.legaladdress.calle + \" \" + row.legaladdress.barrio\n  }, {\n    name: \"Ciudad, Estado\",\n    selector: row => row.legaladdress.ciudad + \" , \" + row.legaladdress.estado\n  }, {\n    name: \"Zip Code\",\n    selector: row => row.legaladdress.zip\n  }, {\n    name: \"Pais\",\n    selector: row => row.legaladdress.pais\n  }, {\n    name: \"Telefono\",\n    selector: row => \"+52\" + row.telefono\n  }];\n\n  const nuevoseller = () => {\n    setoculto({ ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: true,\n      hiddenupdate: false\n    });\n  };\n\n  const editar = () => {\n    setoculto({ ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        children: [botoncito ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: editar,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Editar Perfil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : null, botoncito ? null : /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: nuevoseller,\n          children: \"Configurar Perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      striped: true,\n      columns: columnas,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SellerListTable, \"RE2nrhT5ZjUTMZ9iJrdGnMDivfg=\", false, function () {\n  return [useGetSeller];\n});\n\n_c = SellerListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerListTable\");","map":{"version":3,"sources":["/Users/admin/Documents/sistema_gsa/newgsa/src/views/profile/components/SellerListTable.jsx"],"names":["useGetSeller","React","useEffect","useState","Button","Paper","Grid","DataTable","gridSpacing","SellerListTable","idcliente","oculto","setoculto","data","datafinal","botoncito","setbotoncito","activo","columnas","name","selector","row","legalname","legaladdress","numero","calle","barrio","ciudad","estado","zip","pais","telefono","nuevoseller","hiddentable","hiddenboton","hiddenperfilform","hiddenupdate","editar"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\nimport useGetSeller from \"../hooks/UseGetSeller\";\nimport { React, useEffect, useState } from \"react\";\n// import { useTheme } from \"@mui/material/styles\";\nimport { Button, Paper, Grid } from \"@mui/material\";\nimport DataTable from \"react-data-table-component\";\nimport { gridSpacing } from \"store/constant\";\n\nexport default function SellerListTable({ idcliente, oculto, setoculto }) {\n  const { data } = useGetSeller({ idcliente });\n  const datafinal = data[0];\n\n  //console.log(\"pico del data\", datafinal)\n\n  const [botoncito, setbotoncito] = useState({\n    activo: true,\n  });\n\n  useEffect(() => {\n    setbotoncito(datafinal);\n  }, [botoncito, datafinal]);\n\n//  console.log(\"botonncito\", botoncito);\n\n  const columnas = [\n    {\n      name: \"Seller Name\",\n      selector: (row) => row.legalname,\n    },\n    {\n      name: \"Dirección\",\n      selector: (row) =>\n        row.legaladdress.numero +\n        \" \" +\n        row.legaladdress.calle +\n        \" \" +\n        row.legaladdress.barrio,\n    },\n    {\n      name: \"Ciudad, Estado\",\n      selector: (row) =>\n        row.legaladdress.ciudad + \" , \" + row.legaladdress.estado,\n    },\n    {\n      name: \"Zip Code\",\n      selector: (row) => row.legaladdress.zip,\n    },\n    {\n      name: \"Pais\",\n      selector: (row) => row.legaladdress.pais,\n    },\n\n    {\n      name: \"Telefono\",\n      selector: (row) => \"+52\" + row.telefono,\n    },\n  ];\n\n  const nuevoseller = () => {\n    setoculto({\n      ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: true,\n      hiddenupdate: false,\n    });\n  };\n\n  const editar = () => {\n    setoculto({\n      ...oculto,\n      hiddentable: false,\n      hiddenboton: true,\n      hiddenperfilform: false,\n      hiddenupdate: true,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={gridSpacing}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          {botoncito ? (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={editar}\n            >\n              <strong>Editar Perfil</strong>\n            </Button>\n          ) : null}\n          {botoncito ? null : (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={nuevoseller}\n            >\n              Configurar Perfil\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n      <br></br>\n      <DataTable striped columns={columnas} data={data} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}