{"ast":null,"code":"import { createTheme } from '@mui/material/styles'; // assets\n\nimport colors from 'assets/scss/_themes-vars.module.scss';\nimport theme1 from 'assets/scss/_theme1.module.scss';\nimport theme2 from 'assets/scss/_theme2.module.scss';\nimport theme3 from 'assets/scss/_theme3.module.scss';\nimport theme4 from 'assets/scss/_theme4.module.scss';\nimport theme5 from 'assets/scss/_theme5.module.scss';\nimport theme6 from 'assets/scss/_theme6.module.scss'; // project imports\n\nimport componentStyleOverrides from './compStyleOverride';\nimport themePalette from './palette';\nimport themeTypography from './typography';\nimport customShadows from './shadows';\n/**\r\n * Represent theme style and structure as per Material-UI\r\n * @param {JsonObject} customization customization parameter object\r\n */\n\nexport const theme = customization => {\n  let color;\n\n  switch (customization.presetColor) {\n    case 'theme1':\n      color = theme1;\n      break;\n\n    case 'theme2':\n      color = theme2;\n      break;\n\n    case 'theme3':\n      color = theme3;\n      break;\n\n    case 'theme4':\n      color = theme4;\n      break;\n\n    case 'theme5':\n      color = theme5;\n      break;\n\n    case 'theme6':\n      color = theme6;\n      break;\n\n    case 'default':\n    default:\n      color = colors;\n  }\n\n  const themeOption = {\n    colors: color,\n    heading: '',\n    paper: '',\n    backgroundDefault: '',\n    background: '',\n    darkTextPrimary: '',\n    darkTextSecondary: '',\n    textDark: '',\n    menuSelected: '',\n    menuSelectedBack: '',\n    divider: '',\n    customization\n  };\n\n  switch (customization.navType) {\n    case 'dark':\n      themeOption.paper = color.darkLevel2;\n      themeOption.backgroundDefault = color.darkPaper;\n      themeOption.background = color.darkBackground;\n      themeOption.darkTextPrimary = color.darkTextPrimary;\n      themeOption.darkTextSecondary = color.darkTextSecondary;\n      themeOption.textDark = color.darkTextPrimary;\n      themeOption.menuSelected = color.darkSecondaryMain;\n      themeOption.menuSelectedBack = color.darkSecondaryMain + 15;\n      themeOption.divider = color.darkTextPrimary;\n      themeOption.heading = color.darkTextTitle;\n      break;\n\n    case 'light':\n    default:\n      themeOption.paper = color.paper;\n      themeOption.backgroundDefault = color.paper;\n      themeOption.background = color.primaryLight;\n      themeOption.darkTextPrimary = color.grey700;\n      themeOption.darkTextSecondary = color.grey500;\n      themeOption.textDark = color.grey900;\n      themeOption.menuSelected = color.secondaryDark;\n      themeOption.menuSelectedBack = color.secondaryLight;\n      themeOption.divider = color.grey200;\n      themeOption.heading = color.grey900;\n      break;\n  }\n\n  const themeOptions = {\n    direction: customization.rtlLayout ? 'rtl' : 'ltr',\n    palette: themePalette(themeOption),\n    mixins: {\n      toolbar: {\n        minHeight: '48px',\n        padding: '16px',\n        '@media (min-width: 600px)': {\n          minHeight: '48px'\n        }\n      }\n    },\n    typography: themeTypography(themeOption),\n    customShadows: customShadows(customization.navType, themeOption)\n  };\n  const themes = createTheme(themeOptions);\n  themes.components = componentStyleOverrides(themeOption);\n  return themes;\n};\nexport default theme;","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/themes/index.js"],"names":["createTheme","colors","theme1","theme2","theme3","theme4","theme5","theme6","componentStyleOverrides","themePalette","themeTypography","customShadows","theme","customization","color","presetColor","themeOption","heading","paper","backgroundDefault","background","darkTextPrimary","darkTextSecondary","textDark","menuSelected","menuSelectedBack","divider","navType","darkLevel2","darkPaper","darkBackground","darkSecondaryMain","darkTextTitle","primaryLight","grey700","grey500","grey900","secondaryDark","secondaryLight","grey200","themeOptions","direction","rtlLayout","palette","mixins","toolbar","minHeight","padding","typography","themes","components"],"mappings":"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","sourcesContent":["import { createTheme } from '@mui/material/styles';\r\n\r\n// assets\r\nimport colors from 'assets/scss/_themes-vars.module.scss';\r\nimport theme1 from 'assets/scss/_theme1.module.scss';\r\nimport theme2 from 'assets/scss/_theme2.module.scss';\r\nimport theme3 from 'assets/scss/_theme3.module.scss';\r\nimport theme4 from 'assets/scss/_theme4.module.scss';\r\nimport theme5 from 'assets/scss/_theme5.module.scss';\r\nimport theme6 from 'assets/scss/_theme6.module.scss';\r\n\r\n// project imports\r\nimport componentStyleOverrides from './compStyleOverride';\r\nimport themePalette from './palette';\r\nimport themeTypography from './typography';\r\nimport customShadows from './shadows';\r\n\r\n/**\r\n * Represent theme style and structure as per Material-UI\r\n * @param {JsonObject} customization customization parameter object\r\n */\r\n\r\nexport const theme = (customization) => {\r\n    let color;\r\n    switch (customization.presetColor) {\r\n        case 'theme1':\r\n            color = theme1;\r\n            break;\r\n        case 'theme2':\r\n            color = theme2;\r\n            break;\r\n        case 'theme3':\r\n            color = theme3;\r\n            break;\r\n        case 'theme4':\r\n            color = theme4;\r\n            break;\r\n        case 'theme5':\r\n            color = theme5;\r\n            break;\r\n        case 'theme6':\r\n            color = theme6;\r\n            break;\r\n        case 'default':\r\n        default:\r\n            color = colors;\r\n    }\r\n\r\n    const themeOption = {\r\n        colors: color,\r\n        heading: '',\r\n        paper: '',\r\n        backgroundDefault: '',\r\n        background: '',\r\n        darkTextPrimary: '',\r\n        darkTextSecondary: '',\r\n        textDark: '',\r\n        menuSelected: '',\r\n        menuSelectedBack: '',\r\n        divider: '',\r\n        customization\r\n    };\r\n\r\n    switch (customization.navType) {\r\n        case 'dark':\r\n            themeOption.paper = color.darkLevel2;\r\n            themeOption.backgroundDefault = color.darkPaper;\r\n            themeOption.background = color.darkBackground;\r\n            themeOption.darkTextPrimary = color.darkTextPrimary;\r\n            themeOption.darkTextSecondary = color.darkTextSecondary;\r\n            themeOption.textDark = color.darkTextPrimary;\r\n            themeOption.menuSelected = color.darkSecondaryMain;\r\n            themeOption.menuSelectedBack = color.darkSecondaryMain + 15;\r\n            themeOption.divider = color.darkTextPrimary;\r\n            themeOption.heading = color.darkTextTitle;\r\n            break;\r\n        case 'light':\r\n        default:\r\n            themeOption.paper = color.paper;\r\n            themeOption.backgroundDefault = color.paper;\r\n            themeOption.background = color.primaryLight;\r\n            themeOption.darkTextPrimary = color.grey700;\r\n            themeOption.darkTextSecondary = color.grey500;\r\n            themeOption.textDark = color.grey900;\r\n            themeOption.menuSelected = color.secondaryDark;\r\n            themeOption.menuSelectedBack = color.secondaryLight;\r\n            themeOption.divider = color.grey200;\r\n            themeOption.heading = color.grey900;\r\n            break;\r\n    }\r\n\r\n    const themeOptions = {\r\n        direction: customization.rtlLayout ? 'rtl' : 'ltr',\r\n        palette: themePalette(themeOption),\r\n        mixins: {\r\n            toolbar: {\r\n                minHeight: '48px',\r\n                padding: '16px',\r\n                '@media (min-width: 600px)': {\r\n                    minHeight: '48px'\r\n                }\r\n            }\r\n        },\r\n        typography: themeTypography(themeOption),\r\n        customShadows: customShadows(customization.navType, themeOption)\r\n    };\r\n\r\n    const themes = createTheme(themeOptions);\r\n    themes.components = componentStyleOverrides(themeOption);\r\n\r\n    return themes;\r\n};\r\n\r\nexport default theme;\r\n"]},"metadata":{},"sourceType":"module"}