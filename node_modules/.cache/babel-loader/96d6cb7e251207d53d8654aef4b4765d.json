{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/priornotice/components/StepOne.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\"; // material-ui\n\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, Typography, TextField } from \"@mui/material\"; // project imports\n\nimport AnimateButton from \"ui-component/extended/AnimateButton\"; // third-party\n\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  CompanyName: yup.string().required(\"Company Name is required\"),\n  contactName: yup.string().required(\"Contact Name is required\")\n}); // ==============================|| FORM WIZARD - VALIDATION  ||============================== //\n\nconst StepOne = ({\n  shippingData,\n  setShippingData,\n  handleNext,\n  setErrorIndex\n}) => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      CompanyName: shippingData.CompanyName,\n      contactName: shippingData.contactName\n    },\n    validationSchema,\n    onSubmit: values => {\n      setShippingData({\n        CompanyName: values.CompanyName,\n        contactName: values.contactName\n      });\n      handleNext();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Submitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      id: \"validation-forms\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"CompanyName\",\n            name: \"CompanyName\",\n            label: \"Company Name *\",\n            defaultValue: formik.values.CompanyName,\n            onChange: formik.handleChange,\n            error: formik.touched.CompanyName && Boolean(formik.errors.CompanyName),\n            helperText: formik.touched.CompanyName && formik.errors.CompanyName,\n            fullWidth: true,\n            autoComplete: \"given-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"fdaRegister\",\n            name: \"fdaRegister\",\n            label: \"FDA Register Number\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"contactName\",\n            name: \"contactName\",\n            label: \"Contact Name *\",\n            defaultValue: formik.values.contactName,\n            onChange: formik.handleChange,\n            error: formik.touched.contactName && Boolean(formik.errors.contactName),\n            helperText: formik.touched.contactName && formik.errors.contactName,\n            fullWidth: true,\n            autoComplete: \"family-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address1\",\n            name: \"address1\",\n            label: \"Address\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city\",\n            name: \"city\",\n            label: \"City\",\n            fullWidth: true,\n            autoComplete: \"shipping address-level2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"state\",\n            name: \"state\",\n            label: \"State/Province/Region\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"zip\",\n            name: \"zip\",\n            label: \"Zip / Postal code\",\n            fullWidth: true,\n            autoComplete: \"shipping postal-code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"country\",\n            name: \"country\",\n            label: \"Country\",\n            fullWidth: true,\n            autoComplete: \"shipping country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"secondary\",\n              name: \"saveAddress\",\n              value: \"yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this),\n            label: \"Use this address for payment details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  my: 3,\n                  ml: 1\n                },\n                type: \"submit\",\n                onClick: () => setErrorIndex(0),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n/* StepOne.propTypes = {\n    shippingData: PropTypes.object,\n    setShippingData: PropTypes.func,\n    handleNext: PropTypes.func,\n    setErrorIndex: PropTypes.func\n}; */\n\n\n_s(StepOne, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/priornotice/components/StepOne.jsx"],"names":["PropTypes","Button","Checkbox","FormControlLabel","Grid","Stack","Typography","TextField","AnimateButton","useFormik","yup","validationSchema","object","CompanyName","string","required","contactName","StepOne","shippingData","setShippingData","handleNext","setErrorIndex","formik","initialValues","onSubmit","values","mb","handleSubmit","handleChange","touched","Boolean","errors","my","ml"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\n\n// material-ui\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\n// project imports\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\n\n// third-party\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  CompanyName: yup.string().required(\"Company Name is required\"),\n  contactName: yup.string().required(\"Contact Name is required\"),\n});\n\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\n\nconst StepOne = ({\n  shippingData,\n  setShippingData,\n  handleNext,\n  setErrorIndex,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      CompanyName: shippingData.CompanyName,\n      contactName: shippingData.contactName,\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      setShippingData({\n        CompanyName: values.CompanyName,\n        contactName: values.contactName,\n      });\n      handleNext();\n    },\n  });\n\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\n        Submitter\n      </Typography>\n      <form onSubmit={formik.handleSubmit} id=\"validation-forms\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"CompanyName\"\n              name=\"CompanyName\"\n              label=\"Company Name *\"\n              defaultValue={formik.values.CompanyName}\n              onChange={formik.handleChange}\n              error={\n                formik.touched.CompanyName && Boolean(formik.errors.CompanyName)\n              }\n              helperText={\n                formik.touched.CompanyName && formik.errors.CompanyName\n              }\n              fullWidth\n              autoComplete=\"given-name\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"fdaRegister\"\n              name=\"fdaRegister\"\n              label=\"FDA Register Number\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"contactName\"\n              name=\"contactName\"\n              label=\"Contact Name *\"\n              defaultValue={formik.values.contactName}\n              onChange={formik.handleChange}\n              error={formik.touched.contactName && Boolean(formik.errors.contactName)}\n              helperText={formik.touched.contactName && formik.errors.contactName}\n              fullWidth\n              autoComplete=\"family-name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"address1\"\n              name=\"address1\"\n              label=\"Address\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"city\"\n              name=\"city\"\n              label=\"City\"\n              fullWidth\n              autoComplete=\"shipping address-level2\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"state\"\n              name=\"state\"\n              label=\"State/Province/Region\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"zip\"\n              name=\"zip\"\n              label=\"Zip / Postal code\"\n              fullWidth\n              autoComplete=\"shipping postal-code\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"country\"\n              name=\"country\"\n              label=\"Country\"\n              fullWidth\n              autoComplete=\"shipping country\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={\n                <Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />\n              }\n              label=\"Use this address for payment details\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" justifyContent=\"flex-end\">\n              <AnimateButton>\n                <Button\n                  variant=\"contained\"\n                  sx={{ my: 3, ml: 1 }}\n                  type=\"submit\"\n                  onClick={() => setErrorIndex(0)}\n                >\n                  Next\n                </Button>\n              </AnimateButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\n/* StepOne.propTypes = {\n    shippingData: PropTypes.object,\n    setShippingData: PropTypes.func,\n    handleNext: PropTypes.func,\n    setErrorIndex: PropTypes.func\n}; */\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}