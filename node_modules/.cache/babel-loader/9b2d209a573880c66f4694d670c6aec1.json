{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/application/contact/List/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Fragment } from 'react'; // material-ui\n\nimport { Button, Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material'; // project imports\n\nimport UserDetails from '../UserDetails';\nimport UserEdit from '../UserEdit';\nimport ContactList from 'ui-component/cards/ContactList';\nimport MainCard from 'ui-component/cards/MainCard';\nimport axios from 'utils/axios';\nimport { gridSpacing } from 'store/constant';\nimport User1 from 'assets/images/users/avatar-1.png'; // assets\n\nimport { IconSearch } from '@tabler/icons';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined'; // ==============================|| CONTACT LIST ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardListPage = () => {\n  _s();\n\n  // get all users details\n  const [data, setData] = useState({});\n\n  const convertData = userData => userData.reduce((a, curr) => {\n    const firstLatter = curr.name[0].toUpperCase();\n\n    if (Object.prototype.hasOwnProperty.call(a, firstLatter)) {\n      a[firstLatter].push(curr);\n    } else {\n      a[firstLatter] = [curr];\n    }\n\n    return a;\n  }, {});\n\n  const getData = async () => {\n    const response = await axios.get('/api/chat/users');\n    setData(convertData(response.data.users));\n    return response.data.users;\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // edit selected user and modify users data\n\n  const [user, setUser] = useState({});\n\n  const modifyUser = async u => {\n    await axios.post('/api/chat/users/modify', u);\n    getData().then(d => {\n      if (user) {\n        const idx = d.findIndex(item => item.id === user.id);\n        if (idx > -1) setUser(d[idx]);\n      }\n    });\n  }; // handle new user insert action\n\n\n  const [userDetails, setUserDetails] = useState(false);\n  const [userEdit, setUserEdit] = useState(false);\n\n  const handleOnAdd = () => {\n    setUser({\n      name: '',\n      company: '',\n      role: '',\n      work_email: '',\n      personal_email: '',\n      work_phone: '',\n      personal_phone: '',\n      location: 'USA',\n      image: User1,\n      status: 'I am online',\n      lastMessage: '2h ago',\n      birthdayText: ''\n    });\n    setUserDetails(false);\n    setUserEdit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Contact List\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        zeroMinWidth: true,\n        sx: {\n          display: userDetails || userEdit ? {\n            xs: 'none',\n            md: 'block'\n          } : 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            zeroMinWidth: true,\n            children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"input-search-card-style1\",\n              placeholder: \"Search Contact\",\n              fullWidth: true,\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(IconSearch, {\n                  stroke: 1.5,\n                  size: \"1rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"large\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 44\n              }, this),\n              sx: {\n                px: 2.75,\n                py: 1.5\n              },\n              onClick: handleOnAdd,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), Object.keys(data).map((key, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: \"primary\",\n                sx: {\n                  fontSize: '1rem'\n                },\n                children: key.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                spacing: 0,\n                children: data[key].map((userRow, i) => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ContactList, {\n                    avatar: userRow.avatar,\n                    name: userRow.name,\n                    role: userRow.role,\n                    email: userRow.work_email,\n                    contact: userRow.phone,\n                    location: userRow.location,\n                    onActive: () => {\n                      setUser(userRow);\n                      setUserDetails(true);\n                      setUserEdit(false);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 49\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), userDetails && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 342,\n          margin: {\n            xs: '0 auto',\n            md: 'initial'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(UserDetails, {\n          user: user,\n          onEditClick: () => {\n            setUserDetails(false);\n            setUserEdit(true);\n          },\n          onClose: () => {\n            setUserDetails(false);\n            setUserEdit(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), userEdit && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 342,\n          margin: {\n            xs: '0 auto',\n            md: 'initial'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(UserEdit, {\n          user: user,\n          onSave: u => {\n            if (u.id) setUserDetails(true);\n            setUserEdit(false);\n            modifyUser(u);\n          },\n          onCancel: u => {\n            if (u.id) setUserDetails(true);\n            setUserEdit(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardListPage, \"w2XmFLcV5grzNMVeTKrb+LPfwf4=\");\n\n_c = CardListPage;\nexport default CardListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardListPage\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/application/contact/List/index.js"],"names":["useState","useEffect","Fragment","Button","Grid","InputAdornment","OutlinedInput","Typography","UserDetails","UserEdit","ContactList","MainCard","axios","gridSpacing","User1","IconSearch","AddCircleOutlineOutlinedIcon","CardListPage","data","setData","convertData","userData","reduce","a","curr","firstLatter","name","toUpperCase","Object","prototype","hasOwnProperty","call","push","getData","response","get","users","user","setUser","modifyUser","u","post","then","d","idx","findIndex","item","id","userDetails","setUserDetails","userEdit","setUserEdit","handleOnAdd","company","role","work_email","personal_email","work_phone","personal_phone","location","image","status","lastMessage","birthdayText","display","xs","md","px","py","keys","map","key","index","fontSize","userRow","i","avatar","phone","width","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserDetails from '../UserDetails';\r\nimport UserEdit from '../UserEdit';\r\nimport ContactList from 'ui-component/cards/ContactList';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\n// ==============================|| CONTACT LIST ||============================== //\r\n\r\nconst CardListPage = () => {\r\n    // get all users details\r\n    const [data, setData] = useState({});\r\n    const convertData = (userData) =>\r\n        userData.reduce((a, curr) => {\r\n            const firstLatter = curr.name[0].toUpperCase();\r\n            if (Object.prototype.hasOwnProperty.call(a, firstLatter)) {\r\n                a[firstLatter].push(curr);\r\n            } else {\r\n                a[firstLatter] = [curr];\r\n            }\r\n            return a;\r\n        }, {});\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/chat/users');\r\n        setData(convertData(response.data.users));\r\n        return response.data.users;\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // edit selected user and modify users data\r\n    const [user, setUser] = useState({});\r\n    const modifyUser = async (u) => {\r\n        await axios.post('/api/chat/users/modify', u);\r\n        getData().then((d) => {\r\n            if (user) {\r\n                const idx = d.findIndex((item) => item.id === user.id);\r\n                if (idx > -1) setUser(d[idx]);\r\n            }\r\n        });\r\n    };\r\n\r\n    // handle new user insert action\r\n    const [userDetails, setUserDetails] = useState(false);\r\n    const [userEdit, setUserEdit] = useState(false);\r\n    const handleOnAdd = () => {\r\n        setUser({\r\n            name: '',\r\n            company: '',\r\n            role: '',\r\n            work_email: '',\r\n            personal_email: '',\r\n            work_phone: '',\r\n            personal_phone: '',\r\n            location: 'USA',\r\n            image: User1,\r\n            status: 'I am online',\r\n            lastMessage: '2h ago',\r\n            birthdayText: ''\r\n        });\r\n        setUserDetails(false);\r\n        setUserEdit(true);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Contact List\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs zeroMinWidth sx={{ display: userDetails || userEdit ? { xs: 'none', md: 'block' } : 'block' }}>\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <OutlinedInput\r\n                                id=\"input-search-card-style1\"\r\n                                placeholder=\"Search Contact\"\r\n                                fullWidth\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                startIcon={<AddCircleOutlineOutlinedIcon />}\r\n                                sx={{ px: 2.75, py: 1.5 }}\r\n                                onClick={handleOnAdd}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {Object.keys(data).map((key, index) => (\r\n                            <Fragment key={index}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h4\" color=\"primary\" sx={{ fontSize: '1rem' }}>\r\n                                        {key.toUpperCase()}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container direction=\"row\" spacing={0}>\r\n                                        {data[key].map((userRow, i) => (\r\n                                            <Grid item xs={12} key={i}>\r\n                                                <ContactList\r\n                                                    avatar={userRow.avatar}\r\n                                                    name={userRow.name}\r\n                                                    role={userRow.role}\r\n                                                    email={userRow.work_email}\r\n                                                    contact={userRow.phone}\r\n                                                    location={userRow.location}\r\n                                                    onActive={() => {\r\n                                                        setUser(userRow);\r\n                                                        setUserDetails(true);\r\n                                                        setUserEdit(false);\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n                {userDetails && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserDetails\r\n                            user={user}\r\n                            onEditClick={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(true);\r\n                            }}\r\n                            onClose={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n\r\n                {userEdit && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserEdit\r\n                            user={user}\r\n                            onSave={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                                modifyUser(u);\r\n                            }}\r\n                            onCancel={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default CardListPage;\r\n"]},"metadata":{},"sourceType":"module"}