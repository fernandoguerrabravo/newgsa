{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/application/kanban/Board/EditItem.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Autocomplete, Box, Button, CardMedia, FormControl, FormControlLabel, Grid, MenuItem, Radio, RadioGroup, Select, TextField, Typography } from '@mui/material';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker'; // third-party\n\nimport * as yup from 'yup';\nimport { useFormik } from 'formik'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { EDIT_ITEM, SNACKBAR_OPEN } from 'store/actions'; // assets\n\nimport imgMain from 'assets/images/profile/profile-back-1.png';\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/users', true);\n\nconst validationSchema = yup.object({\n  title: yup.string().required('Task title is required'),\n  dueDate: yup.date()\n}); // ==============================|| KANBAN BOARD - ITEM EDIT ||============================== //\n\nconst EditItem = ({\n  item,\n  profiles,\n  userStory,\n  columns,\n  handleDrawerOpen\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const itemUserStory = userStory.filter(story => story.itemIds.filter(itemId => itemId === item.id)[0])[0];\n  const itemColumn = columns.filter(column => column.itemIds.filter(itemId => itemId === item.id)[0])[0];\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      id: item.id,\n      title: item.title,\n      assign: item.assign,\n      priority: item.priority,\n      dueDate: item.dueDate ? new Date(item.dueDate) : new Date(),\n      description: item.description,\n      commentIds: item.commentIds,\n      image: item.image,\n      storyId: itemUserStory ? itemUserStory.id : '',\n      columnId: itemColumn ? itemColumn.id : ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch({\n        type: EDIT_ITEM,\n        payload: {\n          item: {\n            id: values.id,\n            title: values.title,\n            assign: values.assign,\n            priority: values.priority,\n            dueDate: values.dueDate ? new Date(values.dueDate) : new Date(),\n            description: values.description,\n            commentIds: values.commentIds,\n            image: values.image\n          },\n          storyId: values.storyId,\n          columnId: values.columnId\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n      handleDrawerOpen();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"title\",\n            name: \"title\",\n            label: \"Title\",\n            defaultValue: formik.values.title,\n            onChange: formik.handleChange,\n            error: formik.touched.title && Boolean(formik.errors.title),\n            helperText: formik.touched.title && formik.errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Assign to:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justifyContent: \"flex-start\",\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"assign\",\n                  value: profiles.find(profile => profile.id === formik.values.assign),\n                  onChange: (event, value) => {\n                    formik.setFieldValue('assign', value === null || value === void 0 ? void 0 : value.id);\n                  },\n                  options: profiles,\n                  fullWidth: true,\n                  autoHighlight: true,\n                  getOptionLabel: option => option.name,\n                  renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"li\",\n                    sx: {\n                      '& > img': {\n                        mr: 2,\n                        flexShrink: 0\n                      }\n                    },\n                    ...props,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      loading: \"lazy\",\n                      width: \"20\",\n                      src: avatarImage(`./${option.avatar}`).default,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 49\n                    }, this), option.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 45\n                  }, this),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"assign\",\n                    label: \"Choose a assignee\",\n                    inputProps: { ...params.inputProps,\n                      autoComplete: 'new-password' // disable autocomplete and autofill\n\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Prioritize:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  row: true,\n                  \"aria-label\": \"color\",\n                  value: formik.values.priority,\n                  onChange: formik.handleChange,\n                  name: \"priority\",\n                  id: \"priority\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"low\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\",\n                      sx: {\n                        color: 'primary.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Low\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"medium\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"warning\",\n                      sx: {\n                        color: 'warning.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 54\n                    }, this),\n                    label: \"Medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"high\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"error\",\n                      sx: {\n                        color: 'error.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 54\n                    }, this),\n                    label: \"High\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Due date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n                label: \"Due Date\",\n                value: formik.values.dueDate,\n                inputFormat: \"dd/MM/yyyy\",\n                onChange: date => {\n                  formik.setFieldValue('dueDate', date);\n                },\n                renderInput: props => /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  ...props\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"description\",\n                name: \"description\",\n                multiline: true,\n                rows: 3,\n                defaultValue: formik.values.description,\n                onChange: formik.handleChange,\n                error: formik.touched.description && Boolean(formik.errors.description),\n                helperText: formik.touched.description && formik.errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"User Story:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"storyId\",\n                  name: \"storyId\",\n                  displayEmpty: true,\n                  value: formik.values.storyId,\n                  onChange: formik.handleChange,\n                  inputProps: {\n                    'aria-label': 'Without label'\n                  },\n                  children: userStory.map((story, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: story.id,\n                    children: [story.id, \" - \", story.title]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"columnId\",\n                  name: \"columnId\",\n                  displayEmpty: true,\n                  value: formik.values.columnId,\n                  onChange: formik.handleChange,\n                  inputProps: {\n                    'aria-label': 'Without label'\n                  },\n                  children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column.id,\n                    children: column.title\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Attachments:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                    component: \"img\",\n                    image: imgMain,\n                    sx: {\n                      width: 60,\n                      height: 60,\n                      borderRadius: 1\n                    },\n                    title: \"Slider5 image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"large\",\n                    sx: {\n                      p: 2\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditItem, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = EditItem;\nEditItem.propTypes = {\n  item: PropTypes.object,\n  profiles: PropTypes.array,\n  userStory: PropTypes.array,\n  columns: PropTypes.array,\n  handleDrawerOpen: PropTypes.func\n};\nexport default EditItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/application/kanban/Board/EditItem.js"],"names":["PropTypes","useDispatch","Autocomplete","Box","Button","CardMedia","FormControl","FormControlLabel","Grid","MenuItem","Radio","RadioGroup","Select","TextField","Typography","AdapterDateFns","LocalizationProvider","DesktopDatePicker","yup","useFormik","AnimateButton","EDIT_ITEM","SNACKBAR_OPEN","imgMain","AddRoundedIcon","avatarImage","require","context","validationSchema","object","title","string","required","dueDate","date","EditItem","item","profiles","userStory","columns","handleDrawerOpen","dispatch","itemUserStory","filter","story","itemIds","itemId","id","itemColumn","column","formik","enableReinitialize","initialValues","assign","priority","Date","description","commentIds","image","storyId","columnId","onSubmit","values","type","payload","open","message","variant","alertSeverity","handleSubmit","handleChange","touched","Boolean","errors","find","profile","event","value","setFieldValue","option","name","props","mr","flexShrink","avatar","default","params","inputProps","autoComplete","color","map","index","width","height","borderRadius","p","propTypes","array","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,gBANJ,EAOIC,IAPJ,EAQIC,QARJ,EASIC,KATJ,EAUIC,UAVJ,EAWIC,MAXJ,EAYIC,SAZJ,EAaIC,UAbJ,QAcO,eAdP;AAeA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B,C,CAEA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,eAAzC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,OAAR,CAAgB,qBAAhB,EAAuC,IAAvC,CAApB;;AACA,MAAMC,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,CAAW;AAChCC,EAAAA,KAAK,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADyB;AAEhCC,EAAAA,OAAO,EAAEf,GAAG,CAACgB,IAAJ;AAFuB,CAAX,CAAzB,C,CAKA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA;AAAtC,CAAD,KAA8D;AAAA;;AAC3E,QAAMC,QAAQ,GAAGxC,WAAW,EAA5B;AAEA,QAAMyC,aAAa,GAAGJ,SAAS,CAACK,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAsBG,MAAD,IAAYA,MAAM,KAAKV,IAAI,CAACW,EAAjD,EAAqD,CAArD,CAA5B,EAAqF,CAArF,CAAtB;AACA,QAAMC,UAAU,GAAGT,OAAO,CAACI,MAAR,CAAgBM,MAAD,IAAYA,MAAM,CAACJ,OAAP,CAAeF,MAAf,CAAuBG,MAAD,IAAYA,MAAM,KAAKV,IAAI,CAACW,EAAlD,EAAsD,CAAtD,CAA3B,EAAqF,CAArF,CAAnB;AAEA,QAAMG,MAAM,GAAG/B,SAAS,CAAC;AACrBgC,IAAAA,kBAAkB,EAAE,IADC;AAErBC,IAAAA,aAAa,EAAE;AACXL,MAAAA,EAAE,EAAEX,IAAI,CAACW,EADE;AAEXjB,MAAAA,KAAK,EAAEM,IAAI,CAACN,KAFD;AAGXuB,MAAAA,MAAM,EAAEjB,IAAI,CAACiB,MAHF;AAIXC,MAAAA,QAAQ,EAAElB,IAAI,CAACkB,QAJJ;AAKXrB,MAAAA,OAAO,EAAEG,IAAI,CAACH,OAAL,GAAe,IAAIsB,IAAJ,CAASnB,IAAI,CAACH,OAAd,CAAf,GAAwC,IAAIsB,IAAJ,EALtC;AAMXC,MAAAA,WAAW,EAAEpB,IAAI,CAACoB,WANP;AAOXC,MAAAA,UAAU,EAAErB,IAAI,CAACqB,UAPN;AAQXC,MAAAA,KAAK,EAAEtB,IAAI,CAACsB,KARD;AASXC,MAAAA,OAAO,EAAEjB,aAAa,GAAGA,aAAa,CAACK,EAAjB,GAAsB,EATjC;AAUXa,MAAAA,QAAQ,EAAEZ,UAAU,GAAGA,UAAU,CAACD,EAAd,GAAmB;AAV5B,KAFM;AAcrBnB,IAAAA,gBAdqB;AAerBiC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBrB,MAAAA,QAAQ,CAAC;AACLsB,QAAAA,IAAI,EAAE1C,SADD;AAEL2C,QAAAA,OAAO,EAAE;AACL5B,UAAAA,IAAI,EAAE;AACFW,YAAAA,EAAE,EAAEe,MAAM,CAACf,EADT;AAEFjB,YAAAA,KAAK,EAAEgC,MAAM,CAAChC,KAFZ;AAGFuB,YAAAA,MAAM,EAAES,MAAM,CAACT,MAHb;AAIFC,YAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAJf;AAKFrB,YAAAA,OAAO,EAAE6B,MAAM,CAAC7B,OAAP,GAAiB,IAAIsB,IAAJ,CAASO,MAAM,CAAC7B,OAAhB,CAAjB,GAA4C,IAAIsB,IAAJ,EALnD;AAMFC,YAAAA,WAAW,EAAEM,MAAM,CAACN,WANlB;AAOFC,YAAAA,UAAU,EAAEK,MAAM,CAACL,UAPjB;AAQFC,YAAAA,KAAK,EAAEI,MAAM,CAACJ;AARZ,WADD;AAWLC,UAAAA,OAAO,EAAEG,MAAM,CAACH,OAXX;AAYLC,UAAAA,QAAQ,EAAEE,MAAM,CAACF;AAZZ;AAFJ,OAAD,CAAR;AAiBAnB,MAAAA,QAAQ,CAAC;AACLsB,QAAAA,IAAI,EAAEzC,aADD;AAEL2C,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,OAAO,EAAE,gBAHJ;AAILC,QAAAA,OAAO,EAAE,OAJJ;AAKLC,QAAAA,aAAa,EAAE;AALV,OAAD,CAAR;AAOA5B,MAAAA,gBAAgB;AACnB;AAzCoB,GAAD,CAAxB;AA4CA,sBACI;AAAM,IAAA,QAAQ,EAAEU,MAAM,CAACmB,YAAvB;AAAA,2BACI,QAAC,oBAAD;AAAsB,MAAA,WAAW,EAAEtD,cAAnC;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,KAAK,EAAC,OAJV;AAKI,YAAA,YAAY,EAAEmC,MAAM,CAACY,MAAP,CAAchC,KALhC;AAMI,YAAA,QAAQ,EAAEoB,MAAM,CAACoB,YANrB;AAOI,YAAA,KAAK,EAAEpB,MAAM,CAACqB,OAAP,CAAezC,KAAf,IAAwB0C,OAAO,CAACtB,MAAM,CAACuB,MAAP,CAAc3C,KAAf,CAP1C;AAQI,YAAA,UAAU,EAAEoB,MAAM,CAACqB,OAAP,CAAezC,KAAf,IAAwBoB,MAAM,CAACuB,MAAP,CAAc3C;AARtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,cAAc,EAAC,YAA/B;AAAA,uCACI,QAAC,YAAD;AACI,kBAAA,EAAE,EAAC,QADP;AAEI,kBAAA,KAAK,EAAEO,QAAQ,CAACqC,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAAC5B,EAAR,KAAeG,MAAM,CAACY,MAAP,CAAcT,MAAxD,CAFX;AAGI,kBAAA,QAAQ,EAAE,CAACuB,KAAD,EAAQC,KAAR,KAAkB;AACxB3B,oBAAAA,MAAM,CAAC4B,aAAP,CAAqB,QAArB,EAA+BD,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAE9B,EAAtC;AACH,mBALL;AAMI,kBAAA,OAAO,EAAEV,QANb;AAOI,kBAAA,SAAS,MAPb;AAQI,kBAAA,aAAa,MARjB;AASI,kBAAA,cAAc,EAAG0C,MAAD,IAAYA,MAAM,CAACC,IATvC;AAUI,kBAAA,YAAY,EAAE,CAACC,KAAD,EAAQF,MAAR,kBACV,QAAC,GAAD;AAAK,oBAAA,SAAS,EAAC,IAAf;AAAoB,oBAAA,EAAE,EAAE;AAAE,iCAAW;AAAEG,wBAAAA,EAAE,EAAE,CAAN;AAASC,wBAAAA,UAAU,EAAE;AAArB;AAAb,qBAAxB;AAAA,uBAAqEF,KAArE;AAAA,4CACI;AAAK,sBAAA,OAAO,EAAC,MAAb;AAAoB,sBAAA,KAAK,EAAC,IAA1B;AAA+B,sBAAA,GAAG,EAAExD,WAAW,CAAE,KAAIsD,MAAM,CAACK,MAAO,EAApB,CAAX,CAAkCC,OAAtE;AAA+E,sBAAA,GAAG,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEKN,MAAM,CAACC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXR;AAgBI,kBAAA,WAAW,EAAGM,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,oBAAA,IAAI,EAAC,QAFT;AAGI,oBAAA,KAAK,EAAC,mBAHV;AAII,oBAAA,UAAU,EAAE,EACR,GAAGA,MAAM,CAACC,UADF;AAERC,sBAAAA,YAAY,EAAE,cAFN,CAEqB;;AAFrB;AAJhB;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAoDI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,WAAD;AAAA,uCACI,QAAC,UAAD;AACI,kBAAA,GAAG,MADP;AAEI,gCAAW,OAFf;AAGI,kBAAA,KAAK,EAAEtC,MAAM,CAACY,MAAP,CAAcR,QAHzB;AAII,kBAAA,QAAQ,EAAEJ,MAAM,CAACoB,YAJrB;AAKI,kBAAA,IAAI,EAAC,UALT;AAMI,kBAAA,EAAE,EAAC,UANP;AAAA,0CAQI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,KADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,sBAAA,KAAK,EAAC,SAAb;AAAuB,sBAAA,EAAE,EAAE;AAAEmB,wBAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,0BARJ,eAaI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,QADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,sBAAA,KAAK,EAAC,SAAb;AAAuB,sBAAA,EAAE,EAAE;AAAEA,wBAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,0BAbJ,eAkBI,QAAC,gBAAD;AACI,oBAAA,KAAK,EAAC,MADV;AAEI,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,sBAAA,KAAK,EAAC,OAAb;AAAqB,sBAAA,EAAE,EAAE;AAAEA,wBAAAA,KAAK,EAAE;AAAT;AAAzB;AAAA;AAAA;AAAA;AAAA,4BAFb;AAGI,oBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,0BAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApDJ,eAuFI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,iBAAD;AACI,gBAAA,KAAK,EAAC,UADV;AAEI,gBAAA,KAAK,EAAEvC,MAAM,CAACY,MAAP,CAAc7B,OAFzB;AAGI,gBAAA,WAAW,EAAC,YAHhB;AAII,gBAAA,QAAQ,EAAGC,IAAD,IAAU;AAChBgB,kBAAAA,MAAM,CAAC4B,aAAP,CAAqB,SAArB,EAAgC5C,IAAhC;AACH,iBANL;AAOI,gBAAA,WAAW,EAAG+C,KAAD,iBAAW,QAAC,SAAD;AAAW,kBAAA,SAAS,MAApB;AAAA,qBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAP5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvFJ,eAyGI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,SAAS,MADb;AAEI,gBAAA,EAAE,EAAC,aAFP;AAGI,gBAAA,IAAI,EAAC,aAHT;AAII,gBAAA,SAAS,MAJb;AAKI,gBAAA,IAAI,EAAE,CALV;AAMI,gBAAA,YAAY,EAAE/B,MAAM,CAACY,MAAP,CAAcN,WANhC;AAOI,gBAAA,QAAQ,EAAEN,MAAM,CAACoB,YAPrB;AAQI,gBAAA,KAAK,EAAEpB,MAAM,CAACqB,OAAP,CAAef,WAAf,IAA8BgB,OAAO,CAACtB,MAAM,CAACuB,MAAP,CAAcjB,WAAf,CARhD;AASI,gBAAA,UAAU,EAAEN,MAAM,CAACqB,OAAP,CAAef,WAAf,IAA8BN,MAAM,CAACuB,MAAP,CAAcjB;AAT5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzGJ,eA6HI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,MAAtB;AAAA,uCACI,QAAC,MAAD;AACI,kBAAA,EAAE,EAAC,SADP;AAEI,kBAAA,IAAI,EAAC,SAFT;AAGI,kBAAA,YAAY,MAHhB;AAII,kBAAA,KAAK,EAAEN,MAAM,CAACY,MAAP,CAAcH,OAJzB;AAKI,kBAAA,QAAQ,EAAET,MAAM,CAACoB,YALrB;AAMI,kBAAA,UAAU,EAAE;AAAE,kCAAc;AAAhB,mBANhB;AAAA,4BAQKhC,SAAS,CAACoD,GAAV,CAAc,CAAC9C,KAAD,EAAQ+C,KAAR,kBACX,QAAC,QAAD;AAAsB,oBAAA,KAAK,EAAE/C,KAAK,CAACG,EAAnC;AAAA,+BACKH,KAAK,CAACG,EADX,SACkBH,KAAK,CAACd,KADxB;AAAA,qBAAe6D,KAAf;AAAA;AAAA;AAAA;AAAA,0BADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA7HJ,eAsJI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,MAAtB;AAAA,uCACI,QAAC,MAAD;AACI,kBAAA,EAAE,EAAC,UADP;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,YAAY,MAHhB;AAII,kBAAA,KAAK,EAAEzC,MAAM,CAACY,MAAP,CAAcF,QAJzB;AAKI,kBAAA,QAAQ,EAAEV,MAAM,CAACoB,YALrB;AAMI,kBAAA,UAAU,EAAE;AAAE,kCAAc;AAAhB,mBANhB;AAAA,4BAQK/B,OAAO,CAACmD,GAAR,CAAY,CAACzC,MAAD,EAAS0C,KAAT,kBACT,QAAC,QAAD;AAAsB,oBAAA,KAAK,EAAE1C,MAAM,CAACF,EAApC;AAAA,8BACKE,MAAM,CAACnB;AADZ,qBAAe6D,KAAf;AAAA;AAAA;AAAA;AAAA,0BADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtJJ,eA+KI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAoC,YAAA,OAAO,EAAE,CAA7C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,UAAU,EAAC,QAA3B;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACI,QAAC,SAAD;AACI,oBAAA,SAAS,EAAC,KADd;AAEI,oBAAA,KAAK,EAAEpE,OAFX;AAGI,oBAAA,EAAE,EAAE;AAAEqE,sBAAAA,KAAK,EAAE,EAAT;AAAaC,sBAAAA,MAAM,EAAE,EAArB;AAAyBC,sBAAAA,YAAY,EAAE;AAAvC,qBAHR;AAII,oBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,UAAhB;AAA2B,oBAAA,IAAI,EAAC,OAAhC;AAAwC,oBAAA,EAAE,EAAE;AAAEC,sBAAAA,CAAC,EAAE;AAAL,qBAA5C;AAAA,2CACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA/KJ,eAwMI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,aAAD;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,MAAjB;AAAkB,cAAA,OAAO,EAAC,WAA1B;AAAsC,cAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsNH,CAxQD;;GAAM5D,Q;UACelC,W,EAKFkB,S;;;KANbgB,Q;AA0QNA,QAAQ,CAAC6D,SAAT,GAAqB;AACjB5D,EAAAA,IAAI,EAAEpC,SAAS,CAAC6B,MADC;AAEjBQ,EAAAA,QAAQ,EAAErC,SAAS,CAACiG,KAFH;AAGjB3D,EAAAA,SAAS,EAAEtC,SAAS,CAACiG,KAHJ;AAIjB1D,EAAAA,OAAO,EAAEvC,SAAS,CAACiG,KAJF;AAKjBzD,EAAAA,gBAAgB,EAAExC,SAAS,CAACkG;AALX,CAArB;AAQA,eAAe/D,QAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport {\r\n    Autocomplete,\r\n    Box,\r\n    Button,\r\n    CardMedia,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    MenuItem,\r\n    Radio,\r\n    RadioGroup,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\n\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { EDIT_ITEM, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport imgMain from 'assets/images/profile/profile-back-1.png';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\nconst validationSchema = yup.object({\r\n    title: yup.string().required('Task title is required'),\r\n    dueDate: yup.date()\r\n});\r\n\r\n// ==============================|| KANBAN BOARD - ITEM EDIT ||============================== //\r\n\r\nconst EditItem = ({ item, profiles, userStory, columns, handleDrawerOpen }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const itemUserStory = userStory.filter((story) => story.itemIds.filter((itemId) => itemId === item.id)[0])[0];\r\n    const itemColumn = columns.filter((column) => column.itemIds.filter((itemId) => itemId === item.id)[0])[0];\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            id: item.id,\r\n            title: item.title,\r\n            assign: item.assign,\r\n            priority: item.priority,\r\n            dueDate: item.dueDate ? new Date(item.dueDate) : new Date(),\r\n            description: item.description,\r\n            commentIds: item.commentIds,\r\n            image: item.image,\r\n            storyId: itemUserStory ? itemUserStory.id : '',\r\n            columnId: itemColumn ? itemColumn.id : ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch({\r\n                type: EDIT_ITEM,\r\n                payload: {\r\n                    item: {\r\n                        id: values.id,\r\n                        title: values.title,\r\n                        assign: values.assign,\r\n                        priority: values.priority,\r\n                        dueDate: values.dueDate ? new Date(values.dueDate) : new Date(),\r\n                        description: values.description,\r\n                        commentIds: values.commentIds,\r\n                        image: values.image\r\n                    },\r\n                    storyId: values.storyId,\r\n                    columnId: values.columnId\r\n                }\r\n            });\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n            handleDrawerOpen();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            defaultValue={formik.values.title}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.title && Boolean(formik.errors.title)}\r\n                            helperText={formik.touched.title && formik.errors.title}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Assign to:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Grid container justifyContent=\"flex-start\">\r\n                                    <Autocomplete\r\n                                        id=\"assign\"\r\n                                        value={profiles.find((profile) => profile.id === formik.values.assign)}\r\n                                        onChange={(event, value) => {\r\n                                            formik.setFieldValue('assign', value?.id);\r\n                                        }}\r\n                                        options={profiles}\r\n                                        fullWidth\r\n                                        autoHighlight\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderOption={(props, option) => (\r\n                                            <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                                                <img loading=\"lazy\" width=\"20\" src={avatarImage(`./${option.avatar}`).default} alt=\"\" />\r\n                                                {option.name}\r\n                                            </Box>\r\n                                        )}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                name=\"assign\"\r\n                                                label=\"Choose a assignee\"\r\n                                                inputProps={{\r\n                                                    ...params.inputProps,\r\n                                                    autoComplete: 'new-password' // disable autocomplete and autofill\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Prioritize:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl>\r\n                                    <RadioGroup\r\n                                        row\r\n                                        aria-label=\"color\"\r\n                                        value={formik.values.priority}\r\n                                        onChange={formik.handleChange}\r\n                                        name=\"priority\"\r\n                                        id=\"priority\"\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value=\"low\"\r\n                                            control={<Radio color=\"primary\" sx={{ color: 'primary.main' }} />}\r\n                                            label=\"Low\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"medium\"\r\n                                            control={<Radio color=\"warning\" sx={{ color: 'warning.main' }} />}\r\n                                            label=\"Medium\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"high\"\r\n                                            control={<Radio color=\"error\" sx={{ color: 'error.main' }} />}\r\n                                            label=\"High\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Due date:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <DesktopDatePicker\r\n                                    label=\"Due Date\"\r\n                                    value={formik.values.dueDate}\r\n                                    inputFormat=\"dd/MM/yyyy\"\r\n                                    onChange={(date) => {\r\n                                        formik.setFieldValue('dueDate', date);\r\n                                    }}\r\n                                    renderInput={(props) => <TextField fullWidth {...props} />}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Description:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    multiline\r\n                                    rows={3}\r\n                                    defaultValue={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">User Story:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl fullWidth>\r\n                                    <Select\r\n                                        id=\"storyId\"\r\n                                        name=\"storyId\"\r\n                                        displayEmpty\r\n                                        value={formik.values.storyId}\r\n                                        onChange={formik.handleChange}\r\n                                        inputProps={{ 'aria-label': 'Without label' }}\r\n                                    >\r\n                                        {userStory.map((story, index) => (\r\n                                            <MenuItem key={index} value={story.id}>\r\n                                                {story.id} - {story.title}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">State:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl fullWidth>\r\n                                    <Select\r\n                                        id=\"columnId\"\r\n                                        name=\"columnId\"\r\n                                        displayEmpty\r\n                                        value={formik.values.columnId}\r\n                                        onChange={formik.handleChange}\r\n                                        inputProps={{ 'aria-label': 'Without label' }}\r\n                                    >\r\n                                        {columns.map((column, index) => (\r\n                                            <MenuItem key={index} value={column.id}>\r\n                                                {column.title}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Attachments:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            image={imgMain}\r\n                                            sx={{ width: 60, height: 60, borderRadius: 1 }}\r\n                                            title=\"Slider5 image\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" size=\"large\" sx={{ p: 2 }}>\r\n                                            <AddRoundedIcon />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <AnimateButton>\r\n                            <Button fullWidth variant=\"contained\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </LocalizationProvider>\r\n        </form>\r\n    );\r\n};\r\n\r\nEditItem.propTypes = {\r\n    item: PropTypes.object,\r\n    profiles: PropTypes.array,\r\n    userStory: PropTypes.array,\r\n    columns: PropTypes.array,\r\n    handleDrawerOpen: PropTypes.func\r\n};\r\n\r\nexport default EditItem;\r\n"]},"metadata":{},"sourceType":"module"}