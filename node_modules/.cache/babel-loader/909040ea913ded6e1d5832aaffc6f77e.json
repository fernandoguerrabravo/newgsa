{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/ui-elements/advance/UIToggleButton/CustomizedDividers.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { styled } from '@mui/material/styles';\nimport { Divider, Grid, Paper, ToggleButton, ToggleButtonGroup } from '@mui/material'; // assets\n\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({\n  theme\n}) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    margin: theme.spacing(0.5),\n    border: 0,\n    '&.Mui-disabled': {\n      border: 0\n    },\n    '&:not(:first-of-type)': {\n      borderRadius: theme.shape.borderRadius\n    },\n    '&:first-of-type': {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n})); // ============================|| UI TOGGLE BUTTON - CUSTOMIZED DIVIDERS ||============================ //\n\nexport default function CustomizedDividers() {\n  _s();\n\n  const [formats, setFormats] = useState(() => ['bold', 'italic']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  const [alignment, setAlignment] = useState('left');\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        display: 'flex',\n        border: theme => `1px solid ${theme.palette.divider}`,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(StyledToggleButtonGroup, {\n        size: \"small\",\n        value: alignment,\n        exclusive: true,\n        onChange: handleAlignment,\n        \"aria-label\": \"text alignment\",\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"left\",\n          \"aria-label\": \"left aligned\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"center\",\n          \"aria-label\": \"centered\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"right\",\n          \"aria-label\": \"right aligned\",\n          children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"justify\",\n          \"aria-label\": \"justified\",\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        flexItem: true,\n        orientation: \"vertical\",\n        sx: {\n          mx: 0.5,\n          my: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledToggleButtonGroup, {\n        size: \"small\",\n        value: formats,\n        onChange: handleFormat,\n        \"aria-label\": \"text formatting\",\n        color: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"bold\",\n          \"aria-label\": \"bold\",\n          children: /*#__PURE__*/_jsxDEV(FormatBoldIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"italic\",\n          \"aria-label\": \"italic\",\n          children: /*#__PURE__*/_jsxDEV(FormatItalicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"underlined\",\n          \"aria-label\": \"underlined\",\n          children: /*#__PURE__*/_jsxDEV(FormatUnderlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"color\",\n          \"aria-label\": \"color\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(FormatColorFillIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedDividers, \"BNrjbdvvvWyP4qngkjnm2idn3bM=\");\n\n_c = CustomizedDividers;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDividers\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/ui-elements/advance/UIToggleButton/CustomizedDividers.js"],"names":["useState","styled","Divider","Grid","Paper","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatColorFillIcon","ArrowDropDownIcon","StyledToggleButtonGroup","theme","margin","spacing","border","borderRadius","shape","CustomizedDividers","formats","setFormats","handleFormat","event","newFormats","alignment","setAlignment","handleAlignment","newAlignment","display","palette","divider","flexWrap","mx","my"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Divider, Grid, Paper, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\r\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\r\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\r\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\n\r\n// style constant\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n    '& .MuiToggleButtonGroup-grouped': {\r\n        margin: theme.spacing(0.5),\r\n        border: 0,\r\n        '&.Mui-disabled': {\r\n            border: 0\r\n        },\r\n        '&:not(:first-of-type)': {\r\n            borderRadius: theme.shape.borderRadius\r\n        },\r\n        '&:first-of-type': {\r\n            borderRadius: theme.shape.borderRadius\r\n        }\r\n    }\r\n}));\r\n\r\n// ============================|| UI TOGGLE BUTTON - CUSTOMIZED DIVIDERS ||============================ //\r\n\r\nexport default function CustomizedDividers() {\r\n    const [formats, setFormats] = useState(() => ['bold', 'italic']);\r\n    const handleFormat = (event, newFormats) => {\r\n        setFormats(newFormats);\r\n    };\r\n\r\n    const [alignment, setAlignment] = useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Paper\r\n                elevation={0}\r\n                sx={{\r\n                    display: 'flex',\r\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\r\n                    flexWrap: 'wrap'\r\n                }}\r\n            >\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleAlignment}\r\n                    aria-label=\"text alignment\"\r\n                    color=\"primary\"\r\n                >\r\n                    <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n                <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={formats}\r\n                    onChange={handleFormat}\r\n                    aria-label=\"text formatting\"\r\n                    color=\"secondary\"\r\n                >\r\n                    <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n                        <FormatBoldIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n                        <FormatItalicIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n                        <FormatUnderlinedIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n                        <FormatColorFillIcon />\r\n                        <ArrowDropDownIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}