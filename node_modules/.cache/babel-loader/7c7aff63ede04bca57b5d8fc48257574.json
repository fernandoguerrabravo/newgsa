{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/views/research/components/ListResearchTable.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Center from \"react-center\";\nimport useGetResearch from \"../hooks/useGetResearch\";\nimport ResearchReport from \"./ResearchReport\";\nimport PdfViewer from \"./PdfViewer\";\nimport DataTable from \"react-data-table-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListResearchTable({\n  pdf,\n  setpdf,\n  setboton,\n  idcliente\n}) {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useGetResearch(idcliente);\n  const columnas = [{\n    name: \"SKU Code\",\n    selector: row => row.sku\n  }, {\n    name: \"Keyword\",\n    selector: row => row.keyword\n  }, {\n    name: \"Min Price\",\n    selector: row => new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(row.min)\n  }, {\n    name: \"Average Price\",\n    selector: row => new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(row.average)\n  }, {\n    name: \"Max Price\",\n    selector: row => new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(row.max)\n  }, {\n    name: \"Actions\",\n    selector: row => /*#__PURE__*/_jsxDEV(ResearchReport, {\n      setboton: setboton,\n      setpdf: setpdf,\n      sku: row.sku,\n      report: row.report,\n      min: row.min,\n      average: row.average,\n      max: row.max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pdf.loading ? /*#__PURE__*/_jsxDEV(DataTable, {\n      striped: true,\n      columns: columnas,\n      data: data,\n      pagination: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(PdfViewer, {\n        pdf: pdf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ListResearchTable, \"T0u1zekmn5c6wdH7M3twHoW50LA=\", false, function () {\n  return [useGetResearch];\n});\n\n_c = ListResearchTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListResearchTable\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/views/research/components/ListResearchTable.jsx"],"names":["React","useState","Center","useGetResearch","ResearchReport","PdfViewer","DataTable","ListResearchTable","pdf","setpdf","setboton","idcliente","data","loading","columnas","name","selector","row","sku","keyword","Intl","NumberFormat","style","currency","format","min","average","max","report"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAGA,eAAe,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAA3B,EAAiE;AAAA;;AAG9E,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBV,cAAc,CAACQ,SAAD,CAAxC;AAGA,QAAMG,QAAQ,GAAG,CACf;AACEC,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;AAFvB,GADe,EAKf;AACEH,IAAAA,IAAI,EAAG,SADT;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACE;AAFvB,GALe,EAUf;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,IACX,IAAIG,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,MAAAA,KAAK,EAAE,UADsB;AAE7BC,MAAAA,QAAQ,EAAE;AAFmB,KAA/B,EAGGC,MAHH,CAGUP,GAAG,CAACQ,GAHd;AAHJ,GAVe,EAkBf;AACEV,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,IACX,IAAIG,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,MAAAA,KAAK,EAAE,UADsB;AAE7BC,MAAAA,QAAQ,EAAE;AAFmB,KAA/B,EAGGC,MAHH,CAGUP,GAAG,CAACS,OAHd;AAHJ,GAlBe,EA0Bf;AACEX,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,IACX,IAAIG,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,MAAAA,KAAK,EAAE,UADsB;AAE7BC,MAAAA,QAAQ,EAAE;AAFmB,KAA/B,EAGGC,MAHH,CAGUP,GAAG,CAACU,GAHd;AAHJ,GA1Be,EAmCf;AACEZ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,QAAQ,EAAEC,GAAG,iBACX,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEP,QADZ;AAEE,MAAA,MAAM,EAAED,MAFV;AAGE,MAAA,GAAG,EAAEQ,GAAG,CAACC,GAHX;AAIE,MAAA,MAAM,EAAED,GAAG,CAACW,MAJd;AAKE,MAAA,GAAG,EAAEX,GAAG,CAACQ,GALX;AAME,MAAA,OAAO,EAAER,GAAG,CAACS,OANf;AAOE,MAAA,GAAG,EAAET,GAAG,CAACU;AAPX;AAAA;AAAA;AAAA;AAAA;AAHJ,GAnCe,CAAjB;AAmDA,sBACE;AAAA,cACGnB,GAAG,CAACK,OAAJ,gBACC,QAAC,SAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,OAAO,EAAEC,QAFX;AAGE,MAAA,IAAI,EAAEF,IAHR;AAIE,MAAA,UAAU;AAJZ;AAAA;AAAA;AAAA;AAAA,YADD,gBAQC,QAAC,MAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATJ,mBADF;AAgBD;;GAzEuBD,iB;UAGIJ,c;;;KAHJI,iB","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Center from \"react-center\";\nimport useGetResearch from \"../hooks/useGetResearch\";\nimport ResearchReport from \"./ResearchReport\";\nimport PdfViewer from \"./PdfViewer\";\nimport DataTable from \"react-data-table-component\";\n\n\nexport default function ListResearchTable({ pdf, setpdf, setboton, idcliente }) {\n\n  \n  const { data, loading } = useGetResearch(idcliente);\n\n\n  const columnas = [\n    {\n      name: \"SKU Code\",\n      selector: row => row.sku,\n    },\n    {\n      name : \"Keyword\",\n      selector: row => row.keyword\n    },\n\t\n    {\n      name: \"Min Price\",\n      selector: row =>\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(row.min),\n    },\n    {\n      name: \"Average Price\",\n      selector: row =>\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(row.average),\n    },\n    {\n      name: \"Max Price\",\n      selector: row =>\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(row.max),\n    },\n\t\n    {\n      name: \"Actions\",\n      selector: row => (\n        <ResearchReport\n          setboton={setboton}\n          setpdf={setpdf}\n          sku={row.sku}\n          report={row.report}\n          min={row.min}\n          average={row.average}\n          max={row.max}\n\t   /> \n      ),\n    }, \n  ];\n\n  return (\n    <>\n      {pdf.loading ? (\n        <DataTable\n          striped\n          columns={columnas}\n          data={data}\n          pagination\n        />\n      ) : (\n        <Center>\n          <PdfViewer pdf={pdf} />\n        </Center>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}