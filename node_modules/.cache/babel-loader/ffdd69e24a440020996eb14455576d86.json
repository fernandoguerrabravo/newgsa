{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/application/kanban/Board/AddItemComment.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, Grid, TextField } from '@mui/material'; // third-party\n\nimport { Chance } from 'chance'; // project imports\n\nimport { ADD_ITEM_COMMENT, SNACKBAR_OPEN } from 'store/actions'; // assets\n\nimport AddPhotoAlternateTwoToneIcon from '@mui/icons-material/AddPhotoAlternateTwoTone';\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\nimport AddToDriveTwoToneIcon from '@mui/icons-material/AddToDriveTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chance = new Chance(); // ==============================|| KANBAN BOARD - ADD ITEM COMMENT ||============================== //\n\nconst AddItemComment = ({\n  itemId\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const customization = useSelector(state => state.customization);\n  const [comment, setComment] = useState('');\n  const [isComment, setIsComment] = useState(false);\n\n  const addTaskComment = () => {\n    if (comment.length > 0) {\n      const newComment = {\n        id: `${chance.integer({\n          min: 1000,\n          max: 9999\n        })}`,\n        comment,\n        profileId: 'profile-1'\n      };\n      dispatch({\n        type: ADD_ITEM_COMMENT,\n        payload: {\n          itemId,\n          comment: newComment\n        }\n      });\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Comment Add successfully',\n        variant: 'alert',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        alertSeverity: 'success'\n      });\n      setComment('');\n    } else {\n      setIsComment(true);\n    }\n  };\n\n  const handleAddTaskComment = event => {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      addTaskComment();\n    }\n  };\n\n  const handleTaskComment = event => {\n    const newComment = event.target.value;\n    setComment(newComment);\n\n    if (newComment.length <= 0) {\n      setIsComment(true);\n    } else {\n      setIsComment(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2.5,\n      border: '1px solid',\n      borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\n      borderRadius: `${customization.borderRadius}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 0.5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          placeholder: \"Add Comment\",\n          value: comment,\n          onChange: handleTaskComment,\n          sx: {\n            mb: 2,\n            '& input': {\n              bgcolor: 'transparent',\n              p: 0,\n              borderRadius: '0px'\n            },\n            '& fieldset': {\n              display: 'none'\n            },\n            '& .MuiFormHelperText-root': {\n              ml: 0\n            },\n            '& .MuiOutlinedInput-root': {\n              bgcolor: 'transparent'\n            }\n          },\n          onKeyUp: handleAddTaskComment,\n          helperText: isComment ? 'Comment is required.' : '',\n          error: isComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          sx: {\n            p: 0.5,\n            minWidth: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(AddPhotoAlternateTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          sx: {\n            p: 0.5,\n            minWidth: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(AttachFileTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          sx: {\n            p: 0.5,\n            minWidth: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(AddToDriveTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        zeroMinWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: addTaskComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddItemComment, \"96hdj9l9MN4U0elTrTyMjEp69Xc=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = AddItemComment;\nAddItemComment.propTypes = {\n  itemId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\nexport default AddItemComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemComment\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/application/kanban/Board/AddItemComment.js"],"names":["PropTypes","useState","useDispatch","useSelector","useTheme","Box","Button","Grid","TextField","Chance","ADD_ITEM_COMMENT","SNACKBAR_OPEN","AddPhotoAlternateTwoToneIcon","AttachFileTwoToneIcon","AddToDriveTwoToneIcon","chance","AddItemComment","itemId","theme","dispatch","customization","state","comment","setComment","isComment","setIsComment","addTaskComment","length","newComment","id","integer","min","max","profileId","type","payload","open","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","handleAddTaskComment","event","key","keyCode","handleTaskComment","target","value","p","border","borderColor","palette","mode","background","default","primary","borderRadius","mb","bgcolor","display","ml","minWidth","propTypes","oneOfType","string","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, Grid, TextField } from '@mui/material';\r\n\r\n// third-party\r\nimport { Chance } from 'chance';\r\n\r\n// project imports\r\nimport { ADD_ITEM_COMMENT, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport AddPhotoAlternateTwoToneIcon from '@mui/icons-material/AddPhotoAlternateTwoTone';\r\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\r\nimport AddToDriveTwoToneIcon from '@mui/icons-material/AddToDriveTwoTone';\r\n\r\nconst chance = new Chance();\r\n\r\n// ==============================|| KANBAN BOARD - ADD ITEM COMMENT ||============================== //\r\n\r\nconst AddItemComment = ({ itemId }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const [comment, setComment] = useState('');\r\n    const [isComment, setIsComment] = useState(false);\r\n\r\n    const addTaskComment = () => {\r\n        if (comment.length > 0) {\r\n            const newComment = {\r\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\r\n                comment,\r\n                profileId: 'profile-1'\r\n            };\r\n\r\n            dispatch({\r\n                type: ADD_ITEM_COMMENT,\r\n                payload: { itemId, comment: newComment }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Comment Add successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n            setComment('');\r\n        } else {\r\n            setIsComment(true);\r\n        }\r\n    };\r\n\r\n    const handleAddTaskComment = (event) => {\r\n        if (event.key === 'Enter' || event.keyCode === 13) {\r\n            addTaskComment();\r\n        }\r\n    };\r\n\r\n    const handleTaskComment = (event) => {\r\n        const newComment = event.target.value;\r\n        setComment(newComment);\r\n        if (newComment.length <= 0) {\r\n            setIsComment(true);\r\n        } else {\r\n            setIsComment(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                p: 2.5,\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                borderRadius: `${customization.borderRadius}px`\r\n            }}\r\n        >\r\n            <Grid container alignItems=\"center\" spacing={0.5}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder=\"Add Comment\"\r\n                        value={comment}\r\n                        onChange={handleTaskComment}\r\n                        sx={{\r\n                            mb: 2,\r\n                            '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\r\n                            '& fieldset': { display: 'none' },\r\n                            '& .MuiFormHelperText-root': {\r\n                                ml: 0\r\n                            },\r\n                            '& .MuiOutlinedInput-root': {\r\n                                bgcolor: 'transparent'\r\n                            }\r\n                        }}\r\n                        onKeyUp={handleAddTaskComment}\r\n                        helperText={isComment ? 'Comment is required.' : ''}\r\n                        error={isComment}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"text\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }}>\r\n                        <AddPhotoAlternateTwoToneIcon />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"text\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }}>\r\n                        <AttachFileTwoToneIcon />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"text\" color=\"primary\" sx={{ p: 0.5, minWidth: 32 }}>\r\n                        <AddToDriveTwoToneIcon />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs zeroMinWidth />\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={addTaskComment}>\r\n                        Comment\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nAddItemComment.propTypes = {\r\n    itemId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\r\n};\r\n\r\nexport default AddItemComment;\r\n"]},"metadata":{},"sourceType":"module"}