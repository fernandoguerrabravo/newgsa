{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/global_tune/src/views/application/mail/MailList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Box, ButtonBase, Checkbox, Grid, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, useMediaQuery } from '@mui/material'; // third-party\n\nimport { format } from 'date-fns'; // project imports\n\nimport MailEmpty from './MailEmpty';\nimport MailListHeader from './MailListHeader';\nimport Chip from 'ui-component/extended/Chip';\nimport MainCard from 'ui-component/cards/MainCard'; // assets\n\nimport AttachmentTwoToneIcon from '@mui/icons-material/AttachmentTwoTone';\nimport StarBorderTwoToneIcon from '@mui/icons-material/StarBorderTwoTone';\nimport StarTwoToneIcon from '@mui/icons-material/StarTwoTone';\nimport LabelTwoToneIcon from '@mui/icons-material/LabelTwoTone';\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveTwoTone';\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport VisibilityOffTwoToneIcon from '@mui/icons-material/VisibilityOffTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/profile', true); // ==============================|| TABLE HEADER ||============================== //\n\n\nfunction EnhancedTableHead({\n  selected\n}) {\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"none\",\n        colSpan: 5,\n        children: /*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  selected: PropTypes.array\n}; // ==============================|| TABLE HEADER TOOLBAR ||============================== //\n\nconst EnhancedTableToolbar = ({\n  numSelected\n}) => /*#__PURE__*/_jsxDEV(Toolbar, {\n  sx: {\n    p: 0,\n    pl: 1,\n    pr: 1,\n    ...(numSelected > 0 && {\n      color: theme => theme.palette.secondary.main\n    })\n  },\n  children: numSelected > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"inherit\",\n    variant: \"h4\",\n    component: \"div\",\n    children: [numSelected, \" Mail Selected\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 5\n}, this);\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; // ==============================|| CUSTOMER LIST ||============================== //\n\nconst MailList = ({\n  data,\n  search,\n  handleSearch,\n  handleDrawerOpen,\n  handleUserDetails,\n  handleStarredChange,\n  handleImportantChange\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event === null || event === void 0 ? void 0 : event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n  const [denseTable, setDenseTable] = useState(false);\n\n  const handleDenseTable = () => {\n    setDenseTable(!denseTable);\n  };\n\n  const darkBG = theme.palette.mode === 'dark' ? 'dark.main' : 'grey.100';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: matchDownSM ? 3 : 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(MailListHeader, {\n          search: search,\n          handleSearch: handleSearch,\n          length: data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          handleChangePage: handleChangePage,\n          handleChangeRowsPerPage: handleChangeRowsPerPage,\n          handleDrawerOpen: handleDrawerOpen,\n          handleDenseTable: handleDenseTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: data.length ? /*#__PURE__*/_jsxDEV(MainCard, {\n          content: false,\n          sx: {\n            bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : 'grey.50'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: denseTable ? 'small' : undefined,\n              \"aria-labelledby\": \"tableTitle\",\n              sx: {\n                minWidth: 320,\n                '& td': {\n                  whiteSpace: 'nowrap',\n                  px: 0.75,\n                  py: denseTable ? 0.5 : 1.25\n                }\n              },\n              children: [selected.length > 0 && /*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n                selected: selected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                  const isItemSelected = isSelected(row.profile.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    sx: {\n                      bgcolor: !row.isRead ? darkBG : '',\n                      '& td:last-child>div': {\n                        position: 'absolute',\n                        top: '50%',\n                        right: 5,\n                        transform: 'translateY(-50%)',\n                        display: 'none',\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff',\n                        boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.1)',\n                        borderRadius: '12px',\n                        py: 1,\n                        px: 1.75,\n                        '& button + button': {\n                          ml: 0.625\n                        }\n                      },\n                      '&:hover': {\n                        '& td:last-child>div': {\n                          display: 'block'\n                        }\n                      }\n                    },\n                    \"aria-checked\": isItemSelected,\n                    tabIndex: -1,\n                    selected: isItemSelected,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: isItemSelected,\n                        color: \"primary\",\n                        onChange: event => handleClick(event, row.profile.name),\n                        inputProps: {\n                          'aria-labelledby': labelId\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                        icon: /*#__PURE__*/_jsxDEV(StarBorderTwoToneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 67\n                        }, this),\n                        checkedIcon: /*#__PURE__*/_jsxDEV(StarTwoToneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 74\n                        }, this),\n                        sx: {\n                          '&.Mui-checked': {\n                            color: theme.palette.warning.dark\n                          }\n                        },\n                        checked: row.starred,\n                        onChange: event => handleStarredChange(event, row),\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                        icon: /*#__PURE__*/_jsxDEV(LabelOutlinedIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 67\n                        }, this),\n                        checkedIcon: /*#__PURE__*/_jsxDEV(LabelTwoToneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 74\n                        }, this),\n                        sx: {\n                          '&.Mui-checked': {\n                            color: theme.palette.secondary.main\n                          }\n                        },\n                        checked: row.important,\n                        onChange: event => handleImportantChange(event, row),\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      id: labelId,\n                      sx: {\n                        cursor: 'pointer'\n                      },\n                      onClick: e => handleUserDetails(e, row),\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        alignItems: \"center\",\n                        sx: {\n                          flexWrap: 'nowrap'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Avatar, {\n                            sx: {\n                              width: denseTable ? 30 : 40,\n                              height: denseTable ? 30 : 40\n                            },\n                            alt: row.profile.name,\n                            src: row.profile && row.profile.avatar && avatarImage(`./${row.profile.avatar}`).default\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: true,\n                          zeroMinWidth: true,\n                          children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n                            disableRipple: true,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              align: \"left\",\n                              variant: row.isRead ? 'body2' : 'subtitle1',\n                              component: \"div\",\n                              children: row.profile.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 248,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 247,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        cursor: 'pointer'\n                      },\n                      onClick: e => handleUserDetails(e, row),\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        component: \"span\",\n                        sx: {\n                          display: 'flex',\n                          width: {\n                            xs: 220,\n                            md: 350,\n                            lg: 600,\n                            xl: 700\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: row.isRead ? 'body2' : 'subtitle1',\n                          sx: {\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            whiteSpace: 'nowrap',\n                            display: 'block'\n                          },\n                          children: [row.subject, \" - \", row.message]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 61\n                        }, this), row.promotions && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: \"Promotions\",\n                          size: \"small\",\n                          sx: {\n                            color: theme.palette.primary.main,\n                            bgcolor: theme.palette.primary.light\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 65\n                        }, this), row.forums && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: \"Forums\",\n                          size: \"small\",\n                          sx: {\n                            ml: row.promotions ? 1 : 0,\n                            mr: row.attach ? 1 : 0,\n                            color: theme.palette.warning.dark,\n                            bgcolor: theme.palette.warning.light\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: row.attach && /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"large\",\n                        children: /*#__PURE__*/_jsxDEV(AttachmentTwoToneIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 310,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      sx: {\n                        position: 'relative'\n                      },\n                      children: [format(new Date(row.time), 'd MMM yy HH:mm a'), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"large\",\n                          children: /*#__PURE__*/_jsxDEV(ArchiveTwoToneIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 318,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"large\",\n                          children: /*#__PURE__*/_jsxDEV(MailTwoToneIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 321,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"large\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 324,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"large\",\n                          children: /*#__PURE__*/_jsxDEV(VisibilityOffTwoToneIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 326,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 53\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(MailEmpty, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          pt: '0 !important',\n          display: {\n            xs: 'block',\n            sm: 'none'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [],\n          component: \"div\",\n          count: data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MailList, \"2RAMgEo3E40J52Le21xn9/MZdEM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c3 = MailList;\nMailList.propTypes = {\n  data: PropTypes.array,\n  handleDrawerOpen: PropTypes.func,\n  handleUserDetails: PropTypes.func,\n  handleStarredChange: PropTypes.func,\n  handleImportantChange: PropTypes.func,\n  handleSearch: PropTypes.func,\n  search: PropTypes.string\n};\nexport default MailList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"MailList\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/global_tune/src/views/application/mail/MailList.js"],"names":["PropTypes","useState","useTheme","Avatar","Box","ButtonBase","Checkbox","Grid","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","useMediaQuery","format","MailEmpty","MailListHeader","Chip","MainCard","AttachmentTwoToneIcon","StarBorderTwoToneIcon","StarTwoToneIcon","LabelTwoToneIcon","LabelOutlinedIcon","ArchiveTwoToneIcon","MailTwoToneIcon","DeleteTwoToneIcon","VisibilityOffTwoToneIcon","avatarImage","require","context","EnhancedTableHead","selected","length","propTypes","array","EnhancedTableToolbar","numSelected","p","pl","pr","color","theme","palette","secondary","main","number","isRequired","MailList","data","search","handleSearch","handleDrawerOpen","handleUserDetails","handleStarredChange","handleImportantChange","matchDownSM","breakpoints","down","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","event","name","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","isSelected","emptyRows","Math","max","denseTable","setDenseTable","handleDenseTable","darkBG","mode","bgcolor","undefined","minWidth","whiteSpace","px","py","map","row","index","isItemSelected","profile","labelId","isRead","position","top","right","transform","display","background","dark","boxShadow","borderRadius","ml","warning","starred","important","cursor","e","flexWrap","width","height","avatar","default","xs","md","lg","xl","overflow","textOverflow","subject","message","promotions","primary","light","forums","mr","attach","Date","time","pt","sm","func","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    ButtonBase,\r\n    Checkbox,\r\n    Grid,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Toolbar,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport { format } from 'date-fns';\r\n\r\n// project imports\r\nimport MailEmpty from './MailEmpty';\r\nimport MailListHeader from './MailListHeader';\r\nimport Chip from 'ui-component/extended/Chip';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport AttachmentTwoToneIcon from '@mui/icons-material/AttachmentTwoTone';\r\nimport StarBorderTwoToneIcon from '@mui/icons-material/StarBorderTwoTone';\r\nimport StarTwoToneIcon from '@mui/icons-material/StarTwoTone';\r\nimport LabelTwoToneIcon from '@mui/icons-material/LabelTwoTone';\r\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveTwoTone';\r\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport VisibilityOffTwoToneIcon from '@mui/icons-material/VisibilityOffTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| TABLE HEADER ||============================== //\r\n\r\nfunction EnhancedTableHead({ selected }) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"none\" colSpan={5}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    selected: PropTypes.array\r\n};\r\n\r\n// ==============================|| TABLE HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        {numSelected > 0 && (\r\n            <Typography color=\"inherit\" variant=\"h4\" component=\"div\">\r\n                {numSelected} Mail Selected\r\n            </Typography>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| CUSTOMER LIST ||============================== //\r\n\r\nconst MailList = ({ data, search, handleSearch, handleDrawerOpen, handleUserDetails, handleStarredChange, handleImportantChange }) => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event?.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\r\n\r\n    const [denseTable, setDenseTable] = useState(false);\r\n    const handleDenseTable = () => {\r\n        setDenseTable(!denseTable);\r\n    };\r\n\r\n    const darkBG = theme.palette.mode === 'dark' ? 'dark.main' : 'grey.100';\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={matchDownSM ? 3 : 1}>\r\n                <Grid item xs={12}>\r\n                    <MailListHeader\r\n                        search={search}\r\n                        handleSearch={handleSearch}\r\n                        length={data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        handleChangePage={handleChangePage}\r\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        handleDrawerOpen={handleDrawerOpen}\r\n                        handleDenseTable={handleDenseTable}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {data.length ? (\r\n                        <MainCard content={false} sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : 'grey.50' }}>\r\n                            {/* table */}\r\n                            <TableContainer>\r\n                                <Table\r\n                                    size={denseTable ? 'small' : undefined}\r\n                                    aria-labelledby=\"tableTitle\"\r\n                                    sx={{ minWidth: 320, '& td': { whiteSpace: 'nowrap', px: 0.75, py: denseTable ? 0.5 : 1.25 } }}\r\n                                >\r\n                                    {selected.length > 0 && <EnhancedTableHead selected={selected} />}\r\n                                    <TableBody>\r\n                                        {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                            const isItemSelected = isSelected(row.profile.name);\r\n                                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                            return (\r\n                                                <TableRow\r\n                                                    hover\r\n                                                    sx={{\r\n                                                        bgcolor: !row.isRead ? darkBG : '',\r\n                                                        '& td:last-child>div': {\r\n                                                            position: 'absolute',\r\n                                                            top: '50%',\r\n                                                            right: 5,\r\n                                                            transform: 'translateY(-50%)',\r\n                                                            display: 'none',\r\n                                                            background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff',\r\n                                                            boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.1)',\r\n                                                            borderRadius: '12px',\r\n                                                            py: 1,\r\n                                                            px: 1.75,\r\n                                                            '& button + button': {\r\n                                                                ml: 0.625\r\n                                                            }\r\n                                                        },\r\n                                                        '&:hover': {\r\n                                                            '& td:last-child>div': {\r\n                                                                display: 'block'\r\n                                                            }\r\n                                                        }\r\n                                                    }}\r\n                                                    aria-checked={isItemSelected}\r\n                                                    tabIndex={-1}\r\n                                                    key={index}\r\n                                                    selected={isItemSelected}\r\n                                                >\r\n                                                    <TableCell>\r\n                                                        <Checkbox\r\n                                                            checked={isItemSelected}\r\n                                                            color=\"primary\"\r\n                                                            onChange={(event) => handleClick(event, row.profile.name)}\r\n                                                            inputProps={{\r\n                                                                'aria-labelledby': labelId\r\n                                                            }}\r\n                                                        />\r\n                                                        <Checkbox\r\n                                                            icon={<StarBorderTwoToneIcon />}\r\n                                                            checkedIcon={<StarTwoToneIcon />}\r\n                                                            sx={{ '&.Mui-checked': { color: theme.palette.warning.dark } }}\r\n                                                            checked={row.starred}\r\n                                                            onChange={(event) => handleStarredChange(event, row)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                        <Checkbox\r\n                                                            icon={<LabelOutlinedIcon />}\r\n                                                            checkedIcon={<LabelTwoToneIcon />}\r\n                                                            sx={{ '&.Mui-checked': { color: theme.palette.secondary.main } }}\r\n                                                            checked={row.important}\r\n                                                            onChange={(event) => handleImportantChange(event, row)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell\r\n                                                        id={labelId}\r\n                                                        sx={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => handleUserDetails(e, row)}\r\n                                                    >\r\n                                                        <Grid container spacing={2} alignItems=\"center\" sx={{ flexWrap: 'nowrap' }}>\r\n                                                            <Grid item>\r\n                                                                <Avatar\r\n                                                                    sx={{\r\n                                                                        width: denseTable ? 30 : 40,\r\n                                                                        height: denseTable ? 30 : 40\r\n                                                                    }}\r\n                                                                    alt={row.profile.name}\r\n                                                                    src={\r\n                                                                        row.profile &&\r\n                                                                        row.profile.avatar &&\r\n                                                                        avatarImage(`./${row.profile.avatar}`).default\r\n                                                                    }\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs zeroMinWidth>\r\n                                                                <ButtonBase disableRipple>\r\n                                                                    <Typography\r\n                                                                        align=\"left\"\r\n                                                                        variant={row.isRead ? 'body2' : 'subtitle1'}\r\n                                                                        component=\"div\"\r\n                                                                    >\r\n                                                                        {row.profile.name}\r\n                                                                    </Typography>\r\n                                                                </ButtonBase>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ cursor: 'pointer' }} onClick={(e) => handleUserDetails(e, row)}>\r\n                                                        <Box\r\n                                                            component=\"span\"\r\n                                                            sx={{\r\n                                                                display: 'flex',\r\n                                                                width: {\r\n                                                                    xs: 220,\r\n                                                                    md: 350,\r\n                                                                    lg: 600,\r\n                                                                    xl: 700\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                            <Typography\r\n                                                                variant={row.isRead ? 'body2' : 'subtitle1'}\r\n                                                                sx={{\r\n                                                                    overflow: 'hidden',\r\n                                                                    textOverflow: 'ellipsis',\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    display: 'block'\r\n                                                                }}\r\n                                                            >\r\n                                                                {row.subject} - {row.message}\r\n                                                            </Typography>\r\n                                                            {row.promotions && (\r\n                                                                <Chip\r\n                                                                    label=\"Promotions\"\r\n                                                                    size=\"small\"\r\n                                                                    sx={{\r\n                                                                        color: theme.palette.primary.main,\r\n                                                                        bgcolor: theme.palette.primary.light\r\n                                                                    }}\r\n                                                                />\r\n                                                            )}\r\n                                                            {row.forums && (\r\n                                                                <Chip\r\n                                                                    label=\"Forums\"\r\n                                                                    size=\"small\"\r\n                                                                    sx={{\r\n                                                                        ml: row.promotions ? 1 : 0,\r\n                                                                        mr: row.attach ? 1 : 0,\r\n                                                                        color: theme.palette.warning.dark,\r\n                                                                        bgcolor: theme.palette.warning.light\r\n                                                                    }}\r\n                                                                />\r\n                                                            )}\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        {row.attach && (\r\n                                                            <IconButton size=\"large\">\r\n                                                                <AttachmentTwoToneIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                        )}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" sx={{ position: 'relative' }}>\r\n                                                        {format(new Date(row.time), 'd MMM yy HH:mm a')}\r\n                                                        <div>\r\n                                                            <IconButton size=\"large\">\r\n                                                                <ArchiveTwoToneIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                            <IconButton size=\"large\">\r\n                                                                <MailTwoToneIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                            <IconButton size=\"large\">\r\n                                                                <DeleteTwoToneIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                            <IconButton size=\"large\">\r\n                                                                <VisibilityOffTwoToneIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                        </div>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow\r\n                                                style={{\r\n                                                    height: 53 * emptyRows\r\n                                                }}\r\n                                            >\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </MainCard>\r\n                    ) : (\r\n                        <MailEmpty />\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ pt: '0 !important', display: { xs: 'block', sm: 'none' } }}>\r\n                    {/* table pagination */}\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[]}\r\n                        component=\"div\"\r\n                        count={data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nMailList.propTypes = {\r\n    data: PropTypes.array,\r\n    handleDrawerOpen: PropTypes.func,\r\n    handleUserDetails: PropTypes.func,\r\n    handleStarredChange: PropTypes.func,\r\n    handleImportantChange: PropTypes.func,\r\n    handleSearch: PropTypes.func,\r\n    search: PropTypes.string\r\n};\r\n\r\nexport default MailList;\r\n"]},"metadata":{},"sourceType":"module"}