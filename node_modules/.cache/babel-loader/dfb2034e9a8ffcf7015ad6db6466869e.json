{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/gsatotal/newgsa/src/views/htsTax/components/HtsGrid.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { green, red, blue } from \"@mui/material/colors\";\nimport UseFetchHts from \"../hooks/UseFetchHts\";\nimport { HtsResultList } from \"./HtsResultList\";\nimport { UseFetchHtsCategory } from \"../hooks/UseFetchHtsCategory\";\nimport { HtsGetListCategories } from \"./HtsGetListCategories\";\nimport HtsHeader from \"./HtsHeader\";\nimport HtsGetListHts from './HtsGetListHts';\nimport UseFetchChina from \"../hooks/USeFetchChina\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HtsGrid = ({\n  encabezado,\n  setencabezado\n}) => {\n  const {\n    data,\n    loading,\n    finales\n  } = UseFetchHts(encabezado.hts);\n  const {\n    categorias\n  } = UseFetchHtsCategory(encabezado.hts);\n  const htschinos = UseFetchChina(encabezado.hts);\n  return (\n    /*#__PURE__*/\n    // Aqui tengo las dos columnas que vamos a renderizar //\n    // Primera Columna Resumen de la Solicitud y Muestra los TAXES\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(HtsHeader, {\n          event: encabezado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Product Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(HtsGetListCategories, {\n                event: categorias\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(HtsGetListHts, {\n          htschino: htschinos,\n          eventos: finales,\n          categorias: categorias,\n          encabezado: encabezado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Suggested HTS Code\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: data.map(img => /*#__PURE__*/_jsxDEV(HtsResultList, { ...img\n                }, img.htsno, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_c = HtsGrid;\nexport default HtsGrid;\n/*\n{\n    data.map(img => (\n        <HtsResultList\n            key={img.htsno}\n            {...img}\n        />\n    ))\n} */\n\n/*\n   <TableBody>\n\n                        {\n                            data.map(img => (\n                                <HtsResultList\n                                    key={img.hts}\n                                    {...img}\n                                />\n                            ))\n                        }\n                    </TableBody> */\n\n/*              <TableBody>\n\n              {\n                  data.map(img => (\n                      <HtsResultList\n                          key={img.htsno}\n                          {...img}\n                      />\n                  ))\n              }\n          </TableBody> */\n\nvar _c;\n\n$RefreshReg$(_c, \"HtsGrid\");","map":{"version":3,"sources":["/Users/admin/Documents/gsatotal/newgsa/src/views/htsTax/components/HtsGrid.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Grid","green","red","blue","UseFetchHts","HtsResultList","UseFetchHtsCategory","HtsGetListCategories","HtsHeader","HtsGetListHts","UseFetchChina","HtsGrid","encabezado","setencabezado","data","loading","finales","hts","categorias","htschinos","map","img","htsno"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { green, red, blue } from \"@mui/material/colors\";\nimport UseFetchHts from \"../hooks/UseFetchHts\";\nimport { HtsResultList } from \"./HtsResultList\";\nimport { UseFetchHtsCategory } from \"../hooks/UseFetchHtsCategory\";\nimport { HtsGetListCategories } from \"./HtsGetListCategories\";\nimport HtsHeader from \"./HtsHeader\";\nimport HtsGetListHts from './HtsGetListHts';\nimport UseFetchChina from \"../hooks/USeFetchChina\";\n\nconst HtsGrid = ({ encabezado, setencabezado }) => {\n  const { data, loading, finales } = UseFetchHts(encabezado.hts);\n  const { categorias } = UseFetchHtsCategory(encabezado.hts);\n  const htschinos = UseFetchChina(encabezado.hts);\n\n  return (\n    // Aqui tengo las dos columnas que vamos a renderizar //\n    // Primera Columna Resumen de la Solicitud y Muestra los TAXES\n    <>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <HtsHeader event={encabezado} />\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Product Category</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{<HtsGetListCategories event={categorias} />}</TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n       \n          { <HtsGetListHts\n\t\t\t\t\t\thtschino={htschinos}\n\t\t\t\t\t\teventos={finales}\n\t\t\t\t\t\tcategorias={categorias}\n\t\t\t\t\t\tencabezado={encabezado}\n\t\t\t\t\t/> }\n        \n      </Grid>\n      <Grid item lg={12} md={12} sm={12} xs={12}>\n        <Paper>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <h4>Suggested HTS Code</h4>\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell />\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((img) => (\n                  <HtsResultList key={img.htsno} {...img} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default HtsGrid;\n\n/*\n{\n    data.map(img => (\n        <HtsResultList\n            key={img.htsno}\n            {...img}\n        />\n    ))\n} */\n/*\n   <TableBody>\n\n                        {\n                            data.map(img => (\n                                <HtsResultList\n                                    key={img.hts}\n                                    {...img}\n                                />\n                            ))\n                        }\n                    </TableBody> */\n\n/*              <TableBody>\n\n              {\n                  data.map(img => (\n                      <HtsResultList\n                          key={img.htsno}\n                          {...img}\n                      />\n                  ))\n              }\n          </TableBody> */\n"]},"metadata":{},"sourceType":"module"}