{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/forms-wizard/ValidationWizard/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, TextField, Typography } from '@mui/material'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  cardName: yup.string().required('First Name is required'),\n  cardNumber: yup.string().required('Last Name is required')\n}); // ==============================|| FORM WIZARD - VALIDATION  ||============================== //\n\nexport default function PaymentForm({\n  paymentData,\n  setPaymentData,\n  handleNext,\n  handleBack,\n  setErrorIndex\n}) {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      cardName: paymentData.cardName,\n      cardNumber: paymentData.cardNumber\n    },\n    validationSchema,\n    onSubmit: values => {\n      setPaymentData({\n        cardName: values.cardName,\n        cardNumber: values.cardNumber\n      });\n      handleNext();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Payment method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cardName\",\n            name: \"cardName\",\n            defaultValue: formik.values.cardName,\n            onChange: formik.handleChange,\n            error: formik.touched.cardName && Boolean(formik.errors.cardName),\n            helperText: formik.touched.cardName && formik.errors.cardName,\n            label: \"Name on card\",\n            fullWidth: true,\n            autoComplete: \"cc-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cardNumber\",\n            name: \"cardNumber\",\n            label: \"Card number\",\n            defaultValue: formik.values.cardNumber,\n            onChange: formik.handleChange,\n            error: formik.touched.cardNumber && Boolean(formik.errors.cardNumber),\n            helperText: formik.touched.cardNumber && formik.errors.cardNumber,\n            fullWidth: true,\n            autoComplete: \"cc-number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"expDate\",\n            label: \"Expiry date\",\n            fullWidth: true,\n            autoComplete: \"cc-exp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cvv\",\n            label: \"CVV\",\n            helperText: \"Last three digits on signature strip\",\n            fullWidth: true,\n            autoComplete: \"cc-csc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"secondary\",\n              name: \"saveCard\",\n              value: \"yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 38\n            }, this),\n            label: \"Remember credit card details for next time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleBack,\n              sx: {\n                my: 3,\n                ml: 1\n              },\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                sx: {\n                  my: 3,\n                  ml: 1\n                },\n                onClick: () => setErrorIndex(1),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = PaymentForm;\nPaymentForm.propTypes = {\n  paymentData: PropTypes.object,\n  setPaymentData: PropTypes.func,\n  handleNext: PropTypes.func,\n  handleBack: PropTypes.func,\n  setErrorIndex: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/fernandoguerra/Documents/gsaultimo/src/views/forms/forms-wizard/ValidationWizard/PaymentForm.js"],"names":["PropTypes","Button","Checkbox","FormControlLabel","Grid","Stack","TextField","Typography","AnimateButton","useFormik","yup","validationSchema","object","cardName","string","required","cardNumber","PaymentForm","paymentData","setPaymentData","handleNext","handleBack","setErrorIndex","formik","initialValues","onSubmit","values","mb","handleSubmit","handleChange","touched","Boolean","errors","my","ml","propTypes","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, TextField, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    cardName: yup.string().required('First Name is required'),\r\n    cardNumber: yup.string().required('Last Name is required')\r\n});\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nexport default function PaymentForm({ paymentData, setPaymentData, handleNext, handleBack, setErrorIndex }) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cardName: paymentData.cardName,\r\n            cardNumber: paymentData.cardNumber\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            setPaymentData({\r\n                cardName: values.cardName,\r\n                cardNumber: values.cardNumber\r\n            });\r\n            handleNext();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Payment method\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                            id=\"cardName\"\r\n                            name=\"cardName\"\r\n                            defaultValue={formik.values.cardName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.cardName && Boolean(formik.errors.cardName)}\r\n                            helperText={formik.touched.cardName && formik.errors.cardName}\r\n                            label=\"Name on card\"\r\n                            fullWidth\r\n                            autoComplete=\"cc-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField\r\n                            id=\"cardNumber\"\r\n                            name=\"cardNumber\"\r\n                            label=\"Card number\"\r\n                            defaultValue={formik.values.cardNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.cardNumber && Boolean(formik.errors.cardNumber)}\r\n                            helperText={formik.touched.cardNumber && formik.errors.cardNumber}\r\n                            fullWidth\r\n                            autoComplete=\"cc-number\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField id=\"cvv\" label=\"CVV\" helperText=\"Last three digits on signature strip\" fullWidth autoComplete=\"cc-csc\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n                            label=\"Remember credit card details for next time\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <Button onClick={handleBack} sx={{ my: 3, ml: 1 }}>\r\n                                Back\r\n                            </Button>\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\" sx={{ my: 3, ml: 1 }} onClick={() => setErrorIndex(1)}>\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nPaymentForm.propTypes = {\r\n    paymentData: PropTypes.object,\r\n    setPaymentData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    handleBack: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}