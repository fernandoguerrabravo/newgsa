{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/newgsa/src/ui-component/extended/ImageList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'; // material-ui\n\nimport { ImageListItem, ImageListItemBar } from '@mui/material';\nimport MImageList from '@mui/material/ImageList'; // set image width & height radio\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction srcset(image, width, height, rows = 1, cols = 1) {\n  return `${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format 1x,\n  ${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format&dpr=2 2x`;\n} // ==============================|| IMAGE LIST/GRID ||============================== //\n\n\nconst ImageList = ({\n  itemData\n}) => {\n  _s();\n\n  const customization = useSelector(state => state.customization);\n  return /*#__PURE__*/_jsxDEV(MImageList, {\n    sx: {\n      // Promote the list into its own layer in Chrome. This costs memory, but helps keeping high FPS.\n      transform: 'translateZ(0)',\n      overflowY: 'visible',\n      mb: 0\n    },\n    gap: 8,\n    children: itemData.map(item => {\n      const cols = item.featured ? 2 : 1;\n      const rows = item.featured ? 2 : 1;\n      return /*#__PURE__*/_jsxDEV(ImageListItem, {\n        cols: cols,\n        rows: rows,\n        sx: {\n          overflow: 'hidden',\n          borderRadius: `${customization.borderRadius}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          srcSet: srcset(item.img, 250, 200, rows, cols),\n          alt: item.title,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n          sx: {\n            background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n          },\n          title: item.title,\n          position: \"top\",\n          actionPosition: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, item.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageList, \"IpCwiETaEyrNoFSSMPW6QZ3R5/4=\", false, function () {\n  return [useSelector];\n});\n\n_c = ImageList;\nImageList.propTypes = {\n  itemData: PropTypes.array\n};\nexport default ImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"sources":["/Users/admin/Documents/newgsa/src/ui-component/extended/ImageList.js"],"names":["PropTypes","useSelector","ImageListItem","ImageListItemBar","MImageList","srcset","image","width","height","rows","cols","ImageList","itemData","customization","state","transform","overflowY","mb","map","item","featured","overflow","borderRadius","img","title","background","propTypes","array"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,eAAhD;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAI,GAAG,CAA7C,EAAgDC,IAAI,GAAG,CAAvD,EAA0D;AACtD,SAAQ,GAAEJ,KAAM,MAAKC,KAAK,GAAGG,IAAK,MAAKF,MAAM,GAAGC,IAAK;AACzD,IAAIH,KAAM,MAAKC,KAAK,GAAGG,IAAK,MAAKF,MAAM,GAAGC,IAAK,gCAD3C;AAEH,C,CAED;;;AAEA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAMC,aAAa,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AAEA,sBACI,QAAC,UAAD;AACI,IAAA,EAAE,EAAE;AACA;AACAE,MAAAA,SAAS,EAAE,eAFX;AAGAC,MAAAA,SAAS,EAAE,SAHX;AAIAC,MAAAA,EAAE,EAAE;AAJJ,KADR;AAOI,IAAA,GAAG,EAAE,CAPT;AAAA,cASKL,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AACpB,YAAMT,IAAI,GAAGS,IAAI,CAACC,QAAL,GAAgB,CAAhB,GAAoB,CAAjC;AACA,YAAMX,IAAI,GAAGU,IAAI,CAACC,QAAL,GAAgB,CAAhB,GAAoB,CAAjC;AAEA,0BACI,QAAC,aAAD;AAEI,QAAA,IAAI,EAAEV,IAFV;AAGI,QAAA,IAAI,EAAED,IAHV;AAII,QAAA,EAAE,EAAE;AAAEY,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,YAAY,EAAG,GAAET,aAAa,CAACS,YAAa;AAAlE,SAJR;AAAA,gCAMI;AAAK,UAAA,MAAM,EAAEjB,MAAM,CAACc,IAAI,CAACI,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBd,IAArB,EAA2BC,IAA3B,CAAnB;AAAqD,UAAA,GAAG,EAAES,IAAI,CAACK,KAA/D;AAAsE,UAAA,OAAO,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,gBAAD;AACI,UAAA,EAAE,EAAE;AACAC,YAAAA,UAAU,EAAE;AADZ,WADR;AAII,UAAA,KAAK,EAAEN,IAAI,CAACK,KAJhB;AAKI,UAAA,QAAQ,EAAC,KALb;AAMI,UAAA,cAAc,EAAC;AANnB;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SACSL,IAAI,CAACI,GADd;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAtBA;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAtCD;;GAAMZ,S;UACoBV,W;;;KADpBU,S;AAwCNA,SAAS,CAACe,SAAV,GAAsB;AAClBd,EAAAA,QAAQ,EAAEZ,SAAS,CAAC2B;AADF,CAAtB;AAIA,eAAehB,SAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { ImageListItem, ImageListItemBar } from '@mui/material';\r\nimport MImageList from '@mui/material/ImageList';\r\n\r\n// set image width & height radio\r\nfunction srcset(image, width, height, rows = 1, cols = 1) {\r\n    return `${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format 1x,\r\n  ${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format&dpr=2 2x`;\r\n}\r\n\r\n// ==============================|| IMAGE LIST/GRID ||============================== //\r\n\r\nconst ImageList = ({ itemData }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    return (\r\n        <MImageList\r\n            sx={{\r\n                // Promote the list into its own layer in Chrome. This costs memory, but helps keeping high FPS.\r\n                transform: 'translateZ(0)',\r\n                overflowY: 'visible',\r\n                mb: 0\r\n            }}\r\n            gap={8}\r\n        >\r\n            {itemData.map((item) => {\r\n                const cols = item.featured ? 2 : 1;\r\n                const rows = item.featured ? 2 : 1;\r\n\r\n                return (\r\n                    <ImageListItem\r\n                        key={item.img}\r\n                        cols={cols}\r\n                        rows={rows}\r\n                        sx={{ overflow: 'hidden', borderRadius: `${customization.borderRadius}px` }}\r\n                    >\r\n                        <img srcSet={srcset(item.img, 250, 200, rows, cols)} alt={item.title} loading=\"lazy\" />\r\n                        <ImageListItemBar\r\n                            sx={{\r\n                                background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\r\n                            }}\r\n                            title={item.title}\r\n                            position=\"top\"\r\n                            actionPosition=\"left\"\r\n                        />\r\n                    </ImageListItem>\r\n                );\r\n            })}\r\n        </MImageList>\r\n    );\r\n};\r\n\r\nImageList.propTypes = {\r\n    itemData: PropTypes.array\r\n};\r\n\r\nexport default ImageList;\r\n"]},"metadata":{},"sourceType":"module"}